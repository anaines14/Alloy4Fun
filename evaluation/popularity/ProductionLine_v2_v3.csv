predicate;formula;frequency;closest_solution;solution_distance
this/inv6;(all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts))));104;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));3
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (some ((ref0 & Dangerous) & Component))));40;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));10
this/inv7;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 in Dangerous)));29;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => (ref0 in Dangerous)));4
this/inv7;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) in Dangerous) => (ref0 in Dangerous)));26;(all ref0:(one Component)|((ref0 in ((^ (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));4
this/inv4;(all ref0:(one Component),ref1:(one Material)|((no (ref1 . (Product <: parts))) && (some (ref0 . (Product <: parts)))));24;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));8
this/inv6;(all ref0:(one Component)|((ref0 -> ref0) !in (Product <: parts)));20;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));3
this/inv6;(all ref0:(one Component)|(ref0 !in (ref0 . (* (Product <: parts)))));19;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));4
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers)))));18;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;(all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ)))));18;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one ((Workstation <: workers) . ref0)) && (some (ref1 . (Workstation <: workers)))));16;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));4
this/inv2;(all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers))));15;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));8
this/inv8;(all ref0:(one Dangerous)|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human));14;(all ref0:(one (Component & Dangerous))|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human));2
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));13;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));5
this/inv4;((no (Material . (Product <: parts))) && (some (Component . (Product <: parts))));12;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));6
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));12;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))));11;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv3;(all ref0:(one Component)|(one ((Component <: workstation) . ref0)));11;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (ref0 . (~ (Workstation <: workers)))) && (some (ref1 . (Workstation <: workers)))));11;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));4
this/inv1;(no (Human & Robot));10;(no (Worker - (Human + Robot)));4
this/inv6;(all ref0:(one Component)|(! (ref0 in (ref0 . (Product <: parts)))));10;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));3
this/inv9;(all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ))));10;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(some ((Workstation <: workers) . ref1))));9;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 & (Workstation . (Workstation <: workers))))));9;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));8
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers))));9;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) && (some (ref1 . (Workstation <: workers)))));8;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));7
this/inv6;(no ((Product <: parts) & iden));8;(no ((^ (Product <: parts)) & iden));1
this/inv6;(all ref0:(one Component)|(no (ref0 & (ref0 . (Product <: parts)))));8;(all ref0:(one Component)|(no (ref0 & (ref0 . (^ (Product <: parts))))));3
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (Dangerous in ref0)));8;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));7
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(ref1 in (Workstation . (Workstation <: workers)))));8;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));7
this/inv1;(all ref0:(one Worker)|((ref0 in Human) => (ref0 !in Robot)));7;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));6
this/inv2;(all ref0:(one Worker)|(ref0 in (Workstation . (Workstation <: workers))));7;((Workstation <: workers) in (Workstation one->some Worker));7
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref0 in (ref1 . (Product <: parts))))) && (all ref2:(one Material)|(no ref3:(one Product)|(ref2 in (ref3 . (Product <: parts))))));7;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material)|(no ref3:(one Product)|((ref2 -> ref3) in (Product <: parts)))));12
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) <=> (ref1 !in (ref2 . (Workstation <: workers)))));7;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))));8
this/inv7;(all ref0:(one Component)|((ref0 in Dangerous) => ((ref0 . (Product <: parts)) in Dangerous)));7;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((some ((Workstation <: workers) . ref0)) && (some (ref1 . (Workstation <: workers)))));7;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));7;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));4
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 != ref1) && (ref1 in (ref0 . (Product <: parts)))));7;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));10
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref0 . (Component <: workstation)))) => (Human !in (ref1 . (Workstation <: workers)))));7;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref0 . (Component <: workstation)))) => ((ref1 . (Workstation <: workers)) !in Human)));6
this/inv1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));6;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));6
this/inv4;(all ref0:(one Component)|((all ref1:(one Material)|(no (ref1 . (Product <: parts)))) && (some (ref0 . (Product <: parts)))));6;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));8
this/inv3;(all ref0:(one Component)|(some ref1:(one Workstation)|(ref1 in (ref0 . (Component <: workstation)))));6;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref1 in (ref0 . (Component <: workstation)))));4
this/inv9;(end in (begin . (^ (Workstation <: succ))));6;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous))));6;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)));6;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv6;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (Product <: parts)))));6;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (^ (Product <: parts))))));3
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (^ (Product <: parts))))|((ref1 in Dangerous) => (ref0 in Dangerous))));6;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));4
this/inv9;(lone (((begin . (^ (Workstation <: succ))) :> (begin + end)) - begin));6;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv7;(all ref0:(one Component)|((some ref1:(one (ref0 . (Product <: parts)))|(ref1 in Dangerous)) <=> (ref0 in Dangerous)));6;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));6
this/inv5;(all ref0:(one Workstation)|(no (((ref0 . (Workstation <: workers)) & Human) & Robot)));6;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));7
this/inv6;(no ref0:(one Component)|(ref0 in (ref0 . (Product <: parts))));5;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));3
this/inv5;((all ref0:(one Workstation)|((Robot in (ref0 . (Workstation <: workers))) => (Human !in (ref0 . (Workstation <: workers))))) && (all ref1:(one Workstation)|((Human in (ref1 . (Workstation <: workers))) => (Robot !in (ref1 . (Workstation <: workers))))));5;((all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Human)) => (no ((ref0 . (Workstation <: workers)) & Robot)))) && (all ref1:(one Workstation)|((some ((ref1 . (Workstation <: workers)) & Robot)) => (no ((ref1 . (Workstation <: workers)) & Human)))));20
this/inv6;(Component !in (Component . (Product <: parts)));5;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));6
this/inv7;(all ref0:(one Product)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 in Dangerous)));5;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => (ref0 in Dangerous)));4
this/inv9;(end in (begin . (* (Workstation <: succ))));5;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;(no ((^ (Workstation <: succ)) & iden));5;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));12
this/inv9;(Workstation = (begin . (* (Workstation <: succ))));5;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(some (ref1 . (Workstation <: workers))));5;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));9
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (some (ref0 & Dangerous))));5;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));8
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));5;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));8
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 -> ref1) in (Product <: parts)) => ((ref1 -> ref0) !in (Product <: parts))));5;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));12
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 in (ref1 . (Product <: parts))) => (ref0 != ref1)));5;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));5
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));5;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv2;((one ((Workstation <: workers) . Worker)) && (some (Workstation . (Workstation <: workers))));5;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => (ref0 != ref1)));5;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));5
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (Product <: parts))) => (ref0 in Dangerous)));5;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));5
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => (ref0 !in ((ref1 . (Workstation <: succ)) . (Workstation <: workers)))));5;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));14
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));5;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));5
this/inv8;(all ref0:(one Component)|(some ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (all ref2:(one Human)|((ref1 -> ref2) !in (Workstation <: workers))))));5;(all ref0:(one Component),ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (! (some ref2:(one Human)|((ref1 -> ref2) in (Workstation <: workers))))));9
this/inv4;((Product <: parts) in (Component -> Product));5;((Product <: parts) in (Component ->some Product));2
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));5;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv4;(all ref0:(one Component)|(some (ref0 . (Product <: parts))));4;(((Product <: parts) . Product) = Component);6
this/inv3;((Component <: workstation) in (Component one-> Workstation));4;((Component <: workstation) in (Component ->one Workstation));2
this/inv9;(Workstation in (begin . (* (Workstation <: succ))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));10
this/inv6;(all ref0:(one Component)|(no (ref0 . (Product <: parts))));4;(all ref0:(one Component)|(no (ref0 & (ref0 . (^ (Product <: parts))))));5
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 . (Component <: workstation)) in (((ref0 . (Component <: workstation)) . (Workstation <: succ)) . (^ (Workstation <: succ)))));4;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));10
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 . (Component <: workstation)) in (((ref0 . (Component <: workstation)) . (~ (Workstation <: succ))) . (^ (~ (Workstation <: succ))))));4;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));12
this/inv6;(all ref0:(one Component)|(Component !in (ref0 . (Product <: parts))));4;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));5
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (end in (begin . (* (Workstation <: succ)))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv6;(no ((* (Product <: parts)) & iden));4;(no ((^ (Product <: parts)) & iden));2
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 in end) => (no (ref2 . (Workstation <: succ))))));4;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));10
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((ref0 . (Product <: parts)) . (Component <: workstation)) . (^ (Workstation <: succ)))));4;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));7
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((Component . (Product <: parts)) . (Component <: workstation)) . (^ (Workstation <: succ)))));4;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));7
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref0 . (Product <: parts))) > 0) && (no (ref1 . (Product <: parts)))));4;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));4
this/inv9;((no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));5
this/inv2;(all ref0:(one Worker)|(one ((Workstation <: workers) . ref0)));4;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));8
this/inv9;(Workstation = (begin . (^ (Workstation <: succ))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv9;(all ref0:(one Workstation)|(one (ref0 . (^ (Workstation <: succ)))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 != ref1)));4;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));7
this/inv9;(all ref0:(one Workstation)|(((ref0 !in end) && (ref0 in (begin . (* (Workstation <: succ))))) || (ref0 in begin) || (ref0 in end)));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref1 -> ref0) in (Workstation <: workers)) => ((ref0 in Human) || (ref0 in Robot))));4;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));9
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv3;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Component <: workstation)))));4;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in (ref1 . (~ (Component <: workstation))))));5
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));4;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));11
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(some ref2:(one Workstation)|(one ((ref1 & (ref2 . (Workstation <: workers))) + (ref1 & ((Workstation - ref2) . (Workstation <: workers))))))));4;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(some ref2:(one Workstation)|(one ((ref1 & (ref2 . (Workstation <: workers))) - (ref1 & ((Workstation - ref2) . (Workstation <: workers))))))));8
this/inv7;(all ref0:(one Product)|(((ref0 . (^ (Product <: parts))) in Dangerous) => (ref0 in Dangerous)));4;(all ref0:(one Component)|((ref0 in ((^ (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));4
this/inv5;(all ref0:(one Workstation)|((Robot in (ref0 . (Workstation <: workers))) => (Human !in (ref0 . (Workstation <: workers)))));4;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));10
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) !in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));4;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));5
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ)))));4;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (~ (^ (Workstation <: succ))))));10
this/inv1;(all ref0:(one Human),ref1:(one Robot)|((ref0 in Worker) && (ref1 in Worker)));4;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));9
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 -> ref1) !in (Product <: parts)));4;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));6
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));4;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv4;(all ref0:(one Component)|(((# (ref0 . (Product <: parts))) > 0) && (all ref1:(one Material)|(no (ref1 . (Product <: parts))))));4;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));4
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (Human !in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))));4;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));4
this/inv2;((all ref0:(one Workstation)|(one ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));4;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));8
this/inv7;(all ref0:(one Component)|(some ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 in Dangerous))));4;(all ref0:(one Component),ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 in Dangerous)));4
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in ref0)));3;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv3;(all ref0:(one Component)|(one (ref0 . (~ (Component <: workstation)))));3;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));3
this/inv6;(all ref0:(one Product)|(ref0 !in (ref0 . (Product <: parts))));3;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));3
this/inv2;((Workstation <: workers) in (Workstation one-> Worker));3;((Workstation <: workers) in (Workstation one->some Worker));2
this/inv7;(all ref0:(one Component)|(some ref1:(one Component)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous))));3;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv1;((Worker in Human) || (Worker in Robot));3;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));5
this/inv9;((all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one (Workstation - begin))|(one ref3:(one ((Workstation - begin) - ref2))|(ref2 in (ref3 . (Workstation <: succ))))) && (no ref0:(one Workstation)|(begin in (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(ref2 in (Workstation . (Workstation <: workers)))));3;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));9
this/inv4;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) || ((ref0 in Material) => (no (ref0 . (Product <: parts))))));3;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));4
this/inv6;(all ref0:(one Component)|(no ((Product <: parts) . ref0)));3;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));6
this/inv6;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(ref0 != ref1));3;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));10
this/inv9;(no (begin - end));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (Workstation in (begin . (* (Workstation <: succ)))));3;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv6;(all ref0:(one Component)|((ref0 . (Product <: parts)) !in Component));3;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));5
this/inv9;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (Workstation <: succ))) && (ref0 !in (Workstation . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (some (ref3 . (Workstation <: succ))))) && (all ref4:(one Workstation)|((ref4 !in begin) => (ref4 in (Workstation . (Workstation <: succ))))));3;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (Workstation <: succ))) && (ref0 !in (Workstation . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))) && (all ref4:(one Workstation)|((ref4 !in begin) => (ref4 in (Workstation . (Workstation <: succ))))));12
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((lone ((Workstation <: workers) . ref0)) && (some (ref1 . (Workstation <: workers)))));3;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));3;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));8
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in ((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) . (^ (Workstation <: succ)))));3;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));9
this/inv4;(all ref0:(one Component),ref1:(one Material)|(no (ref1 . (Product <: parts))));3;(((Product <: parts) . Product) = Component);7
this/inv7;(all ref0:(one Component),ref1:(one Component)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));3;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv7;(all ref0:(one Component),ref1:(one Component)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));3;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (Workstation <: succ))) || (ref1 in Material)));3;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))) || (ref1 in Material)));5
this/inv9;(all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ)))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 = ref1) => ((ref0 -> ref1) !in (Product <: parts))));3;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));10
this/inv7;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (Product <: parts)) in Dangerous)));3;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));4
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ))))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv3;(one (Component . (Component <: workstation)));3;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));3
this/inv8;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|((((ref0 . (Product <: parts)) in Dangerous) && (ref2 in ((Component <: workstation) . ref0))) => (ref1 !in (ref2 . (Workstation <: workers)))));3;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref2 in (ref0 . (Component <: workstation)))) => (ref1 !in (ref2 . (Workstation <: workers)))));10
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));3;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));13
this/inv6;(no (* (Product <: parts)));3;(no ((^ (Product <: parts)) & iden));4
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (Workstation <: workers)))));3;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))));5
this/inv6;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (Product <: parts))) => (ref1 !in Component)));3;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));9
this/inv7;(all ref0:(one Component)|(some ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous))));3;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));4
this/inv9;(all ref0:(one Workstation)|((# (ref0 . (Workstation <: succ))) = 1));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv5;(((Workstation . (Workstation <: workers)) in Human) || ((Workstation . (Workstation <: workers)) in Robot));3;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));5
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (all ref2:(one Workstation)|((# (ref2 . (Workstation <: workers))) > 0)));3;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|((# (ref2 . (Workstation <: workers))) > 0)));6
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|((# (ref1 . (Component <: workstation))) = 1)));3;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|((# ((Workstation <: workers) . ref1)) = 1)));6
this/inv4;(all ref0:(one Component),ref1:(one Material)|((none != (ref0 . (Product <: parts))) && (none = (ref1 . (Product <: parts)))));3;((all ref0:(one Component)|(none != (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(none = (ref1 . (Product <: parts)))));4
this/inv1;(all ref0:(one Worker)|((ref0 in Human) && (ref0 in Robot)));3;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));4
this/inv9;((all ref0:(one Workstation)|((none = (ref0 . (Workstation <: succ))) => (ref0 = end))) && (all ref1:(one Workstation)|((((Workstation <: succ) . ref1) = none) => (ref1 = begin))) && (all ref2:(one Workstation)|((none != (ref2 . (Workstation <: succ))) => (all ref3:(one Workstation)|((ref3 in (ref2 . (Workstation <: succ))) => ((none = (ref3 . (Workstation <: succ))) => (ref3 = end)))))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));42
this/inv2;((lone ((Workstation <: workers) . Worker)) && (some (Workstation . (Workstation <: workers))));3;(((Workstation <: workers) in (Workstation one->some Worker)) && (some (Workstation <: workers)));7
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));3;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));6
this/inv7;(all ref0:(one Product)|((no ((ref0 . (* (Product <: parts))) & Dangerous)) || ((ref0 . (* (Product <: parts))) in Dangerous)));3;(all ref0:(one Component)|((no ((ref0 . (Product <: parts)) & Dangerous)) || (ref0 in Dangerous)));6
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) = ((ref1 . (Component <: workstation)) . (Workstation <: succ)))));3;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));7
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (ref0 !in Robot)));3;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (no ((ref1 . (Workstation <: workers)) & Robot))));11
this/inv5;((all ref0:(one Robot),ref1:(one Workstation)|(some ref2:(one Human)|((ref2 in (ref1 . (Workstation <: workers))) => (ref0 !in (ref1 . (Workstation <: workers)))))) && (all ref3:(one Human),ref4:(one Workstation)|(some ref5:(one Robot)|((ref5 in (ref4 . (Workstation <: workers))) => (ref3 !in (ref4 . (Workstation <: workers)))))));3;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));25
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material),ref3:(one Product)|(ref3 !in (ref2 . (Product <: parts)))) && (ref1 in (ref0 . (Product <: parts))))));3;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));14
this/inv3;(all ref0:(one Component)|(some ref1:(one Workstation)|(one (((ref0 . (Component <: workstation)) & ref1) - ((ref0 . (Component <: workstation)) & (Workstation - ref1))))));3;(all ref0:(one Component)|(some ref1:(one Workstation)|(one (((ref0 . (Component <: workstation)) & ref1) + ((ref0 . (Component <: workstation)) & (Workstation - ref1))))));6
this/inv10;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in (ref0 . (^ (Workstation <: succ)))));3;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (~ (Workstation <: succ))))));5
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (no ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(((ref2 !in (ref2 . (^ (Workstation <: succ)))) && (ref2 !in (begin + end))) => (one (ref2 . (Workstation <: succ))))));3;((all ref0:(one Workstation)|((ref0 != begin) => (one ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 != end) => (one (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));25
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Human)));3;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));4
this/inv3;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref2 !in (ref1 . (Component <: workstation)))));3;(all ref0:(one Component)|(one ref1:(one Workstation)|((ref0 . (Component <: workstation)) = ref1)));13
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (no ((((Component <: workstation) . ref0) . (Workstation <: workers)) & Human))));3;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));4
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 !in (ref0 . (Component <: workstation))) && ((ref2 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref2 in (ref1 . (Component <: workstation))))));3;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|((some (ref0 . (Component <: workstation))) => ((all ref2:(one (ref1 . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref2 . (^ (Workstation <: succ))))) && (some (ref1 . (Component <: workstation))))));22
this/inv5;(no ref0:(one Workstation)|(all ref1:(one Human),ref2:(one Robot)|((ref1 in (ref0 . (Workstation <: workers))) && (ref2 in (ref0 . (Workstation <: workers))))));3;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));10
this/inv10;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));3;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# ((Workstation <: workers) . ref0)) = 1) && ((# (ref1 . (Workstation <: workers))) > 0)));3;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));4
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation)))))));3;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));24
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));10
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv10;(all ref0:(one Component)|((no ((ref0 . (^ (Product <: parts))) . (Component <: workstation))) || ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) !in ((* (Workstation <: succ)) . (ref0 . (Component <: workstation))))));3;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));15
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (Product <: parts))) => (Dangerous in ref0)));3;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));7
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts))));3;((Product <: parts) in (Component ->some Product));8
this/inv6;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => (ref1 !in Component)));3;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));9
this/inv6;(all ref0:(one Component),ref1:(one Product)|((ref0 -> ref1) !in (Product <: parts)));3;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));6
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (some ref2:(one Workstation)|(all ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));3;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# (ref0 . (~ (Workstation <: workers)))) = 1) && ((# (ref1 . (Workstation <: workers))) > 0)));3;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));7
this/inv4;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Component)));3;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));2
this/inv4;((all ref0:(one Component),ref1:(one Product)|(ref0 in (ref1 . (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|(ref2 !in (ref3 . (Product <: parts)))));3;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));12
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) in (Workstation - ref1))));3;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (one ((Component <: workstation) . end)) && (one (begin . (Component <: workstation))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ)))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Component) => ((ref0 . (Component <: workstation)) in (((ref0 . (Product <: parts)) . (Component <: workstation)) . (^ (Workstation <: succ))))));3;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));9
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));3;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv1;(all ref0:(one Worker),ref1:(one Worker)|((ref0 != ref1) => ((ref0 in Human) && (ref1 in Robot))));3;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));11
this/inv10;(all ref0:(one Component),ref1:(one Material),ref2:(one Workstation)|((ref1 !in (ref0 . (Product <: parts))) => (ref2 !in (ref0 . (Component <: workstation)))));3;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));15
this/inv9;(one ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((ref0 . (^ (Workstation <: succ))) in (Workstation - ref0))));3;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));16
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((ref1 != ref2) && (ref2 in begin)) => (ref1 in (ref2 . (^ (Workstation <: succ)))))));3;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((ref1 != ref2) && (ref2 in begin)) => (ref1 in (ref2 . (^ (Workstation <: succ)))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));15
this/inv9;(all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ)))));3;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv2;(all ref0:(one Worker)|(some ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))));2;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv4;(all ref0:(one Product)|(((ref0 != Material) => (some (ref0 . (Product <: parts)))) && ((ref0 = Material) => (no (ref0 . (Product <: parts))))));2;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));8
this/inv7;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (Product <: parts))) => (ref0 in ref1)));2;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((no ((Workstation <: succ) . ref1)) && (no (ref2 . (Workstation <: succ)))) => (ref1 != ref2))) && (no (begin & end)));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));24
this/inv4;((all ref0:(one Product)|((ref0 != Material) => (some (ref0 . (Product <: parts))))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));2;((all ref0:(one Product)|((ref0 !in Material) => (some (ref0 . (Product <: parts))))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));6
this/inv1;(all ref0:(one Human),ref1:(one Robot)|(no (((Workstation <: workers) . ref0) & ((Workstation <: workers) . ref1))));2;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));12
this/inv9;(no (begin & end));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (some ((ref0 & Component) & Dangerous))));2;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));10
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) || (ref0 in end) || (some (ref0 . (Workstation <: succ)))));2;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));18
this/inv1;(Worker in Human);2;(Worker in (Human + Robot));2
this/inv2;(((Workstation <: workers) . Worker) = Workstation);2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (((Workstation <: workers) . Worker) = Workstation));6
this/inv5;(all ref0:(one Workstation)|((ref0 . (Workstation <: workers)) !in (Human & Robot)));2;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));10
this/inv9;((all ref0:(one ((Workstation - end) - begin))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))) && (begin != end));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv2;(some (Workstation . (Workstation <: workers)));2;((Workstation <: workers) in (Workstation one->some Worker));7
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (Workstation . (Workstation <: workers))) && (some (ref1 . (Workstation <: workers)))));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));9
this/inv4;(((Product <: parts) . Product) in Component);2;(((Product <: parts) . Product) = Component);2
this/inv9;((all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one (Workstation - begin))|(one ref3:(one ((Workstation - begin) - ref2))|(ref2 in (ref3 . (Workstation <: succ))))) && (no ref0:(one Workstation)|(begin in (ref0 . (Workstation <: succ)))) && (no (begin & end)) && (no (end . (Workstation <: succ))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));22
this/inv6;(all ref0:(one Component)|(no (ref0 . (^ (Product <: parts)))));2;(all ref0:(one Component)|(no (ref0 & (ref0 . (^ (Product <: parts))))));4
this/inv7;(all ref0:(one Component),ref1:(one Product)|((ref1 in Dangerous) => (ref0 in Dangerous)));2;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));4
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (one ((Workstation <: workers) . Worker)));2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ((Workstation <: workers) . ref2))));7
this/inv2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Worker)|(ref4 in (Workstation . (Workstation <: workers)))) && (some (Workstation . (Workstation <: workers))));2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Workstation)|(some ref5:(one Worker)|(ref5 in (ref4 . (Workstation <: workers))))) && (all ref6:(one Worker)|(ref6 in (Workstation . (Workstation <: workers)))));19
this/inv9;((all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (all ref3:(one (Workstation - begin))|(one ref4:(one (Workstation - begin))|(ref3 in (ref4 . (Workstation <: succ))))) && (no ref0:(one Workstation)|(ref0 in (ref0 . (^ (Workstation <: succ))))) && (no ref1:(one Workstation)|(begin in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (end !in (begin . (Workstation <: succ))));2;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));27
this/inv9;(begin != end);2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv6;(! (iden in (^ (Product <: parts))));2;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));5
this/inv6;(all ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));2;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));2
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));2;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));8
this/inv7;(all ref0:(one Dangerous)|(Dangerous in (ref0 . (^ (Product <: parts)))));2;(all ref0:(one Dangerous)|((ref0 . (^ (~ (Product <: parts)))) in Dangerous));5
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Worker),ref4:(one Workstation)|(((ref2 in (ref4 . (Workstation <: workers))) && (ref3 in (ref4 . (Workstation <: workers)))) => (ref2 = ref3))));2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));21
this/inv1;(all ref0:(one Worker)|(no (Human & Robot)));2;(no (Worker - (Human + Robot)));5
this/inv9;(all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ))));2;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));15
this/inv9;(all ref0:(one begin)|((ref0 != end) && (ref0 !in (Workstation . (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv2;((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (some ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))));2;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));9
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|(((ref2 in (ref3 . (Workstation <: workers))) && (ref2 in (ref4 . (Workstation <: workers)))) => (ref3 = ref4))));2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));19
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no ((Workstation <: succ) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));2;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));12
this/inv4;(all ref0:(one Product)|((ref0 in Component) => (some (ref0 . (Product <: parts)))));2;(((Product <: parts) . Product) = Component);10
this/inv6;(all ref0:(one Component)|(no ((ref0 . (Product <: parts)) & Component)));2;(all ref0:(one Component)|(no (ref0 & (ref0 . (^ (Product <: parts))))));5
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref3 . (Workstation <: workers))))));2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));13
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(some ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));6
this/inv2;((all ref0:(one Worker)|(some ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));6
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((Component & (Product . (^ (Product <: parts)))) . (Component <: workstation)) . (^ (Workstation <: succ)))));2;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));10
this/inv9;(Workstation in (begin . (^ (Workstation <: succ))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;(all ref0:(one Workstation)|((one (((Workstation <: succ) . ref0) & begin)) && (one ((ref0 . (Workstation <: succ)) & end))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|(((ref2 in (ref3 . (Workstation <: workers))) && (ref2 in (ref4 . (Workstation <: workers)))) => (ref2 = ref4))));2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));19
this/inv9;(all ref0:(one Workstation)|((one (((* (Workstation <: succ)) . ref0) & begin)) && (one ((ref0 . (* (Workstation <: succ))) & end))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) . (^ (Workstation <: succ)))));2;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));10
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one begin),ref2:(one end)|((ref1 != ref2) && (ref2 in (ref1 . (^ (Workstation <: succ)))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));20
this/inv4;(all ref0:(one Component),ref1:(one Material),ref2:(one Product)|((ref0 in (ref2 . (Product <: parts))) && (ref1 !in (ref2 . (Product <: parts)))));2;((all ref0:(one Component)|(ref0 in (Product . (~ (Product <: parts))))) && (all ref1:(one Material)|(ref1 !in (Product . (~ (Product <: parts))))));11
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation)|((ref2 in (ref3 . (Workstation <: workers))) => (ref2 !in (ref3 . (Workstation <: succ))))));2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));14
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))));2;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));15
this/inv7;(all ref0:(one Component)|((ref0 in Dangerous) <=> (some ((ref0 . (^ (Product <: parts))) & Dangerous))));2;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));8
this/inv9;(all ref0:(one Workstation)|((one (((Workstation <: succ) . ref0) & begin)) && (some ((ref0 . (Workstation <: succ)) & end))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 = ref3))));2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));17
this/inv2;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one (ref1 . (Component <: workstation)))) && (some (ref0 . (Workstation <: workers)))));2;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));6
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref0 in (ref1 . (Product <: parts))))) && (all ref2:(one Material)|(no ref3:(one Product)|((ref2 -> ref3) in (Product <: parts)))));2;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material)|(no ref3:(one Product)|((ref2 -> ref3) in (Product <: parts)))));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(one ((Workstation <: workers) . ref0)));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));9
this/inv9;(all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));15
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Component)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Component),ref3:(one end)|(ref3 in (ref2 . (^ (Workstation <: succ))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));16
this/inv7;(all ref0:(one Component),ref1:(one Component)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref1 in Dangerous)));2;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));6
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation),ref3:(one end)|(ref3 in (ref2 . (^ (Workstation <: succ))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));16
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));2;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));11
this/inv9;((one (Workstation & begin)) && (one (Workstation & end)));2;(((Workstation <: succ) in (Workstation ->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in (ref2 . (Workstation <: workers)))) => (ref1 = ref2)));2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));13
this/inv9;((all ref0:(one begin),ref1:(one end)|(ref0 != ref1)) && (all ref2:(one begin)|(ref2 !in (Workstation . (Workstation <: succ)))) && (all ref3:(one Workstation)|(ref3 !in (ref3 . (^ (Workstation <: succ))))) && (all ref4:(one Workstation),ref5:(one end)|(ref5 in (ref4 . (^ (Workstation <: succ))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));26
this/inv8;(all ref0:(one Component)|((Dangerous in ref0) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));2;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));4
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (* (Workstation <: succ)))));2;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));6
this/inv9;(all ref0:(one Workstation)|((some ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: succ)))) || (some ref2:(one Workstation)|(ref2 in (ref0 . (Workstation <: succ)))) || (ref0 in (ref0 . (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv7;(all ref0:(one Component)|(some ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous))));2;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv4;(all ref0:(one Component),ref1:(one Material)|(some (ref0 . (Product <: parts))));2;(((Product <: parts) . Product) = Component);7
this/inv6;(all ref0:(one Component),ref1:(one Dangerous)|(ref0 !in (ref0 . (Product <: parts))));2;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));4
this/inv7;(all ref0:(one Component)|((ref0 in Dangerous) => ((ref0 . (^ (Product <: parts))) in Dangerous)));2;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));3
this/inv7;(all ref0:(one Component)|(some ref1:(one Dangerous)|((ref1 in (ref0 . (Product <: parts))) => (ref0 in Dangerous))));2;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));4
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 -> ref2) in (Workstation <: workers)) => ((ref1 -> ref2) !in (Workstation <: workers))));2;(all ref0:(one Human),ref1:(one Workstation)|(((ref1 -> ref0) in (Workstation <: workers)) => (all ref2:(one Robot)|((ref1 -> ref2) !in (Workstation <: workers)))));8
this/inv2;(all ref0:(one Workstation)|(one ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers))));2;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(end in (ref1 . (^ (Workstation <: succ))))) && (begin !in (Workstation . (Workstation <: succ))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));15
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component),ref2:(one Dangerous)|(ref2 !in (ref1 . (Product <: parts)))));2;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));11
this/inv3;((Component <: workstation) in (Component one->one Workstation));2;((Component <: workstation) in (Component ->one Workstation));2
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref1 in Robot)));2;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref1 in Human)));8
this/inv9;(all ref0:(one Workstation)|(((ref0 !in (begin + end)) && (ref0 in (begin . (* (Workstation <: succ))))) || (ref0 in begin) || (ref0 in end)));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(end in (ref2 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (begin !in (Workstation . (Workstation <: succ))));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (one begin));19
this/inv9;((no (end . (Workstation <: succ))) && (begin !in (Workstation . (Workstation <: succ))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv8;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|(((ref0 . (Product <: parts)) in Dangerous) => (ref1 !in (ref2 . (Workstation <: workers)))));2;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref1 !in (ref2 . (Workstation <: workers)))));10
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Human) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 !in Human)));2;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Human) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Human)));8
this/inv1;((all ref0:(one Worker)|((ref0 in Human) => (ref0 !in Robot))) && (all ref1:(one Worker)|((ref1 in Robot) => (ref1 !in Human))));2;((all ref0:(one Worker)|((ref0 in Human) => (ref0 !in Robot))) && (all ref1:(one Worker)|((ref1 !in Human) => (ref1 in Robot))));10
this/inv6;(iden !in (^ (Product <: parts)));2;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));5
this/inv1;(Worker in (Human & Robot));2;(Worker in (Human + Robot));2
this/inv2;(all ref0:(one Workstation)|((all ref1:(one Worker)|(some ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));2;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));6
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: succ))) && (ref1 in (ref0 . (Workstation <: succ)))) => (ref0 = ref1)));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv7;(all ref0:(one Component)|((ref0 in Dangerous) <=> (Dangerous in (ref0 . (^ (Product <: parts))))));2;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));7
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (Worker = (Workstation . (Workstation <: workers))));2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));8
this/inv7;(all ref0:(one Product)|(some ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous))));2;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));4
this/inv6;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => (ref0 != ref1)));2;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));14
this/inv2;((Workstation <: workers) in (Workstation some->one Worker));2;((Workstation <: workers) in (Workstation one->some Worker));2
this/inv9;((no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));5
this/inv9;((all ref0:(one (Workstation - end))|(end in (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));5
this/inv8;(all ref0:(one (Component & Dangerous)),ref1:(one Workstation)|(no ((ref1 . (Workstation <: workers)) & Human)));2;(all ref0:(one (Component & Dangerous)),ref1:(one (ref0 . (Component <: workstation)))|(no ((ref1 . (Workstation <: workers)) & Human)));4
this/inv2;(all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0));2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));10
this/inv3;(all ref0:(one Component)|(some (ref0 . (Component <: workstation))));2;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));4
this/inv2;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# ((Workstation <: workers) . ref0)) > 0) && ((# (ref1 . (Workstation <: workers))) > 0)));2;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));6
this/inv6;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (Product <: parts))) => (ref0 != ref1)));2;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));5
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (end in (begin . (* (Workstation <: succ)))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));11
this/inv10;(all ref0:(one Component)|((some (ref0 . (Component <: workstation))) => (no (ref0 . (Product <: parts)))));2;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));12
this/inv10;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))) & ((ref0 . (Product <: parts)) . (Component <: workstation)))));2;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & ((ref0 . (Product <: parts)) . (Component <: workstation)))));4
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (all ref2:(one (Workstation - end))|(end in (ref2 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));16
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 != ref1) <=> (ref1 in (ref0 . (Product <: parts)))));2;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));10
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) => ((begin != end) && (end in (begin . (^ (Workstation <: succ)))))) && (begin !in (begin . (^ (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv4;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) > 0)));2;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) = 0)));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers)))));2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in end) => (((no (ref1 . (Workstation <: succ))) && (ref1 !in end)) => (one (ref1 . (Workstation <: succ)))))) && (one begin) && (one end));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))) && (one begin));24
this/inv2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (some (Workstation . (Workstation <: workers))));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));5
this/inv9;(all ref0:(one Workstation)|((ref0 = begin) || (ref0 = end) || (end in (ref0 . (^ (Workstation <: succ))))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv7;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (Product <: parts))) in Dangerous)));2;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));3
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(ref1 in (ref0 . (* ((Product <: parts) - (integer/prev[]))))));2;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));14
this/inv10;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|((some (ref0 . (Component <: workstation))) => (some (ref1 . (Component <: workstation)))));2;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));11
this/inv9;(all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && ((ref0 . (* (Workstation <: succ))) in (begin + end))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) || (ref0 in end)));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv5;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) in Human) => (! ((ref0 . (Workstation <: workers)) in Robot))) || (((ref0 . (Workstation <: workers)) in Robot) => (! ((ref0 . (Workstation <: workers)) in Human)))));2;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));16
this/inv4;(all ref0:(one Component),ref1:(one Material)|((no (ref1 . (^ (Product <: parts)))) && (some (ref0 . (Product <: parts)))));2;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));9
this/inv4;(all ref0:(one Product)|((ref0 in Component) => (((ref0 in Material) && (some (ref0 . (Product <: parts)))) => (no (ref0 . (Product <: parts))))));2;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));14
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) !in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));2;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));7
this/inv5;(all ref0:(one Workstation)|((Human & Robot) !in (ref0 . (Workstation <: workers))));2;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));10
this/inv3;(all ref0:(one Product)|((ref0 in Material) || ((some (ref0 . (Product <: parts))) => (ref0 in Component))));2;((Component <: workstation) in (Component ->one Workstation));14
this/inv2;((some ((Workstation <: workers) . Worker)) && (some (Workstation . (Workstation <: workers))));2;(((Workstation <: workers) in (Workstation one->some Worker)) && (some (Workstation <: workers)));7
this/inv3;(all ref0:(one Product)|(((ref0 in Component) && (some (ref0 . (Product <: parts)))) || (ref0 in Material)));2;((Component <: workstation) in (Component ->one Workstation));14
this/inv10;((all ref0:(one Product)|(one (ref0 . (Component <: workstation)))) && (all ref1:(one Product)|(((ref1 . (Product <: parts)) . (Component <: workstation)) !in ((Workstation <: succ) . (ref1 . (Component <: workstation))))));2;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));15
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref2 in (ref1 . (Component <: workstation))))));2;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));18
this/inv10;(all ref0:(one Component),ref1:(one Component)|(((ref0 != ref1) && (ref1 in (ref0 . (^ (Product <: parts))))) => ((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));2;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));12
this/inv9;((begin -> end) in (* (Workstation <: succ)));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv2;((all ref0:(one Worker)|(ref0 in (Workstation . (Workstation <: workers)))) && (some (Workstation . (Workstation <: workers))));2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));8
this/inv9;((begin -> end) in (^ (Workstation <: succ)));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (one ref2:(one Workstation)|(all ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));10
this/inv2;((all ref0:(one Worker)|((lone ((Workstation <: workers) . ref0)) && (ref0 in (Workstation . (Workstation <: workers))))) && (some (Workstation . (Workstation <: workers))));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));13
this/inv6;((all ref0:(one Component),ref1:(one Component)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 != ref1))) && (all ref2:(one Component),ref3:(one Component)|(((ref2 -> ref3) in (Product <: parts)) => ((ref3 -> ref2) !in (Product <: parts)))));2;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));21
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|(ref3 in (ref2 . (Product <: parts))))) && (ref1 in (ref0 . (Product <: parts))))));2;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));14
this/inv10;(all ref0:(one Component)|((no ((ref0 . (^ (Product <: parts))) . (Component <: workstation))) || ((((ref0 . (^ (Product <: parts))) - Material) . (Component <: workstation)) !in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation))))));2;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));14
this/inv10;(all ref0:(one Component)|((no ((ref0 . (^ (Product <: parts))) . (Component <: workstation))) || ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) !in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation))))));2;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));13
this/inv9;(all ref0:(one Workstation)|(ref0 !in (ref0 . (* (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || ((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in (ref3 . (^ (Workstation <: succ)))) && (ref3 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation))))))));2;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));29
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 = ref1) => (ref0 !in (ref0 . (Product <: parts)))));2;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));8
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (Workstation <: succ)))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));2;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));9
this/inv1;((Workstation . (Workstation <: workers)) in (Human + Robot));2;(Worker in (Human + Robot));4
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref2 -> ref3) in (Workstation <: workers)))));2;((all ref0:(one Worker)|(one ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))));8
this/inv4;(all ref0:(one Component),ref1:(one Material)|(some ref2:(one Product)|(((ref0 -> ref2) in (Product <: parts)) && ((ref1 -> ref2) !in (Product <: parts)))));2;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));11
this/inv9;((Workstation = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));2;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (~ (^ (Workstation <: succ))))));4
this/inv9;((all ref0:(one Workstation)|(ref0 in (begin . (^ (Workstation <: succ))))) && (no ((^ (Workstation <: succ)) & iden)));2;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref0 !in (ref2 . (Workstation <: workers))) && (ref1 != ref2))));2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));15
this/inv5;(all ref0:(one Workstation)|((Human in (ref0 . (Workstation <: workers))) => (Robot !in (ref0 . (Workstation <: workers)))));2;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));10
this/inv9;(all ref0:(one Workstation)|((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))));2;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))) && (ref0 !in ((^ (Workstation <: succ)) . ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));15
this/inv2;((all ref0:(one Worker)|(one (ref0 & (Workstation . (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));8
this/inv4;((all ref0:(one Component),ref1:(one Component)|((ref0 -> ref1) in (Product <: parts))) && (all ref2:(one Material),ref3:(one Material)|((ref2 -> ref3) !in (Product <: parts))));2;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));8
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one Workstation)|((ref1 in (ref0 . (* (Workstation <: succ)))) && (ref1 in end)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv9;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (begin & end)) && (no (end . (Workstation <: succ))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in ref2))));2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));8
this/inv3;((Component <: workstation) in (Component some->one Workstation));2;((Component <: workstation) in (Component ->one Workstation));2
this/inv9;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (1 < (# (begin . (^ (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv3;(Component in ((Component <: workstation) . Workstation));2;((Component <: workstation) in (Component ->one Workstation));4
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one end)|(end in (ref0 . (^ (Workstation <: succ)))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));20
this/inv9;((all ref0:(one Workstation)|((ref0 !in end) => (one (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;((all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end)) => (one (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));20
this/inv9;(all ref0:(one Workstation)|(((# (ref0 . (Workstation <: succ))) = 1) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv1;(all ref0:(one Human),ref1:(one Robot)|((ref0 in Worker) || (ref1 in Worker)));2;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));9
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) => ((ref0 . (Workstation <: workers)) !in Robot)));2;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));6
this/inv5;(all ref0:(one Workstation)|(((Human in (ref0 . (Workstation <: workers))) => (Robot !in (ref0 . (Workstation <: workers)))) || ((Robot in (ref0 . (Workstation <: workers))) => (Human !in (ref0 . (Workstation <: workers))))));2;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Human)) || ((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Robot))));18
this/inv4;(all ref0:(one Product)|((no (ref0 . (Product <: parts))) => (ref0 in Material)));2;(all ref0:(one Product)|((none != (ref0 . (Product <: parts))) <=> (ref0 in Component)));9
this/inv4;((all ref0:(one Component)|(some ((Product <: parts) . ref0))) && (all ref1:(one Material)|(no ((Product <: parts) . ref1))));2;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (no (Material . (Product <: parts))));7
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref0 in (ref1 . (Product <: parts))))) && (all ref2:(one Material),ref3:(one Product)|(ref2 !in (ref3 . (Product <: parts)))));2;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));12
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Component <: workstation)))));2;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));10
this/inv9;(all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv5;(all ref0:(one Workstation)|((Human in (ref0 . (Workstation <: workers))) <=> (Robot !in (ref0 . (Workstation <: workers)))));2;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) !in Robot) <=> ((ref0 . (Workstation <: workers)) in Human)));8
this/inv9;((no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));5
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 !in (ref0 . (Product <: parts))) && (ref1 !in (ref1 . (Product <: parts)))));2;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));10
this/inv6;(one ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts))));2;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));3
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (((lone (ref0 . (Workstation <: succ))) && (ref0 in end)) => (lone ((Workstation <: succ) . ref0)))));2;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));20
this/inv8;(all ref0:(one Dangerous),ref1:(one Human)|(ref0 !in (((Component <: workstation) . (Component <: workstation)) . ref1)));2;(all ref0:(one Dangerous),ref1:(one Human)|(ref0 !in (((Component <: workstation) . (Workstation <: workers)) . ref1)));6
this/inv6;(all ref0:(one Component)|(! (ref0 in (ref0 . (* (Product <: parts))))));2;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one ((Component <: workstation) . ref0)) && (some (ref1 . (Workstation <: workers)))));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));2;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));8
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv9;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ)))) || ((one ((Workstation <: succ) . ref0)) && (ref0 in end)) || ((one (ref0 . (Workstation <: succ))) && (ref0 in begin))));2;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));23
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref0 . (Product <: parts))) > 0) && ((# (ref1 . (Product <: parts))) = none)));2;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) = 0)));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));11
this/inv10;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 !in (ref1 . (^ (Product <: parts))))));2;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));13
this/inv7;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 = Dangerous)));2;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => (ref0 in Dangerous)));6
this/inv9;(all ref0:(one Workstation)|(no (ref0 & (ref0 . (^ (Workstation <: succ))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));17
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));8
this/inv1;(all ref0:(one Worker)|(ref0 in Human));2;(all ref0:(one Worker)|(ref0 in (Human + Robot)));4
this/inv7;(all ref0:(one Component)|(some ref1:(one Dangerous),ref2:(one Product)|((((ref0 -> ref2) in (Product <: parts)) && ((ref1 -> ref2) in (Product <: parts))) => (ref0 in Dangerous))));2;(all ref0:(one Component),ref1:(one Product)|((((ref0 -> ref1) in (Product <: parts)) && (ref1 in Dangerous)) => (ref0 in Dangerous)));11
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));2;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));3
this/inv2;((lone (Workstation <: succ)) && (Workstation in (Workstation . (~ (Workstation <: workers)))));2;((Workstation <: workers) in (Workstation one->some Worker));10
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Component) => (((ref0 . (Product <: parts)) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));2;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));9
this/inv2;((one (Worker & (Workstation . (Workstation <: workers)))) && (Workstation in (Worker . (~ (Workstation <: workers)))));2;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (Workstation in ((Workstation <: workers) . Worker)));8
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (end in (begin . (^ (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (ref0 in end)));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv9;((all ref0:(one Workstation)|((one Workstation) || (some (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));18
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (begin & end)) && (no (end . (Workstation <: succ))) && (one begin) && (one end));2;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));27
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (Product <: parts))) => (all ref2:(one Workstation)|(ref0 !in ((Component <: workstation) . ref2)))));2;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));16
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));6
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref1 -> ref0) in (Component <: workstation)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref2 -> ref3) in (Component <: workstation)))));2;((all ref0:(one Worker)|(one ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))));12
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 in end) => (no (ref3 . (^ (Workstation <: succ)))))));2;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));13
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 !in ((ref1 . (Workstation <: workers)) & Human)) || (ref0 !in ((ref1 . (Workstation <: workers)) & Robot))));2;(all ref0:(one Worker),ref1:(one Workstation)|((no ((ref1 . (Workstation <: workers)) & Human)) || (no ((ref1 . (Workstation <: workers)) & Robot))));10
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) => ((((ref0 . (Workstation <: workers)) !in Robot) && ((ref0 . (Workstation <: workers)) in Robot)) => ((ref0 . (Workstation <: workers)) !in Human))));2;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));16
this/inv7;(all ref0:(one Component)|((Dangerous in ref0) <=> (Dangerous in (ref0 . (^ (Product <: parts))))));2;(all ref0:(one Dangerous)|((ref0 . (^ (~ (Product <: parts)))) in Dangerous));9
this/inv1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) => (ref0 in Human)) || (ref0 in Robot)));2;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));9
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one ref2:(one Workstation)|((ref2 -> ref0) in (Workstation <: workers))) && ((ref1 -> ref0) in (Workstation <: workers))));2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))) && ((ref0 -> ref1) in (Workstation <: workers)))));11
this/inv4;((all ref0:(one Component)|(some (Product <: parts))) && (all ref1:(one Material)|(no (Product <: parts))));2;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (no (Material . (Product <: parts))));7
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 !in ref2) <=> (ref1 in ref2)));2;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 !in (ref2 . (Workstation <: workers))) <=> (ref1 in (ref2 . (Workstation <: workers)))));10
this/inv9;((begin . (* (Workstation <: succ))) in Workstation);2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((ref1 != ref2) && (ref2 in begin)) => (ref1 in (ref2 . (^ (Workstation <: succ)))))) && (all ref3:(one Workstation)|((ref3 !in end) => (some (ref3 . (Workstation <: succ))))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((ref1 != ref2) && (ref2 in begin)) => (ref1 in (ref2 . (^ (Workstation <: succ)))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));10
this/inv7;(Dangerous = (Dangerous . (Product <: parts)));2;(((Product <: parts) . Dangerous) in Dangerous);6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((begin . (* (Workstation <: succ))) in Workstation));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));11
this/inv7;(((Product <: parts) . Dangerous) = Dangerous);2;(((Product <: parts) . Dangerous) in Dangerous);2
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one Workstation)|((no (ref1 . (Workstation <: succ))) && ((ref0 . (^ (Workstation <: succ))) in Workstation) && (ref2 !in (ref2 . (^ (Workstation <: succ)))))));2;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));16
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one (Workstation & begin)) && (one (Workstation & end)));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));17
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (begin & end)) && (no (end . (Workstation <: succ))) && (one begin) && (one end));2;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));27
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 != ref1) && (ref0 in (ref1 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));2;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 != ref1) && (ref0 in (ref1 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref3 in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));12
this/inv10;(all ref0:(one Product)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((~ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));2;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));4
this/inv7;(all ref0:(one Component),ref1:(one Product)|(((ref1 = Dangerous) && (ref1 in (ref0 . (^ (Product <: parts))))) => (ref0 = Dangerous)));2;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));10
this/inv9;(all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));2;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => ((((Workstation <: workers) . (Component <: workstation)) . ref0) in Robot)));2;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot)));6
this/inv7;(all ref0:(one Component)|((no ((ref0 . (Product <: parts)) & Dangerous)) => (ref0 !in Dangerous)));2;(all ref0:(one Component)|((no ((ref0 . (Product <: parts)) & Dangerous)) || (ref0 in Dangerous)));6
this/inv9;(all ref0:(one Workstation)|((((ref0 in begin) => (some (ref0 . (Workstation <: succ)))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));2;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));12
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (Workstation in (begin . (^ (Workstation <: succ)))));2;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv9;(all ref0:(one Workstation)|((((ref0 in begin) && (some (ref0 . (Workstation <: succ)))) || (no (Workstation - ref0))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));2;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));17
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));2;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));8
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 in begin) && (ref1 in end)) => ((no (ref1 . (Workstation <: succ))) && (ref0 !in ((Workstation <: succ) . Workstation)) && (some (ref0 . (Workstation <: succ))))));2;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));26
this/inv8;(all ref0:(one Component),ref1:(one Worker)|((ref0 in Dangerous) => (ref1 !in Human)));2;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation))),ref2:(one (ref1 . (Workstation <: workers)))|((ref0 in Dangerous) => (ref2 !in Human)));7
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((((ref0 in begin) && (ref1 in end)) => ((no (ref1 . (Workstation <: succ))) && (ref0 !in ((Workstation <: succ) . Workstation)) && (some (ref0 . (Workstation <: succ))))) || ((ref0 = ref1) => ((no (Workstation - ref0)) && (ref0 !in (ref1 . (Workstation <: succ)))))));2;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));39
this/inv1;(all ref0:(one Worker)|((ref0 in Human) => (((ref0 !in Robot) && (ref0 in Robot)) => (ref0 !in Human))));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));12
this/inv1;(all ref0:(one Worker)|((ref0 !in Human) && (ref0 !in Robot) && (ref0 in Human) && (ref0 in Robot)));1;(all ref0:(one Worker)|(((ref0 !in Human) || (ref0 !in Robot)) && ((ref0 in Human) || (ref0 in Robot))));4
this/inv1;(lone (Human & Robot));1;(((Human + Robot) & Worker) = Worker);5
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in ref0))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));10
this/inv1;((Human & Robot) !in Robot);1;(((Human + Robot) & Worker) = Worker);6
this/inv1;(all ref0:(one Workstation)|((Robot in (ref0 . (Workstation <: workers))) => (Human !in (ref0 . (Workstation <: workers)))));1;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));12
this/inv2;(((# (Workstation . (Workstation <: workers))) > 1) && (all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));11
this/inv2;((Workstation <: workers) in (Workstation ->some Worker));1;((Workstation <: workers) in (Workstation one->some Worker));2
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((((ref0 . (Component <: workstation)) in ref2) && ((ref1 . (Component <: workstation)) in ref3) && (ref1 in (ref0 . (Product <: parts)))) => (ref2 in (ref3 . (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((((ref0 -> ref2) in (Component <: workstation)) && ((ref1 -> ref3) in (Component <: workstation)) && (ref1 in (ref0 . (^ (Product <: parts))))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));18
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one ((Workstation <: workers) . ref0)) && (ref1 in (ref0 . (Workstation <: workers))))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (Workstation in ((Workstation <: workers) . Worker)));7
this/inv2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (1 < (# (Workstation . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|((# (ref2 . (Workstation <: workers))) > 0)));11
this/inv1;((Human & Robot) !in Worker);1;(((Human + Robot) & Worker) = Worker);4
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one ((Workstation <: workers) . ref0)) && ((ref0 . (Workstation <: workers)) in ref0))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (Workstation in ((Workstation <: workers) . Worker)));7
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (Workstation <: succ)))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));9
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker)|(((ref1 in (ref0 . (Workstation <: workers))) && (ref1 in Robot)) => ((ref0 . (Workstation <: workers)) in Robot))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));11
this/inv2;(all ref0:(one Workstation)|(some Worker));1;((Workstation <: workers) in (Workstation one->some Worker));6
this/inv1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers)))));1;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));14
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker)|(((ref1 in (ref0 . (Workstation <: workers))) && (ref1 in Robot)) <=> ((ref0 . (Workstation <: workers)) in Robot))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));11
this/inv2;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (some (Workstation . (Workstation <: workers))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));5
this/inv1;(all ref0:(one Worker)|(one ((ref0 & Human) + Robot)));1;((Human + Robot) = Worker);6
this/inv5;(all ref0:(one (Human + Robot)),ref1:(one Workstation)|(ref0 !in (ref1 . (Workstation <: workers))));1;(all ref0:(one Human),ref1:(one Robot)|((ref0 . (~ (Workstation <: workers))) != (ref1 . (~ (Workstation <: workers)))));10
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker)|(((ref1 in (ref0 . (Workstation <: workers))) && (ref1 in Robot)) => ((ref0 . (Workstation <: workers)) !in Human))));1;(all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Robot)) => (no ((ref0 . (Workstation <: workers)) & Human))));13
this/inv1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (no ((ref2 . (Workstation <: workers)) & Human))));1;(no ((Worker - (Human & Worker)) - Robot));17
this/inv2;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 = ref1)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));19
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Robot)) => ((ref1 . (Workstation <: workers)) !in Human)));1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (no ((ref1 . (Workstation <: workers)) - Human))));9
this/inv5;(all ref0:(one Workstation)|(((Human !in (ref0 . (Workstation <: workers))) && (Robot in (ref0 . (Workstation <: workers)))) || ((Human in (ref0 . (Workstation <: workers))) && (Robot !in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Human)) || ((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Robot))));16
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((no ((Workstation <: succ) . ref0)) && (no (ref1 . (Workstation <: succ)))) => ((ref0 = begin) && (ref1 = end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));21
this/inv2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 = ref1))) && (all ref4:(one Worker)|(ref4 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Workstation)|(some (ref4 . (Workstation <: workers)))) && (all ref5:(one Worker)|(ref5 in (Workstation . (Workstation <: workers)))));19
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((no ((Workstation <: succ) . ref0)) && (no (ref1 . (Workstation <: succ)))) => ((ref0 != ref1) && (ref0 = begin) && (ref1 = end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));24
this/inv4;(all ref0:(one Product)|(((ref0 = Component) => (! (no (ref0 . (Product <: parts))))) && ((ref0 = Material) => (no (ref0 . (Product <: parts))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));9
this/inv1;(all ref0:(one Worker)|((ref0 = Human) || (ref0 = Robot)));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));6
this/inv5;(all ref0:(one Workstation)|(((Human !in (ref0 . (Workstation <: workers))) <=> (Robot in (ref0 . (Workstation <: workers)))) && ((Human in (ref0 . (Workstation <: workers))) <=> (Robot !in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Human)) || ((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Robot))));18
this/inv2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 = ref1))) && (all ref4:(one Workstation)|(Worker in (ref4 . (Workstation <: workers)))));1;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Workstation)|(some ref5:(one Worker)|(ref5 in (ref4 . (Workstation <: workers))))) && (all ref6:(one Worker)|(ref6 in (Workstation . (Workstation <: workers)))));21
this/inv4;(((Product <: parts) in (Component ->some Product)) && ((Product <: parts) in (Material ->one Product)));1;((Product <: parts) in (Component ->some Product));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|((no ((Workstation <: succ) . ref1)) && (no (ref2 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv4;(all ref0:(one Product)|((ref0 in Material) => (no (ref0 . (Product <: parts)))));1;(all ref0:(one Product)|((none = (ref0 . (Product <: parts))) implies (ref0 in Material) else (ref0 in Component)));9
this/inv1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Robot) => (no ((ref0 . (Workstation <: workers)) & Human))));1;(all ref0:(one Worker)|((ref0 !in Robot) <=> (ref0 in Human)));13
this/inv2;(all ref0:(one Workstation)|(Worker in (ref0 . (Workstation <: workers))));1;((Workstation <: workers) in (Workstation one->some Worker));7
this/inv5;(all ref0:(one Workstation)|((Human !in (ref0 . (Workstation <: workers))) <=> (Robot !in (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) !in Robot) <=> ((ref0 . (Workstation <: workers)) in Human)));8
this/inv1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Robot) => ((no ((ref0 . (Workstation <: workers)) & Human)) && (some (ref0 . (Workstation <: workers))))));1;(all ref0:(one Worker)|((ref0 !in Robot) <=> (ref0 in Human)));18
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((no ((Workstation <: succ) . ref1)) && (no (ref2 . (Workstation <: succ)))) => (ref1 != ref2))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));20
this/inv4;(all ref0:(one Product)|(((ref0 != Material) => (some (ref0 . (Product <: parts)))) || ((ref0 = Material) => (no (ref0 . (Product <: parts))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));10
this/inv1;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) in Robot) && (some (ref0 . (Workstation <: workers)))) => (no ((ref0 . (Workstation <: workers)) & Human))));1;(all ref0:(one Worker)|((ref0 !in Robot) <=> (ref0 in Human)));18
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((((ref1 !in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers)))) <=> (ref0 in (ref2 . (Workstation <: workers)))) <=> (ref0 !in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers)))));20
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref1 . (Product <: parts)) in ref0))) && (all ref2:(one Material)|(no ref3:(one Product)|((ref3 . (Product <: parts)) in ref2))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));14
this/inv5;(all ref0:(one Workstation)|((ref0 . (Workstation <: workers)) in Human));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));8
this/inv2;(Worker in (Workstation . (Workstation <: workers)));1;((Workstation <: workers) in (Workstation one->some Worker));6
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 !in (ref2 . (Workstation <: workers))) <=> (ref1 in (ref2 . (Workstation <: workers)))) && ((ref0 in (ref2 . (Workstation <: workers))) <=> (ref1 !in (ref2 . (Workstation <: workers))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));18
this/inv4;((all ref0:(one Product)|((ref0 != Material) => (! (no (ref0 . (Product <: parts)))))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));1;((all ref0:(one Component)|(! (no (ref0 . (Product <: parts))))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));8
this/inv9;((all ref0:(one ((Workstation - end) - begin))|((one (ref0 . (Workstation <: succ))) && (one (ref0 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));14
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 in ((Workstation <: workers) . ref1)) && (ref1 in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))) && (ref1 in (ref0 . (Workstation <: workers))))));10
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((no ((Workstation <: succ) . ref1)) && (no (ref2 . (Workstation <: succ)))) => (ref1 != ref2))) && (all ref3:(one Workstation)|((ref3 in begin) => (ref3 !in end))) && (all ref4:(one Workstation)|((ref4 in end) => (ref4 !in begin))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));35
this/inv5;(all ref0:(one Workstation)|((none = ((ref0 . (Workstation <: workers)) - Human)) || (((ref0 . (Workstation <: workers)) - Human) = Robot)));1;(all ref0:(one Workstation)|((none = ((ref0 . (Workstation <: workers)) & Human)) || (none = ((ref0 . (Workstation <: workers)) & Robot))));8
this/inv9;((all ref0:(one ((Workstation - end) - begin))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;((all ref0:(one ((Workstation - end) - begin))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv5;(all ref0:(one Workstation)|((ref0 . (Workstation <: workers)) !in (Human + Robot)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) && (ref1 in ((Workstation <: workers) . ref0))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));8
this/inv4;((all ref0:(one Component)|(! (no (ref0 . (Product <: parts))))) && (all ref1:(one Product)|((ref1 != Material) => (some (ref1 . (Product <: parts))))) && (all ref2:(one Material)|(no (ref2 . (Product <: parts)))));1;((all ref0:(one Component)|(! (no (ref0 . (Product <: parts))))) && (all ref1:(one Product)|((ref1 !in Material) => (some (ref1 . (Product <: parts))))) && (all ref2:(one Material)|(no (ref2 . (Product <: parts)))));8
this/inv2;(some (Workstation -> (Workstation <: workers)));1;((Workstation <: workers) in (Workstation one->some Worker));7
this/inv3;((Component <: workstation) in (Component lone-> Workstation));1;((Component <: workstation) in (Component ->one Workstation));2
this/inv2;(all ref0:(one Workstation)|(some ref1:(one (ref0 . (Workstation <: workers)))|(all ref2:(one Worker)|(ref2 in (Workstation . (Workstation <: workers))))));1;((Workstation <: workers) in (Workstation one->some Worker));9
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: succ) . ref1))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));6
this/inv5;(all ref0:(one Workstation),ref1:(one (ref0 . (Workstation <: workers)))|((ref1 in Human) || (ref1 in Robot)));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));11
this/inv9;((all ref0:(one ((Workstation - end) - begin))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))) && (begin !in end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (Worker in (Workstation . (Workstation <: workers))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));8
this/inv7;((all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (some ((ref0 & Component) & Dangerous)))) && (all ref1:(one Component)|((Dangerous in (ref1 . (^ (Product <: parts)))) => (some ((ref1 & Dangerous) & Component)))));1;((all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 in Dangerous))) && (((Product <: parts) . Dangerous) in Dangerous));23
this/inv7;(all ref0:(one Component)|(((ref0 . (* (Product <: parts))) in Dangerous) => (ref0 in Dangerous)));1;(all ref0:(one Component)|((ref0 in ((* (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));4
this/inv2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 = ref1))) && (all ref4:(one Workstation)|(some ref5:(one Worker)|(ref5 in (ref4 . (Workstation <: workers))))));1;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Workstation)|(some ref5:(one Worker)|(ref5 in (ref4 . (Workstation <: workers))))) && (all ref6:(one Worker)|(ref6 in (Workstation . (Workstation <: workers)))));20
this/inv4;((all ref0:(one Component)|(ref0 in (Product . (Product <: parts)))) && (all ref1:(one Material)|(ref1 !in (Product . (Product <: parts)))));1;((all ref0:(one Component)|(ref0 in (Product . (~ (Product <: parts))))) && (all ref1:(one Material)|(ref1 !in (Product . (~ (Product <: parts))))));6
this/inv8;(all ref0:(one (Component & Dangerous)),ref1:(one Workstation)|((ref1 in (ref0 . (Component <: workstation))) => (no ((ref1 . (Workstation <: workers)) & Robot))));1;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (no ((ref1 . (Workstation <: workers)) & Human))));10
this/inv8;(all ref0:(one Dangerous)|(Human !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))));1;(all ref0:(one (Component & Dangerous))|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human));4
this/inv9;((all ref0:(one ((Workstation - end) - begin))|((((Workstation <: succ) . ref0) != (ref0 . (Workstation <: succ))) && (one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))) && (begin != end));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));27
this/inv4;((all ref0:(one Component)|(ref0 in (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(ref1 !in (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));10
this/inv2;((all ref0:(one Worker)|((# (ref0 . (^ (Component <: workstation)))) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));7
this/inv4;((all ref0:(one Component)|(ref0 in (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));7
this/inv2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 = ref1))) && (all ref4:(one Workstation)|(some ref5:(one Worker)|(ref5 in (ref4 . (Workstation <: workers))))) && (all ref6:(one Worker)|(ref6 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Workstation)|(some ref5:(one Worker)|(ref5 in (ref4 . (Workstation <: workers))))) && (all ref6:(one Worker)|(ref6 in (Workstation . (Workstation <: workers)))));16
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (one ref1:(one Workstation)|(Worker in (ref1 . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))));8
this/inv8;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref1 !in (ref2 . (Component <: workstation)))));1;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref1 !in (ref2 . (Workstation <: workers)))));8
this/inv9;((all ref0:(one Workstation)|(ref0 != (begin & end))) && (all ref1:(one ((Workstation - end) - begin))|((((Workstation <: succ) . ref1) != (ref1 . (Workstation <: succ))) && (one ((Workstation <: succ) . ref1)) && (one (ref1 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));34
this/inv9;(all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 !in (ref0 . (^ (~ (Workstation <: succ)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv6;(all ref0:(one Product)|((ref0 in Component) => (no (ref0 . (^ (Product <: parts))))));1;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (^ (Product <: parts))))));5
this/inv8;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((ref1 !in (ref2 . (Component <: workstation))) && (ref2 in (ref0 . (Component <: workstation)))));1;(all ref0:(one Dangerous),ref1:(one Worker),ref2:(one Workstation)|(((ref1 in (ref2 . (Workstation <: workers))) && (ref2 in (ref0 . (Component <: workstation)))) => (ref1 in Robot)));14
this/inv9;((all ref0:(one Workstation)|(ref0 !in (begin & end))) && (all ref1:(one ((Workstation - end) - begin))|((((Workstation <: succ) . ref1) != (ref1 . (Workstation <: succ))) && (one ((Workstation <: succ) . ref1)) && (one (ref1 . (Workstation <: succ))))) && (no (((Workstation <: succ) . begin) + (end . (Workstation <: succ)))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));34
this/inv5;(all ref0:(one Workstation)|(no (Human & Robot)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));5
this/inv2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && ((Worker . (^ (Workstation <: workers))) = Workstation));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && ((Worker . (~ (Workstation <: workers))) = Workstation));6
this/inv5;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));6
this/inv2;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Worker)|(ref4 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1))) && (all ref4:(one Workstation)|(some (ref4 . (Workstation <: workers)))) && (all ref5:(one Worker)|(ref5 in (Workstation . (Workstation <: workers)))));17
this/inv5;(all ref0:(one Workstation)|((# (((ref0 . (Workstation <: workers)) & Human) & Robot)) = 0));1;((((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)) = none);10
this/inv9;((all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (all ref3:(one (Workstation - begin))|(one ref4:(one ((Workstation - begin) - ref3))|(ref3 in (ref4 . (Workstation <: succ))))) && (no ref0:(one Workstation)|(ref0 in (ref0 . (Workstation <: succ)))) && (no ref1:(one Workstation)|(begin in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));24
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) = Human) || ((ref0 . (Workstation <: workers)) = Robot)));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));6
this/inv9;((all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (all ref3:(one (Workstation - begin))|(one ref4:(one (Workstation - begin))|(ref3 in (ref4 . (Workstation <: succ))))) && (no ref0:(one Workstation)|(ref0 in (ref0 . (Workstation <: succ)))) && (no ref1:(one Workstation)|(begin in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));24
this/inv3;(some (Component . (Component <: workstation)));1;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));5
this/inv6;(Component !in (Component . (^ (Product <: parts))));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));5
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (Product <: parts))) => (ref1 in ((ref0 . (Component <: workstation)) . (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Component) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));13
this/inv10;(all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in end)));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));14
this/inv5;(all ref0:(one Workstation)|((Human in (ref0 . (Workstation <: workers))) => (((Robot !in (ref0 . (Workstation <: workers))) && (Robot in (ref0 . (Workstation <: workers)))) => (Human !in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Human)) || ((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Robot))));20
this/inv10;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 . (Product <: parts)) in ref1) => ((ref0 . (Product <: parts)) in ref0)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));15
this/inv10;(all ref0:(one Component)|((some (ref0 . (Component <: workstation))) => (some (ref0 . (Product <: parts)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));12
this/inv9;((all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (all ref3:(one (Workstation - begin))|(one ref4:(one (Workstation - begin))|(ref3 in (ref4 . (Workstation <: succ))))) && (no ref0:(one Workstation)|(ref0 in (ref0 . (^ (Workstation <: succ))))) && (no ref1:(one Workstation)|(begin in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));25
this/inv10;(all ref0:(one Workstation)|((ref0 = begin) => (ref0 != end)));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));16
this/inv9;(all ref0:(one Workstation)|((ref0 in (begin . (Workstation <: succ))) || (ref0 in (end . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));15
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(ref0 in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));8
this/inv7;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (^ (Product <: parts))) in Dangerous)));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));7
this/inv10;(all ref0:(one Component)|((some (ref0 . (Component <: workstation))) => (some (ref0 . (* (Product <: parts))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));13
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(ref1 in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));8
this/inv7;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref0 . (^ (Product <: parts))) in Dangerous)));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));7
this/inv10;(all ref0:(one Component)|((some (ref0 . (Component <: workstation))) => ((ref0 . (* (Product <: parts))) = Component)));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));14
this/inv9;(all ref0:(one begin)|(ref0 !in end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv4;((no iden) && (no (Material . (Product <: parts))) && (some (Component . (Product <: parts))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));8
this/inv8;(all ref0:(one Component)|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human));1;(all ref0:(one (Component & Dangerous))|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human));2
this/inv9;(all ref0:(one Workstation)|((ref0 = end) => (ref0 != begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv10;(all ref0:(one Component)|((some (ref0 . (Component <: workstation))) => ((ref0 . (^ (Product <: parts))) = Component)));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));12
this/inv4;((iden !in (Product <: parts)) && (no (Material . (Product <: parts))) && (some (Component . (Product <: parts))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));9
this/inv7;(all ref0:(one Dangerous)|((ref0 . (^ (Product <: parts))) = Dangerous));1;(all ref0:(one Dangerous)|((ref0 . (^ (~ (Product <: parts)))) in Dangerous));5
this/inv9;((no (end . (Workstation <: succ))) && ((Workstation . (Workstation <: succ)) != begin));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv8;(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) = Robot);1;(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) in Robot);2
this/inv7;(all ref0:(one Dangerous),ref1:(one Product)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref1 in Dangerous)));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));6
this/inv8;(all ref0:(one (Component & Dangerous)),ref1:(one (ref0 . (Component <: workstation)))|(no (ref1 & Human)));1;(all ref0:(one Dangerous),ref1:(one ((ref0 . (Component <: workstation)) . (Workstation <: workers)))|(no (ref1 & Human)));4
this/inv8;(all ref0:(one Component)|(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) !in Human));1;(no (((Dangerous . (Component <: workstation)) . (Workstation <: workers)) & Human));4
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Worker),ref4:(one Workstation)|(((ref4 in ((Workstation <: workers) . ref2)) && (ref4 in ((Workstation <: workers) . ref3))) => (ref2 = ref3))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ((Workstation <: workers) . ref2))));21
this/inv2;((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Component <: workstation))))) && (some ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));11
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref1 in begin) => ((all ref2:(one Workstation)|((all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))) && (ref2 !in (ref2 . (^ (Workstation <: succ)))))) && (ref0 in (ref1 . (^ (Workstation <: succ))))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));33
this/inv7;(all ref0:(one Component)|(((ref0 . (Product <: parts)) & Dangerous) in Dangerous));1;(((Product <: parts) . Dangerous) in Dangerous);5
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv6;(iden !in (Product <: parts));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));6
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|(((ref2 in (ref3 . (Workstation <: workers))) && (ref2 in (ref4 . (Workstation <: workers)))) => (ref3 = ref4))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));21
this/inv7;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) & Dangerous) in Dangerous));1;(all ref0:(one Dangerous)|((ref0 . (^ (~ (Product <: parts)))) in Dangerous));5
this/inv9;(all ref0:(one Workstation)|(ref0 in (((^ (Workstation <: succ)) . end) & (begin . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) & iden)) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;(all ref0:(one Workstation)|((ref0 in (((^ (Workstation <: succ)) . end) & (begin . (^ (Workstation <: succ))))) && (begin != end)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation)|(one ref1:(one begin)|(no ((Workstation <: succ) . ref1)))) && (all ref2:(one Workstation)|(one ref3:(one end)|(no (ref3 . (^ (Workstation <: succ)))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(((Workstation - end) . (^ (Workstation <: succ))) = end);1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(Workstation in (((^ (Workstation <: succ)) . end) & (begin . (^ (Workstation <: succ)))));1;(((Workstation <: succ) in (Workstation ->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;((all ref0:(one Workstation)|(one ((Workstation <: succ) . begin))) && (all ref1:(one Workstation)|(no (end . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;(((* (Workstation <: succ)) . end) = (begin . (* (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(((ref1 . (Component <: workstation)) in (((ref0 . (Component <: workstation)) . (~ (Workstation <: succ))) . (^ (~ (Workstation <: succ))))) && (some (ref1 . (Component <: workstation)))));1;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));17
this/inv9;(((^ (Workstation <: succ)) . end) = (begin . (^ (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;((no (end . (^ (Workstation <: succ)))) && (one ((Workstation <: succ) . begin)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv9;(Workstation in (((* (Workstation <: succ)) . end) & (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in (Workstation ->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;((((* (Workstation <: succ)) . end) = (begin . (* (Workstation <: succ)))) && (no ((Workstation <: succ) & iden)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));13
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(((ref1 . (Component <: workstation)) in (((ref0 . (Component <: workstation)) . (Workstation <: succ)) . (^ (Workstation <: succ)))) && (some (ref1 . (Component <: workstation)))));1;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation)|((ref0 in end) => (ref0 !in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no ((Workstation <: succ) & iden)) && (begin in ((^ (Workstation <: succ)) . end)) && (end in (begin . (^ (Workstation <: succ)))));1;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv6;(no (Component & (Component . (Product <: parts))));1;(no ((^ (Product <: parts)) & iden));5
this/inv9;((no (end . (^ (Workstation <: succ)))) && (one ((Workstation <: succ) . begin)) && (begin != end));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv5;(all ref0:(one Human),ref1:(one Robot)|(no (ref0 & ref1)));1;(all ref0:(one Human),ref1:(one Robot)|(no (((Workstation <: workers) . ref0) & ((Workstation <: workers) . ref1))));8
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (Workstation in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));8
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no ((Workstation <: succ) . end)) && (Workstation in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));2
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 in end) => (no (Workstation - (ref2 & (ref2 . (^ (Workstation <: succ)))))))));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));15
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref2 in end)) => (ref3 !in (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));17
this/inv9;(all ref0:(one end)|(no (ref0 . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv5;((all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))) && (all ref3:(one Human),ref4:(one Robot),ref5:(one Workstation)|((ref3 in (ref5 . (Workstation <: workers))) => (ref4 !in (ref5 . (Workstation <: workers))))) && (all ref6:(one Workstation)|((ref6 . (Workstation <: workers)) = ((ref6 . (Workstation <: workers)) & Robot))));1;((all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))) && (all ref3:(one Human),ref4:(one Robot),ref5:(one Workstation)|((ref3 in (ref5 . (Workstation <: workers))) => (ref4 !in (ref5 . (Workstation <: workers))))));22
this/inv7;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => ((ref0 + (ref0 . (Product <: parts))) in Dangerous)));1;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => (ref0 in Dangerous)));8
this/inv9;((all ref0:(one (Workstation - begin))|(one ((Workstation <: succ) . ref0))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv9;(((Workstation <: succ) in ((Workstation - begin) one->lone Workstation)) && (no ((Workstation <: succ) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));10
this/inv7;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => ((ref0 + (ref0 . (^ (Product <: parts)))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));7
this/inv7;(all ref0:(one Component)|((some (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));1;(all ref0:(one Product)|((some ((ref0 . (^ (Product <: parts))) & Dangerous)) => (ref0 in Dangerous)));4
this/inv9;(((Workstation <: succ) in ((Workstation - begin) one->one (Workstation - end))) && (no ((Workstation <: succ) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));14
this/inv9;(all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (no ((Workstation <: succ) . ref0)) && ((no (ref0 . (Workstation <: succ))) <=> (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 in begin)));1;(all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && ((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin)) && ((no (ref0 . (Workstation <: succ))) <=> (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));9
this/inv7;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) in Dangerous) => ((ref0 + (ref0 . (^ (Product <: parts)))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));8
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in ((Workstation <: workers) . ref2)) && (ref0 in Human) && (ref1 in ((Workstation <: workers) . ref3)) && (ref1 in Robot)) => (ref2 != ref3)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Human) && (ref1 in (ref3 . (Workstation <: workers))) && (ref1 in Robot)) => (ref2 != ref3)));12
this/inv9;(((Workstation <: succ) in ((Workstation - begin) lone->one Workstation)) && (no ((Workstation <: succ) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));10
this/inv9;(all ref0:(one Workstation)|(((lone (ref0 . (Workstation <: succ))) && ((no (ref0 . (Workstation <: succ))) <=> (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 in begin)) <=> (no ((Workstation <: succ) . ref0))));1;(all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && ((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin)) && ((no (ref0 . (Workstation <: succ))) <=> (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));18
this/inv7;(all ref0:(one Component)|(((ref0 . (* (Product <: parts))) in Dangerous) => ((ref0 + (ref0 . (^ (Product <: parts)))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));8
this/inv9;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && (no ((Workstation <: succ) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));8
this/inv9;(all ref0:(one Workstation)|((((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 !in begin) && (ref0 !in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && (no (ref0 . (Workstation <: succ))) && (ref0 in end)) || (((# (ref0 . (Workstation <: succ))) = 1) && (no ((Workstation <: succ) . ref0)) && (ref0 in begin)) || ((no ((Workstation <: succ) . ref0)) && (no (ref0 . (Workstation <: succ))) && (ref0 in begin) && (ref0 in end))));1;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 !in begin) && (ref0 !in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && (no (ref0 . (Workstation <: succ))) && (ref0 !in begin) && (ref0 in end)) || (((# (ref0 . (Workstation <: succ))) = 1) && (no ((Workstation <: succ) . ref0)) && (ref0 !in end) && (ref0 in begin)) || ((no ((Workstation <: succ) . ref0)) && (no (ref0 . (Workstation <: succ))) && (ref0 in begin) && (ref0 in end))) && (ref0 !in ((^ (Workstation <: succ)) . ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));21
this/inv9;(all ref0:(one begin),ref1:(one end)|((no (ref1 . (Workstation <: succ))) && (ref0 !in (Workstation . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 in end) => (no (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));11
this/inv7;(all ref0:(one Component)|((ref0 . (Product <: parts)) in Dangerous));1;(((Product <: parts) . Dangerous) in Dangerous);3
this/inv7;(all ref0:(one Component)|(((ref0 . (* (Product <: parts))) in Dangerous) => ((ref0 + (ref0 . (* (Product <: parts)))) in Dangerous)));1;(all ref0:(one Component)|((ref0 in ((* (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));9
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) && (ref1 in end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;(all ref0:(one Workstation)|((((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 !in begin) && (ref0 !in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && (no (ref0 . (Workstation <: succ))) && (ref0 !in begin) && (ref0 in end)) || (((# (ref0 . (Workstation <: succ))) = 1) && (no ((Workstation <: succ) . ref0)) && (ref0 !in end) && (ref0 in begin)) || ((no ((Workstation <: succ) . ref0)) && (no (ref0 . (Workstation <: succ))) && (ref0 in begin) && (ref0 in end))));1;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 !in begin) && (ref0 !in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && (no (ref0 . (Workstation <: succ))) && (ref0 !in begin) && (ref0 in end)) || (((# (ref0 . (Workstation <: succ))) = 1) && (no ((Workstation <: succ) . ref0)) && (ref0 !in end) && (ref0 in begin)) || ((no ((Workstation <: succ) . ref0)) && (no (ref0 . (Workstation <: succ))) && (ref0 in begin) && (ref0 in end))) && (ref0 !in ((^ (Workstation <: succ)) . ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));15
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((Component . (Product <: parts)) . (Component <: workstation)) . (* (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));9
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|(ref2 in ((Workstation <: workers) . ref2)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ((Workstation <: workers) . ref2))));10
this/inv9;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((Workstation <: succ) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (some (ref0 & (Component & Dangerous)))));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));10
this/inv9;((all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) && (ref1 in end)))) && (all ref2:(one Workstation)|(one ref3:(one Workstation)|((ref3 in (ref2 . (^ (Workstation <: succ)))) && (ref3 in begin)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv9;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (Workstation <: succ))) && (ref0 !in (Workstation . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));18
this/inv1;(all ref0:(one Worker)|((ref0 !in Human) || (ref0 !in Robot)));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));6
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|(ref2 in ((Workstation <: workers) . ref3)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));10
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (no (ref2 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));8
this/inv9;((all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) && (ref1 in end)))) && (all ref2:(one Workstation)|(one ref3:(one Workstation)|((ref3 in (ref2 . (* (Workstation <: succ)))) && (ref3 in begin)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv2;(all ref0:(one Workstation)|(one ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers)))));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|((ref2 -> ref3) in (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one ((Workstation <: workers) . ref1)) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv9;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));1;(((Workstation <: succ) in ((Workstation - end) lone->one Workstation)) && ((Workstation <: succ) in (Workstation one->lone (Workstation - begin))) && (no ((^ (Workstation <: succ)) & iden)) && (begin in ((* (Workstation <: succ)) . end)) && (end in (begin . (* (Workstation <: succ)))));5
this/inv8;(Human !in ((Dangerous . (Component <: workstation)) . (Workstation <: workers)));1;(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) in Robot);4
this/inv4;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no ((ref1 . (Product <: parts)) - ref1))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));6
this/inv9;((all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) && (ref1 in end)))) && (all ref2:(one Workstation)|(some ref3:(one Workstation)|((ref3 in (ref2 . (* (Workstation <: succ)))) && (ref3 in begin)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv9;((no ((^ (Workstation <: succ)) & iden)) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation = (begin . (* (Workstation <: succ)))));9
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((Product . (Product <: parts)) . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));7
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) !in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (~ (^ (Workstation <: succ))))));8
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));12
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((one (ref2 . (Workstation <: succ))) <=> (ref2 !in end))));19
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref2 . (Workstation <: workers))) && (ref2 != ref3)) => (ref1 !in (ref3 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));17
this/inv9;((all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (^ (Workstation <: succ)))) && (ref1 in end)))) && (all ref2:(one Workstation)|(one ref3:(one Workstation)|((ref3 in (ref2 . (* (Workstation <: succ)))) && (ref3 in begin)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(some ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));8
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (~ (^ (Workstation <: succ))))));6
this/inv9;((all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (^ (Workstation <: succ)))) && (ref1 in end)))) && (all ref2:(one Workstation)|(one ref3:(one Workstation)|((ref3 in ((Workstation <: succ) . ref2)) && (ref3 in begin)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));24
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Worker),ref4:(one Workstation),ref5:(one Workstation)|(((ref2 in (ref4 . (Workstation <: workers))) && (ref2 in (ref5 . (Workstation <: workers)))) => (ref2 = ref5))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));22
this/inv9;(one ref0:(one Workstation)|(! (ref0 in (Workstation . (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));14
this/inv9;((all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) && (ref1 in end)))) && (all ref2:(one Workstation)|(one ref3:(one Workstation)|((ref3 in ((Workstation <: succ) . ref2)) && (ref3 in begin)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((Component & (Product . (* (Product <: parts)))) . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));10
this/inv10;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (~ (Workstation <: succ))))));5
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref0 . (Product <: parts))) < 0) && (no (ref1 . (Product <: parts)))));1;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));6
this/inv9;((one ref0:(one Workstation)|(! (ref0 in (Workstation . (Workstation <: succ))))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));8
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) <=> (no ((ref1 . (Workstation <: workers)) & Robot))));1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (no ((ref1 . (Workstation <: workers)) & Robot))));6
this/inv9;(all ref0:(one Workstation)|((one (((* (Workstation <: succ)) . ref0) & begin)) && (one ((ref0 . (Workstation <: succ)) & end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv6;(all ref0:(one Product),ref1:(one Product)|(((ref0 in Component) && (ref1 in (ref0 . (Product <: parts)))) => (ref0 != ref1)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));9
this/inv10;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in (((^ (Workstation <: succ)) . ref0) . (Component <: workstation))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));4
this/inv9;(all ref0:(one begin),ref1:(one end)|(ref1 in (ref0 . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;((Workstation - begin) = (Workstation . (Workstation <: succ)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && ((Workstation - begin) in (Workstation . (Workstation <: succ))));13
this/inv4;(all ref0:(one Component),ref1:(one Material)|((ref0 in (ref0 . (Product <: parts))) && (ref1 !in (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));10
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref0 . (Product <: parts))) < 1) && (no (ref1 . (Product <: parts)))));1;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));6
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|(((ref2 in (ref3 . (Workstation <: workers))) && (ref2 in (ref4 . (Workstation <: workers)))) => (ref2 != ref4))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));19
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|((ref2 in (ref3 . (Workstation <: workers))) => (ref2 !in (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));15
this/inv4;(all ref0:(one Component),ref1:(one Material)|((1 < (# (ref0 . (Product <: parts)))) && (no (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));8
this/inv4;(all ref0:(one Component),ref1:(one Material),ref2:(one Product)|((no (ref1 . (Product <: parts))) && (ref0 in (ref2 . (Product <: parts)))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));10
this/inv9;((no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && ((Workstation - begin) = (Workstation . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && ((Workstation - begin) in (Workstation . (Workstation <: succ))));11
this/inv9;(all ref0:(one begin),ref1:(one end)|((ref0 != ref1) && (ref1 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one ((Workstation <: workers) . ref1)) && ((ref0 -> ref1) in (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));9
this/inv9;(all ref0:(one Workstation)|((one (((* (Workstation <: succ)) . ref0) & begin)) && (some ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));14
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && ((Workstation - begin) = (Workstation . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && ((Workstation - begin) in (Workstation . (Workstation <: succ))));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(some ((Workstation <: workers) . ref0)));1;((Workstation <: workers) in (Workstation one->some Worker));9
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts)))));1;(((Product <: parts) . Product) = Component);8
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one (ref0 . (Workstation <: workers))) && ((ref0 -> ref1) in (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|((ref2 -> ref1) in (Workstation <: workers)))));9
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((some (ref0 . (Component <: workstation))) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));8
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation = (begin . (* (Workstation <: succ)))));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((some (ref1 . (Workstation <: workers))) => (some ((Workstation <: workers) . ref0))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))) && (some (ref0 . (Workstation <: workers)))));11
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));12
this/inv9;(all ref0:(one (Workstation - begin))|((# (ref0 & (begin . (^ (Workstation <: succ))))) = 1));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(ref2 in (begin . (* (Workstation <: succ))))));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));17
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Component),ref2:(one end)|(ref2 in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));16
this/inv5;(all ref0:(one Robot),ref1:(one Workstation)|((! (some ref2:(one Human)|(ref2 in (ref1 . (Workstation <: workers))))) <=> (ref0 in (ref1 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));12
this/inv4;(all ref0:(one Material)|(no (ref0 . (Product <: parts))));1;(((Product <: parts) . Product) = Component);6
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation = (begin . (* (Workstation <: succ)))));8
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker),ref2:(one Worker)|(((ref1 in (ref0 . (Workstation <: workers))) && (ref1 in Human) && (ref2 in (ref0 . (Workstation <: workers)))) => (ref2 !in Robot))));1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (all ref2:(one Worker)|((ref2 in (ref1 . (Workstation <: workers))) => (ref2 !in Robot)))));17
this/inv10;(all ref0:(one Component)|((no ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) . (^ (Workstation <: succ)))) || ((ref0 . (Component <: workstation)) in ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) . (^ (Workstation <: succ))))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (~ (Workstation <: succ))))));19
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) & iden)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation = (begin . (* (Workstation <: succ)))));9
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((! (ref0 in (ref2 . (Workstation <: workers)))) <=> (ref1 in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 !in (ref2 . (Workstation <: workers))) <=> (ref1 in (ref2 . (Workstation <: workers)))));9
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Component)|(some ref2:(one end)|(ref2 in (ref1 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));16
this/inv10;(all ref0:(one Component)|((no ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) . (* (Workstation <: succ)))) || ((ref0 . (Component <: workstation)) in ((((ref0 . (^ (Product <: parts))) & Component) . (Component <: workstation)) . (* (Workstation <: succ))))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));19
this/inv9;(all ref0:(one Workstation)|(((((Workstation <: succ) . ref0) & begin) != ((ref0 . (Workstation <: succ)) & end)) && (one (((Workstation <: succ) . ref0) & begin)) && (one ((ref0 . (Workstation <: succ)) & end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));23
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one (Workstation - begin))|(ref2 in (begin . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|(lone (ref3 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));11
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref0 . (Product <: parts))) > 0) && (no (ref1 . (Product <: parts))) && (ref0 !in Dangerous)));1;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));7
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Component)|(some ref2:(one end)|((ref1 !in (ref1 . (^ (Workstation <: succ)))) && (ref2 in (ref1 . (^ (Workstation <: succ))))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));18
this/inv2;(all ref0:(one Workstation),ref1:(one Workstation)|((ref0 != ref1) => (no ((ref0 . (Workstation <: workers)) & (ref1 . (Workstation <: workers))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|((ref0 != ref1) => (no ((ref0 . (Workstation <: workers)) & (ref1 . (Workstation <: workers)))))) && ((Workstation <: workers) in (Workstation one->some Worker)));10
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Component)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Component)|(some ref3:(one end)|(ref3 in (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));16
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one (Workstation - begin))|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one (Workstation - begin))|(ref2 in (begin . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|(lone (ref3 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));11
this/inv9;(all ref0:(one Workstation)|(((((* (Workstation <: succ)) . ref0) & begin) != ((ref0 . (* (Workstation <: succ))) & end)) && (one (((* (Workstation <: succ)) . ref0) & begin)) && (one ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));26
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));2
this/inv3;(all ref0:(one Component)|(lone ((Component <: workstation) . ref0)));1;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));6
this/inv9;(all ref0:(one Workstation)|((one (((Workstation <: succ) . ref0) & begin)) && (one ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;(all ref0:(one Workstation)|(((one (((Workstation <: succ) . ref0) & begin)) || (ref0 in begin)) && (one ((ref0 . (* (Workstation <: succ))) & end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));17
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(! ((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers))))));7
this/inv7;(all ref0:(one Component)|(some ref1:(one Component)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref1 in Dangerous))));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));11
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Workstation),ref2:(one end)|(ref2 in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));16
this/inv1;(all ref0:(one Workstation)|((Human in (ref0 . (Workstation <: workers))) || (Robot in (ref0 . (Workstation <: workers)))));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));10
this/inv6;(all ref0:(one Component)|(ref0 !in ((Product <: parts) . ref0)));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));3
this/inv6;(all ref0:(one Component)|(! (ref0 in ((Product <: parts) . ref0))));1;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));5
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv7;(all ref0:(one Component)|(some ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref1 in Dangerous))));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));6
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) && (ref1 !in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))));8
this/inv2;((all ref0:(one Workstation)|(Worker in (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 = ref3))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));20
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(some ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))) && ((ref0 -> ref1) in (Workstation <: workers)))));1;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))) && ((ref0 -> ref1) in (Workstation <: workers)))));8
this/inv6;(all ref0:(one Component)|(! (some ref1:(one Product)|(ref0 in (ref1 . (Product <: parts))))));1;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));6
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|((ref2 -> ref3) in (Product <: parts)))) && ((ref0 -> ref1) in (Product <: parts)))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material)|(no ref3:(one Product)|((ref2 -> ref3) in (Product <: parts)))));16
this/inv4;((all ref0:(one Product)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));4
this/inv8;(all ref0:(one Component)|((Dangerous in ref0) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) = (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Robot))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot)));12
this/inv7;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref1 in Dangerous)));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));6
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in ref2) && (ref0 in Robot) && (ref1 in ref2)) => (ref1 in Robot)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Robot) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Robot)));10
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (begin != end));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv4;(all ref0:(one Component),ref1:(one Material)|((no (ref1 . (Product <: parts))) && (some ((Product <: parts) . ref0))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));8
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((Workstation <: succ) & iden)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));15
this/inv2;((all ref0:(one Worker)|(ref0 in (Workstation . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 = ref3))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));22
this/inv9;(all ref0:(one Workstation)|((some ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: succ)))) || (some ref2:(one Workstation)|(ref2 in (ref0 . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv8;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));7
this/inv9;((one ref0:(one end)|(all ref1:(one (Workstation - ref0))|(ref1 !in end))) && (one ref2:(one begin)|(all ref3:(one (Workstation - ref2))|(ref3 !in begin))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));14
this/inv7;(all ref0:(one Component),ref1:(one Product)|(((ref0 in (ref1 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));1;(all ref0:(one Component),ref1:(one Product)|((((ref0 -> ref1) in (Product <: parts)) && (ref1 in Dangerous)) => (ref0 in Dangerous)));7
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation = (begin . (* (Workstation <: succ)))));10
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one ((Workstation - ref1) - ref0))|(ref2 !in (begin + end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in end))) && (all ref1:(one begin)|(ref1 !in (Workstation . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation),ref4:(one end)|(ref4 in (ref3 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));26
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one ((Workstation - ref1) - ref0))|(no (ref2 & (begin + end)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv4;(all ref0:(one Component),ref1:(one Material)|((! (some ref3:(one Product)|(ref3 in (ref1 . (Product <: parts))))) && (some ref2:(one Product)|(ref2 in (ref0 . (Product <: parts))))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));15
this/inv2;(all ref0:(one Worker)|((none != (Workstation . (Workstation <: workers))) && (ref0 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(none != (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));10
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in end))) && (all ref1:(one Workstation)|((ref1 in end) => (ref1 !in begin))) && (all ref2:(one begin)|(ref2 !in (Workstation . (Workstation <: succ)))) && (all ref3:(one Workstation)|(ref3 !in (ref3 . (^ (Workstation <: succ))))) && (all ref4:(one Workstation),ref5:(one end)|(ref5 in (ref4 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));37
this/inv9;((all ref0:(one (Workstation & begin))|((ref0 . (Workstation <: succ)) in end)) && (all ref1:(one (Workstation & end))|((ref1 . (Workstation <: succ)) in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - begin))|(ref1 in (Workstation . (Workstation <: succ)))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - begin))|(ref1 in (Workstation . (Workstation <: succ)))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));11
this/inv6;(all ref0:(one Product)|(no (Component . (Product <: parts))));1;(no ((^ (Product <: parts)) & iden));6
this/inv9;(all ref0:(one Workstation)|(((ref0 = end) || (ref0 in ((begin . (Workstation <: succ)) . (* (Workstation <: succ))))) && (no ((ref0 . (Workstation <: succ)) & ((ref0 . (Workstation <: succ)) . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv9;(all ref0:(one (Workstation & begin))|((ref0 . (Workstation <: succ)) in end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv2;(all ref0:(one Worker)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (Workstation . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));8
this/inv6;(all ref0:(one Component),ref1:(one Dangerous)|((ref0 !in (ref0 . (Product <: parts))) && (ref1 !in (ref0 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));10
this/inv9;((all ref0:(one Workstation)|((ref0 = begin) => (ref0 != end))) && (all ref1:(one Workstation)|((ref1 in end) => (ref1 !in begin))) && (all ref2:(one begin)|(ref2 !in (Workstation . (Workstation <: succ)))) && (all ref3:(one Workstation)|(ref3 !in (ref3 . (^ (Workstation <: succ))))) && (all ref4:(one Workstation),ref5:(one end)|(ref5 in (ref4 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));37
this/inv9;(all ref0:(one (Workstation & begin))|((ref0 != (ref0 . (Workstation <: succ))) && ((ref0 . (Workstation <: succ)) in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;(all ref0:(one Workstation)|(((ref0 = begin) || (ref0 in ((begin . (Workstation <: succ)) . (* (Workstation <: succ))))) && (no ((ref0 . (Workstation <: succ)) & ((ref0 . (Workstation <: succ)) . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv9;((all ref0:(one (Workstation & begin))|((ref0 != (ref0 . (Workstation <: succ))) && ((ref0 . (Workstation <: succ)) in end))) && (all ref1:(one (Workstation & end))|((ref1 != (ref1 . (Workstation <: succ))) && ((ref1 . (Workstation <: succ)) in begin))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv9;((all ref0:(one Workstation)|((ref0 = begin) => (ref0 != end))) && (all ref1:(one Workstation)|((ref1 = end) => (ref1 != begin))) && (all ref2:(one begin)|(ref2 !in (Workstation . (Workstation <: succ)))) && (all ref3:(one Workstation)|(ref3 !in (ref3 . (^ (Workstation <: succ))))) && (all ref4:(one Workstation),ref5:(one end)|(ref5 in (ref4 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));37
this/inv6;(all ref0:(one Component),ref1:(one Dangerous)|((ref0 !in (ref0 . (Product <: parts))) && (ref1 !in (ref1 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));10
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Component <: workstation)))) && (ref2 in (ref0 . (^ (Component <: workstation)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));22
this/inv2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (none != (Workstation . (Workstation <: workers))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));10
this/inv6;(all ref0:(one Product)|(((ref0 in (ref0 . (Product <: parts))) && (ref0 in Component)) => (ref0 !in (Component . (Product <: parts)))));1;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (^ (Product <: parts))))));11
this/inv9;((all ref0:(one (Workstation & begin))|((ref0 != (ref0 . (Workstation <: succ))) && ((ref0 . (Workstation <: succ)) in end))) && (all ref1:(one (Workstation & end))|((ref1 != (ref1 . (Workstation <: succ))) && ((ref1 . (Workstation <: succ)) in begin))) && (all ref2:(one Workstation)|((ref2 . (Workstation <: succ)) in Workstation)));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));27
this/inv4;(all ref0:(one Product)|(((ref0 in Component) => (one (ref0 . (Product <: parts)))) || ((ref0 in Material) => (no (ref0 . (Product <: parts))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));6
this/inv6;(all ref0:(one Component),ref1:(one Product)|(((ref1 -> ref0) in (Product <: parts)) => (ref0 != ref1)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));7
this/inv9;(all ref0:(one Workstation)|(((((ref0 != end) || (ref0 = end)) && (ref0 != begin) && (ref0 in ((begin . (Workstation <: succ)) . (* (Workstation <: succ))))) || (ref0 = begin)) && (no ((ref0 . (Workstation <: succ)) & ((ref0 . (Workstation <: succ)) . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));32
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (((# ((ref0 . (Component <: workstation)) . (Workstation <: workers))) - Robot) = 0)));1;(all ref0:(one Component)|((ref0 in Dangerous) => ((# (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human)) = 0)));6
this/inv1;(all ref0:(one Worker)|((ref0 !in Robot) && (ref0 in Human)));1;(all ref0:(one Worker)|((ref0 !in Robot) <=> (ref0 in Human)));4
this/inv4;(all ref0:(one Product)|(((ref0 in Component) => (lone (ref0 . (Product <: parts)))) || ((ref0 in Material) => (no (ref0 . (Product <: parts))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));6
this/inv10;(all ref0:(one Component)|(((((ref0 . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)) in (ref0 . (Component <: workstation))) || ((((ref0 . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)) in ((ref0 . (Product <: parts)) . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((Workstation - ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) - (ref0 . (Component <: workstation)))));19
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|((ref1 in (ref0 . (~ (^ (Component <: workstation))))) && (ref2 in (ref0 . (^ (Component <: workstation)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));23
this/inv9;(all ref0:(one Workstation)|(some ref1:(one (Workstation & begin)),ref2:(one (Workstation & end))|(((ref0 . (Workstation <: succ)) = ref1) || ((ref0 . (Workstation <: succ)) = ref2))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv9;(all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end) && (ref0 in ((begin . (Workstation <: succ)) . (* (Workstation <: succ))))) || (ref0 = begin) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Workstation <: succ)))) && (ref2 in (ref0 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));18
this/inv7;(all ref0:(one Component)|(((ref0 in (ref0 . (Product <: parts))) && (ref0 in Dangerous)) => ((ref0 . (^ (Product <: parts))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));9
this/inv9;(all ref0:(one Workstation)|(some ref1:(one (Workstation & begin)),ref2:(one (Workstation & end))|((((ref0 . (Workstation <: succ)) = ref1) || ((ref0 . (Workstation <: succ)) = ref2)) && (ref0 != ref1) && (ref0 != ref2))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));23
this/inv9;((all ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(one ref3:(one end)|(ref3 in (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));16
this/inv10;(all ref0:(one Component)|(((((ref0 . (Product <: parts)) . (Component <: workstation)) !in (ref0 . (Component <: workstation))) && ((((ref0 . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)) in (ref0 . (Component <: workstation)))) || ((((ref0 . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)) in ((ref0 . (Product <: parts)) . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((Workstation - ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) - (ref0 . (Component <: workstation)))));29
this/inv6;(all ref0:(one Component),ref1:(one Material),ref2:(one Product)|((((ref2 -> ref0) in (Product <: parts)) => (ref2 !in Material)) || (((ref2 -> ref1) in (Product <: parts)) => (ref2 !in Component))));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));23
this/inv9;(all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end) && (ref0 in (begin . (* (Workstation <: succ))))) || (ref0 = begin) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 -> ref2) in (Workstation <: workers)) => ((ref0 -> ref1) !in (Workstation <: workers))));1;(all ref0:(one Human),ref1:(one Workstation)|(((ref1 -> ref0) in (Workstation <: workers)) => (all ref2:(one Robot)|((ref1 -> ref2) !in (Workstation <: workers)))));10
this/inv2;((all ref0:(one Worker)|(ref0 in (Workstation . (Workstation <: workers)))) && (some (Workstation <: workers)));1;(((Workstation <: workers) in (Workstation one->some Worker)) && (some (Workstation <: workers)));7
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((none != (ref1 . (Workstation <: workers))) && (none != (ref2 . (Workstation <: workers))) && (ref0 in (ref1 . (Workstation <: workers))) && (ref0 in (ref2 . (Workstation <: workers)))) => (ref1 = ref2)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));23
this/inv9;((all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(one ref3:(one end)|(ref3 in (ref2 . (^ (Workstation <: succ)))))) && (one ref0:(one begin)|(ref0 !in (Workstation . (Workstation <: succ)))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));22
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|((ref0 in (ref1 . (^ (Workstation <: succ)))) && (ref2 in (ref0 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));16
this/inv6;(all ref0:(one Component),ref1:(one Component)|((((ref0 -> ref1) in (Product <: parts)) => ((ref1 -> ref0) !in (Product <: parts))) && (((ref1 -> ref0) in (Product <: parts)) => ((ref0 -> ref1) !in (Product <: parts)))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));23
this/inv2;((all ref0:(one Workstation),ref1:(one Workstation)|((ref0 != ref1) => (no ((ref0 . (Workstation <: workers)) & (ref1 . (Workstation <: workers)))))) && (some (Workstation <: workers)));1;((all ref0:(one Workstation),ref1:(one Workstation)|((ref0 != ref1) => (no ((ref0 . (Workstation <: workers)) & (ref1 . (Workstation <: workers)))))) && ((Workstation <: workers) in (Workstation one->some Worker)));9
this/inv10;((all ref0:(one Component)|((ref0 . (Component <: workstation)) != ((ref0 . (Product <: parts)) . (Component <: workstation)))) && (all ref1:(one Component)|(((((ref1 . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)) in (ref1 . (Component <: workstation))) || ((((ref1 . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)) in ((ref1 . (Product <: parts)) . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((begin . (* (Workstation <: succ))) - ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));33
this/inv9;(all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end) && (ref0 in (begin . (^ (Workstation <: succ))))) || (ref0 = begin) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv3;((all ref0:(one Component)|(some ref1:(one Workstation)|(ref1 in (ref0 . (Component <: workstation))))) && (all ref2:(one Component)|(one ((Component <: workstation) . ref2))));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref1 in (ref0 . (Component <: workstation)))));10
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 = ref1) => (((ref0 -> ref1) !in (Product <: parts)) && ((ref1 -> ref0) !in (Product <: parts)))));1;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));16
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|((ref0 in (ref1 . (^ (Workstation <: succ)))) && (ref1 != ref2) && (ref2 in (ref0 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));17
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker),ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|(((ref1 in (ref3 . (Workstation <: workers))) && (ref2 in (ref4 . (Workstation <: workers))) && (ref3 != ref4)) => (ref1 != ref2))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));23
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component)|((ref1 . (Product <: parts)) in Material)));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));10
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(one ref2:(one end)|(ref2 in (ref1 . (^ (Workstation <: succ)))))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv8;(all ref0:(one Component)|(some ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (some ref2:(one Worker)|(((ref0 -> ref2) in (Workstation <: workers)) && (ref2 in Robot))))));1;(all ref0:(one Dangerous),ref1:(one Workstation)|(((ref0 -> ref1) in (Component <: workstation)) => (! (some ref2:(one Human)|((ref1 -> ref2) in (Workstation <: workers))))));15
this/inv9;(all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end) && (ref0 in (begin . (^ (Workstation <: succ))))) || (ref0 in begin) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv9;(all ref0:(one Workstation)|((one ((Workstation <: succ) . ref0)) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;((Workstation = (begin . (^ (Workstation <: succ)))) || (begin = end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((((ref0 -> ref2) in (Workstation <: workers)) => ((ref1 -> ref2) !in (Workstation <: workers))) || (((ref1 -> ref2) in (Workstation <: workers)) => ((ref0 -> ref2) !in (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((((ref2 -> ref0) in (Workstation <: workers)) => ((ref2 -> ref1) !in (Workstation <: workers))) || (((ref2 -> ref1) in (Workstation <: workers)) => ((ref2 -> ref0) !in (Workstation <: workers)))));14
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref2 . (Workstation <: workers))) && (ref2 != ref3)) => (ref1 !in (ref3 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));17
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|((ref0 != ref1) && (ref0 in (ref1 . (^ (Workstation <: succ)))) && (ref1 != ref2) && (ref2 in (ref0 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));20
this/inv9;(all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end) && (ref0 in (begin . (^ (Workstation <: succ))))) || (ref0 in begin) || (ref0 in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv8;(all ref0:(one Component)|(some ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (all ref2:(one Worker)|(((ref0 -> ref2) in (Workstation <: workers)) => (ref2 in Robot))))));1;(all ref0:(one Dangerous),ref1:(one Workstation)|(((ref0 -> ref1) in (Component <: workstation)) => (! (some ref2:(one Human)|((ref1 -> ref2) in (Workstation <: workers))))));15
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component),ref2:(one Dangerous)|(ref2 !in (ref1 . (Product <: parts)))) && (all ref3:(one Component)|((ref3 . (Product <: parts)) in Material)));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));17
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) & Component) in (Workstation . (~ (Component <: workstation)))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));10
this/inv9;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) && (ref0 !in (ref0 . (Workstation <: succ)))) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation),ref2:(one Workstation)|((ref0 != ref1) && (ref0 in (ref1 . (^ (Workstation <: succ)))) && (ref1 != ref2) && (ref2 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));20
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|((((ref0 -> ref2) in (Workstation <: workers)) && (ref0 in Human) && ((ref1 -> ref2) in (Workstation <: workers))) => (ref1 in Robot)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Robot) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Robot)));12
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(end in (ref1 . (^ (Workstation <: succ))))) && (begin != end) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv9;(all ref0:(one Workstation)|(((ref0 !in (begin + end)) && (ref0 in (begin . (^ (Workstation <: succ))))) || (ref0 in begin) || (ref0 in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) => (ref0 !in (ref1 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));18
this/inv9;((# Workstation) = (# (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv9;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) && (ref0 !in ((Workstation <: succ) . ref0))) || (ref0 in begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one Workstation)|((ref0 -> ref1) in (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));20
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component),ref2:(one Dangerous)|(ref2 !in (ref1 . (Product <: parts)))) && (all ref3:(one Component)|((ref3 . (Product <: parts)) in Material)) && (all ref4:(one Dangerous)|((ref4 . (Product <: parts)) in Material)));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));23
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(end in (ref1 . (^ (Workstation <: succ))))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));13
this/inv7;(all ref0:(one Material)|(some ref1:(one Component)|(((ref0 in (ref1 . (Product <: parts))) && (ref0 in Dangerous)) => ((ref1 . (Product <: parts)) in Dangerous))));1;(all ref0:(one Product),ref1:(one Product)|(((ref0 in (ref1 . (Product <: parts))) && (ref0 in Dangerous)) => (ref1 in Dangerous)));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in ((Workstation <: succ) . ref0))) && (all ref1:(one Workstation)|((one ((Workstation <: succ) . ref1)) || (ref1 in begin))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one Workstation)|(((ref0 -> ref1) in (Workstation <: succ)) && (ref1 in end)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));22
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(Dangerous !in (ref1 . (Product <: parts)))) && (all ref2:(one Component)|((ref2 . (Product <: parts)) in Material)) && (all ref3:(one Dangerous)|((ref3 . (Product <: parts)) in Material)));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));22
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in (ref0 . (Workstation <: succ)))) => (ref0 !in (ref1 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));20
this/inv5;(all ref0:(one Workstation)|((Human + Robot) !in (ref0 . (Workstation <: workers))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));10
this/inv9;((# (begin . (* (Workstation <: succ)))) = 1);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));13
this/inv9;((all ref0:(one Workstation)|(ref0 !in ((Workstation <: succ) . ref0))) && (all ref1:(one Workstation)|(((! (ref1 in begin)) <=> (ref1 in end)) || (one ((Workstation <: succ) . ref1)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));22
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) && (ref0 in end)) || ((ref0 in begin) => (some ref1:(one Workstation)|(((ref0 -> ref1) in (Workstation <: succ)) && (ref1 in end))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));29
this/inv9;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(end in (ref2 . (^ (Workstation <: succ))))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))) && (one begin));15
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one ref4:(one Workstation)|((ref4 in (ref3 . (Workstation <: succ))) && (ref4 in end))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));16
this/inv9;((all ref0:(one Workstation)|(ref0 !in ((Workstation <: succ) . ref0))) && (all ref1:(one Workstation)|((! ((ref1 in begin) <=> (ref1 in end))) || (one ((Workstation <: succ) . ref1)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));22
this/inv9;(all ref0:(one Workstation)|(((ref0 !in (begin + end)) && (ref0 in ((begin . (Workstation <: succ)) . (* (Workstation <: succ))))) || (ref0 in begin) || (ref0 in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv6;(all ref0:(one Component)|((ref0 !in (ref0 . (Product <: parts))) && (ref0 !in ((ref0 . (Product <: parts)) . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));11
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(Dangerous !in (ref1 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));10
this/inv9;(all ref0:(one Workstation)|(no ((Workstation <: succ) . ref0)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv7;(all ref0:(one Component),ref1:(one Material)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => ((ref0 . (Product <: parts)) in Dangerous)));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));6
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one Workstation)|((((ref1 !in begin) && (ref1 !in end)) || (ref1 in end)) && ((ref0 -> ref1) in (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));30
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((ref1 in (ref0 . (* (Workstation <: succ)))) => (ref0 !in (ref1 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv6;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (* (Product <: parts))))));1;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (^ (Product <: parts))))));4
this/inv4;((all ref0:(one Component)|(ref0 in (Product . (Product <: parts)))) && (no (Material <: (Product <: parts))));1;((all ref0:(one Component)|(ref0 in (Product . (~ (Product <: parts))))) && (no (Material & (Product . (~ (Product <: parts))))));8
this/inv9;(all ref0:(one Workstation)|(one ((Workstation <: succ) . ref0)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;((all ref0:(one Workstation)|(ref0 !in ((Workstation <: succ) . ref0))) && (all ref1:(one Workstation)|(((ref1 !in end) && (ref1 in begin)) || (one ((Workstation <: succ) . ref1)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv5;((Human + Robot) !in (Workstation . (Workstation <: workers)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));9
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one ref4:(one Workstation)|((ref4 in (ref3 . (^ (Workstation <: succ)))) && (ref4 in end))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));17
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component)|((Component !in (ref1 . (Product <: parts))) && (Dangerous !in (ref1 . (Product <: parts))))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));16
this/inv4;((all ref0:(one Component)|(ref0 in ((Product - Material) . (Product <: parts)))) && (no (Material <: (Product <: parts))));1;((all ref0:(one Component)|(ref0 in (Product . (~ (Product <: parts))))) && (no (Material & (Product . (~ (Product <: parts))))));10
this/inv9;((# (Workstation <: succ)) = ((# Workstation) - 1));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv7;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) in Dangerous) <=> (ref0 in Dangerous)));1;(all ref0:(one Component)|((ref0 in ((^ (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));6
this/inv7;(all ref0:(one Product)|(((ref0 in Component) && (ref0 in Dangerous)) => ((ref0 . (^ (Product <: parts))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));7
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one ref4:(one Workstation)|(some ref5:(one Workstation)|((ref4 in (ref3 . (^ (Workstation <: succ)))) && (ref4 in end) && (ref5 in (ref3 . (Workstation <: succ)))))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));23
this/inv5;(all ref0:(one Human),ref1:(one Robot)|((ref0 in (Workstation . (Workstation <: workers))) <=> (ref1 !in (Workstation . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))));11
this/inv6;(all ref0:(one Component)|((Component !in (ref0 . (Product <: parts))) && (Dangerous !in (ref0 . (Product <: parts)))));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));11
this/inv9;((all ref0:(one Workstation)|((lone ((Workstation <: succ) . ref0)) && (ref0 !in ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 !in end) && (ref1 in begin))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv4;(all ref0:(one Component)|((all ref1:(one Material)|(ref1 in (ref1 . (Product <: parts)))) && (ref0 in (ref0 . (Product <: parts)))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));12
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) || (ref0 in (begin . (* (Workstation <: succ)))) || (ref0 in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one ref4:(one Workstation)|(some ref5:(one Workstation)|((ref3 != ref4) && (ref4 in (ref3 . (^ (Workstation <: succ)))) && (ref4 in end) && (ref5 in (ref3 . (Workstation <: succ)))))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));26
this/inv7;(all ref0:(one Product)|(((ref0 in Component) && (ref0 in Dangerous)) => ((ref0 . (* (Product <: parts))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));9
this/inv9;((all ref0:(one (Workstation - begin))|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));15
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((some (ref0 . (~ (Workstation <: workers)))) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv9;((all ref0:(one Workstation)|(end in (ref0 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one ref4:(one Workstation)|(some ref5:(one Workstation)|((ref3 != ref4) && (ref4 in (ref3 . (^ (Workstation <: succ)))) && (ref4 in (ref5 . (^ (Workstation <: succ)))) && (ref4 in end) && (ref5 in (ref3 . (Workstation <: succ)))))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));32
this/inv9;(all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) && (one (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material),ref3:(one Product)|(ref0 !in (ref3 . (Product <: parts)))) && (ref0 in (ref1 . (Product <: parts))))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));14
this/inv9;(all ref0:(one Workstation)|((lone ((Workstation <: succ) . ref0)) && (ref0 !in ((Workstation <: succ) . ref0))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv6;(all ref0:(one (Component + Dangerous))|((Component !in (ref0 . (Product <: parts))) && (Dangerous !in (ref0 . (Product <: parts)))));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));11
this/inv8;(all ref0:(one Component),ref1:(one Product),ref2:(one Worker)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous) && (ref2 in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))) => (ref2 !in Human)));1;(all ref0:(one Component),ref1:(one Worker)|(((ref0 in Dangerous) && (ref1 in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))) => (ref1 !in Human)));17
this/inv9;((all ref0:(one (Workstation - end))|(end in (ref0 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;(((# Workstation) = (# (begin . (* (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));14
this/inv7;(all ref0:(one Product)|(((ref0 in Component) && (ref0 in Dangerous)) => ((ref0 . (Product <: parts)) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));8
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one ref4:(one Workstation)|(some ref5:(one Workstation)|((ref3 != ref4) && (ref3 != ref5) && (ref4 != ref5) && (ref4 in (ref3 . (^ (Workstation <: succ)))) && (ref4 in (ref5 . (^ (Workstation <: succ)))) && (ref4 in end) && (ref5 in (ref3 . (Workstation <: succ)))))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));38
this/inv5;(all ref0:(one Human),ref1:(one Robot)|((ref0 in (Workstation . (Workstation <: workers))) => (ref1 !in (Workstation . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))));9
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));18
this/inv9;(((# Workstation) = (# (begin . (* (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|(ref0 in (ref3 . (Product <: parts))))) && (ref0 in (ref1 . (Product <: parts))))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));14
this/inv9;((all ref0:(one Workstation)|((lone ((Workstation <: succ) . ref0)) && (ref0 !in ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((one Workstation) => ((ref1 in begin) && (ref1 in end)))) && (all ref2:(one Workstation)|((! ((ref2 in begin) <=> (ref2 in end))) || (ref2 in ((Workstation <: succ) . ref2)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));36
this/inv6;(all ref0:(one (Component + Dangerous))|(Dangerous !in (ref0 . (Product <: parts))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));5
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(some (ref1 . (~ (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))));6
this/inv7;(all ref0:(one Product)|(((ref0 in Component) && (Dangerous in ref0)) => (Dangerous in (ref0 . (Product <: parts)))));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));12
this/inv7;((all ref0:(one Component)|((((Product <: parts) . ref0) in Dangerous) => (ref0 in Dangerous))) && (((Product <: parts) . Dangerous) in Dangerous));1;((all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 in Dangerous))) && (((Product <: parts) . Dangerous) in Dangerous));4
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation)|((ref0 in end) => (no (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: succ))) && (ref1 in (ref0 . (Workstation <: succ)))) => (ref0 = ref1))) && (all ref2:(one Workstation),ref3:(one Workstation)|((ref2 in (ref3 . (Workstation <: succ))) => (no ref4:(one Workstation)|((ref2 in (ref4 . (Workstation <: succ))) && (ref4 in (ref3 . (Workstation <: succ))))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));36
this/inv6;((all ref0:(one (Component + Dangerous))|(Dangerous !in (ref0 . (Product <: parts)))) && (all ref1:(one (Component + Dangerous))|(Component !in (ref1 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));12
this/inv9;((all ref0:(one Workstation)|((lone ((Workstation <: succ) . ref0)) && (ref0 !in ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((! ((ref1 in begin) <=> (ref1 in end))) || ((one Workstation) => ((ref1 in begin) && (ref1 in end))) || (ref1 in ((Workstation <: succ) . ref1)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));35
this/inv9;(((# Workstation) = (# (begin . (* (Workstation <: succ))))) && (all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv8;(all ref0:(one Component),ref1:(one Worker),ref2:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref1 !in Human)));1;(all ref0:(one Component),ref1:(one Worker),ref2:(one Workstation)|((((ref0 -> ref2) in (Component <: workstation)) && (ref0 in Dangerous) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref1 !in Human)));8
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => ((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 !in end))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));20
this/inv7;(all ref0:(one Product)|(((ref0 in Component) && (Dangerous in ref0)) => (Dangerous in (ref0 . (^ (Product <: parts))))));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));11
this/inv7;((all ref0:(one Component)|((ref0 in Dangerous) <=> (some ((ref0 . (Product <: parts)) & Dangerous)))) && (((Product <: parts) . Dangerous) in Dangerous));1;((all ref0:(one Component)|((some ((ref0 . (Product <: parts)) & Dangerous)) => (ref0 in Dangerous))) && (((Product <: parts) . Dangerous) in Dangerous));10
this/inv9;(all ref0:(one (Workstation - end))|(one ref1:(one (Workstation - ref0))|(ref1 in (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv8;(all ref0:(one Human),ref1:(one Workstation),ref2:(one (ref1 . (Product <: parts)))|((ref2 in Dangerous) => (ref0 !in (ref1 . (Workstation <: workers)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));12
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((ref1 in (ref0 . (Workstation <: succ))) => (ref0 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));18
this/inv6;((all ref0:(one Component)|(Dangerous !in (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(Component !in (ref1 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));12
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 in (ref1 . (Product <: parts))) || (ref1 in (ref0 . (Product <: parts)))) => (ref0 != ref1)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));11
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => ((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 !in end)))) && (all ref1:(one Workstation)|((ref1 in end) => ((no ((Workstation <: succ) . ref1)) && (ref1 !in begin)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));28
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(Component !in (ref1 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));10
this/inv9;(all ref0:(one Workstation)|(one ref1:(one (Workstation - ref0))|(ref1 in (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));15
this/inv9;((all ref0:(one Workstation)|(one ref1:(one (Workstation - ref0))|(ref1 in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));11
this/inv1;(all ref0:(one Worker),ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)));1;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));9
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Human) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Robot)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref0 in Robot) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Robot)));8
this/inv6;(all ref0:(one Component)|((ref0 !in ((Product <: parts) . ref0)) && (ref0 !in (ref0 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));9
this/inv9;((# ((* (Workstation <: succ)) . end)) = (# Workstation));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv2;((all ref0:(one Worker)|(one (ref0 . (Workstation <: workers)))) && (all ref1:(one Workstation),ref2:(one (ref1 . (Workstation <: workers))),ref3:(one (ref1 . (Workstation <: workers)))|(ref2 = ref3)));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (((Workstation <: workers) . Worker) = Workstation));13
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (one (Workstation . (Workstation <: workers))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));17
this/inv9;(((# ((* (Workstation <: succ)) . end)) = (# Workstation)) && (all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref0 . (Workstation <: succ)) = ref1))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;(all ref0:(one Workstation)|(((# (ref0 . (Workstation <: succ))) = 1) && (lone (ref0 . (Workstation <: workers)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv2;((all ref0:(one Worker)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation),ref2:(one (ref1 . (Workstation <: workers))),ref3:(one (ref1 . (Workstation <: workers)))|(ref2 = ref3)));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (((Workstation <: workers) . Worker) = Workstation));13
this/inv8;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (no ref2:(one (ref1 . (Workstation <: workers)))|(ref2 !in Human))));1;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation))),ref2:(one (ref1 . (Workstation <: workers)))|((ref0 in Dangerous) => (ref2 !in Human)));6
this/inv9;(((# ((* (Workstation <: succ)) . end)) = (# Workstation)) && (all ref0:(one Workstation)|(some ref1:(one Workstation)|((ref0 . (Workstation <: succ)) = ref1))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(one (ref2 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));18
this/inv6;(all ref0:(one Product)|((ref0 in Component) => ((ref0 !in ((Product <: parts) . ref0)) && (ref0 !in (ref0 . (Product <: parts))))));1;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (^ (Product <: parts))))));9
this/inv2;(all ref0:(one Worker)|(one (ref0 . (Workstation <: succ))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));10
this/inv9;(((# ((* (Workstation <: succ)) . end)) = (# Workstation)) && ((# Workstation) = (# (begin . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));15
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# (ref1 . (Workstation <: workers))) > 0) && (ref0 in (ref1 . (Workstation <: workers)))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));11
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one ref2:(one Workstation)|((ref2 -> ref1) in (Workstation <: workers))) && ((ref0 -> ref1) in (Workstation <: workers)))));1;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))) && ((ref0 -> ref1) in (Workstation <: workers)))));9
this/inv9;(((# ((* (Workstation <: succ)) . end)) = (# Workstation)) && ((# Workstation) = (# (begin . (* (Workstation <: succ))))) && (all ref0:(one Workstation)|((# (ref0 . (Workstation <: succ))) = 1)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));22
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref1 -> ref0) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((Product <: parts) in (ref2 -> ref3))))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref2 -> ref3) in (Product <: parts))))));12
this/inv9;(all ref0:(one Workstation)|((some (ref0 . (Workstation <: succ))) && (some (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one ref2:(one Workstation)|(all ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))) && ((ref0 -> ref1) in (Workstation <: workers)))));1;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))) && ((ref0 -> ref1) in (Workstation <: workers)))));10
this/inv2;(lone (Workstation <: succ));1;((Workstation <: workers) in (Workstation one->some Worker));7
this/inv2;(some ref0:(one Workstation)|(all ref1:(one Worker)|(((# (ref0 . (Workstation <: workers))) > 0) && (ref1 in (ref0 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));7
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: succ))) => ((ref0 . (Workstation <: workers)) = (ref1 . (Workstation <: workers)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));20
this/inv5;(all ref0:(one Workstation)|(no (((ref0 . (Workstation <: workers)) & Human) + Robot)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));9
this/inv9;(((# ((* (Workstation <: succ)) . end)) = (# Workstation)) && ((# Workstation) = (# (begin . (* (Workstation <: succ))))) && (all ref0:(one (Workstation - end))|((# (ref0 . (Workstation <: succ))) = 1)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));22
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((Product <: parts) in (ref2 -> ref3))))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref2 -> ref3) in (Product <: parts))))));10
this/inv2;(Worker = (Workstation . (Workstation <: workers)));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));10
this/inv1;(((Human & (Workstation . (Workstation <: workers))) = (Workstation . (Workstation <: workers))) || ((Robot & (Workstation . (Workstation <: workers))) = (Workstation . (Workstation <: workers))));1;(all ref0:(one Worker)|((one (ref0 & Human)) || (one (ref0 & Robot))));19
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|(((# (ref0 . (Workstation <: workers))) > 0) && (ref1 in (ref0 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));7
this/inv2;((lone (Workstation <: succ)) && (Workstation in ((~ (Workstation <: workers)) . Workstation)));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv7;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (Product <: parts))) => (ref1 in ref0)));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));12
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((Product <: parts) in (ref3 -> ref2))))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref2 -> ref3) in (Product <: parts))))));12
this/inv9;(((# ((* (Workstation <: succ)) . end)) = (# Workstation)) && ((# Workstation) = (# (begin . (* (Workstation <: succ))))) && (all ref0:(one (Workstation - end))|((# (ref0 . (Workstation <: succ))) = 1)) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));28
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|((# (ref2 . (Workstation <: workers))) > 0))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|((# (ref2 . (Workstation <: workers))) > 0)));11
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref3 -> ref2) in (Product <: parts))))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref2 -> ref3) in (Product <: parts))))));10
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(one (ref2 . (Workstation <: succ)))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));13
this/inv1;(((Workstation . (Workstation <: workers)) in Human) || ((Workstation . (Workstation <: workers)) in Robot));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));9
this/inv9;(all ref0:(one Workstation)|((# (ref0 . (Workstation <: succ))) = 0));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref1 -> ref0) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref3 -> ref2) in (Product <: parts))))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one univ),ref3:(one univ)|(((ref2 in Material) && (ref3 in Product)) => (! ((ref2 -> ref3) in (Product <: parts))))));12
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || (((ref1 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 = ref3)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || (((ref1 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 = ref3)))) && (Worker = (Workstation . (Workstation <: workers))));13
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(one (ref2 . (Workstation <: succ)))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));15
this/inv8;(all ref0:(one Product)|((ref0 in Dangerous) => (Robot in (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot)));6
this/inv8;(all ref0:(one Dangerous),ref1:(one Worker),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref1 in Robot)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (all ref1:(one ((ref0 . (Component <: workstation)) . (Workstation <: workers)))|(ref1 in Robot))));9
this/inv9;((all ref0:(one Workstation)|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));6
this/inv8;(all ref0:(one Product)|((ref0 in Dangerous) => (Robot in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot)));4
this/inv9;(one (((begin . (^ (Workstation <: succ))) :> (begin + end)) - begin));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: succ))) => (ref1 !in (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));17
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv8;(all ref0:(one Product)|((ref0 in Dangerous) => ((Human !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))) && (Robot in ((ref0 . (Component <: workstation)) . (Workstation <: workers))))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));12
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|((# (ref1 . (Component <: workstation))) = 1)));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|((# ((Workstation <: workers) . ref1)) = 1)));10
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => ((Human !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))) && (Robot in ((ref0 . (Component <: workstation)) . (Workstation <: workers))))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));12
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: succ))) => (ref1 !in (ref0 . (Workstation <: succ))))) && (all ref2:(one Workstation),ref3:(one Workstation)|((ref2 in (ref3 . (Workstation <: succ))) => ((# (ref3 . (Workstation <: succ))) > (# (ref2 . (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));27
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv9;(one ((begin . (^ (Workstation <: succ))) :> (begin + end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: succ))) => (ref1 !in (ref0 . (Workstation <: succ))))) && (all ref2:(one Workstation),ref3:(one Workstation)|((ref2 in (ref3 . (Workstation <: succ))) => ((# (ref3 . (Workstation <: succ))) > (# (ref2 . (Workstation <: succ)))))) && (all ref4:(one Workstation),ref5:(one Workstation)|((ref4 in (ref5 . (^ (Workstation <: succ)))) => (ref5 !in (ref5 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));42
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: succ))) => (ref1 !in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation),ref3:(one Workstation)|((ref2 in (ref3 . (Workstation <: succ))) => ((# (ref3 . (Workstation <: succ))) > (# (ref2 . (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));26
this/inv9;(lone ((begin . (^ (Workstation <: succ))) :> (begin + end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv6;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => (all ref2:(one Product)|(((ref1 -> ref2) in (Product <: parts)) => (ref0 != ref2)))));1;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => ((all ref2:(one Product)|(((ref1 -> ref2) in (Product <: parts)) => ((ref2 -> ref0) !in (Product <: parts)))) && (ref0 != ref1) && ((ref1 -> ref0) !in (Product <: parts)))));21
this/inv9;(no (end . (Workstation <: succ)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one (ref1 -> (Component <: workstation)))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));12
this/inv9;(lone (begin + end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 1));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));11
this/inv1;(all ref0:(one Worker)|((no (ref0 & Human)) || (no (ref0 & Robot))));1;(all ref0:(one Worker)|((one (ref0 & Human)) || (one (ref0 & Robot))));6
this/inv6;(all ref0:(one univ),ref1:(one univ)|(((ref0 in Component) && ((ref1 -> ref0) in (Product <: parts)) && (ref1 in Product)) => (all ref2:(one Product)|(((ref1 -> ref2) in (Product <: parts)) => (ref0 != ref2)))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));23
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (one ref2:(one Workstation)|(all ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));8
this/inv5;(no ref0:(one (Human + Robot)),ref1:(one (Human + Robot))|((! disj[ref0,ref1]) || (none != ((ref0 . (Workstation <: workers)) & (ref1 . (Workstation <: workers))))));1;(all ref0:(one Human),ref1:(one Robot)|((ref0 . (~ (Workstation <: workers))) != (ref1 . (~ (Workstation <: workers)))));13
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 != ref1) && (ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 != ref3)));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers)))) => (ref2 != ref3)));11
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));9
this/inv4;((((Product <: parts) :> Component) in (Component ->some Product)) && (no ((Product <: parts) :> Material)));1;(((Product <: parts) in (Component ->some Product)) && (no (Material . (Product <: parts))));6
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# (ref1 . (Workstation <: workers))) > 1) && (ref0 in (ref1 . (Workstation <: workers)))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));11
this/inv6;(all ref0:(one univ),ref1:(one univ)|((! disj[ref0,ref1]) || ((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => (all ref2:(one Product)|(((ref1 -> ref2) in (Product <: parts)) => (ref0 != ref2))))));1;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => ((all ref2:(one Product)|(((ref1 -> ref2) in (Product <: parts)) => ((ref2 -> ref0) !in (Product <: parts)))) && (ref0 != ref1) && ((ref1 -> ref0) !in (Product <: parts)))));26
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));10
this/inv10;(all ref0:(one Component)|((some ref0) => (historically (some (ref0 . (Product <: parts))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));15
this/inv9;((all ref0:(one Workstation)|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# ((Workstation <: workers) . ref0)) > 1) && ((# (ref1 . (Workstation <: workers))) > 1)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));6
this/inv6;(all ref0:(one Component)|(! ((ref0 -> ref0) in (Product <: parts))));1;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));5
this/inv8;(all ref0:(one Workstation)|((none = ((ref0 . (Workstation <: workers)) & Dangerous)) || (none = ((ref0 . (Workstation <: workers)) & Human))));1;(none = (((Dangerous . (Component <: workstation)) . (Workstation <: workers)) & Human));13
this/inv6;(all ref0:(one Product)|((ref0 in Component) => (! ((ref0 -> ref0) in (Product <: parts)))));1;(all ref0:(one Product)|((ref0 in Component) => (! (ref0 in (ref0 . (^ (Product <: parts)))))));5
this/inv2;(all ref0:(one Worker)|(one (ref0 . (Component <: workstation))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# ((Workstation <: workers) . ref0)) = 1) && ((# (ref1 . (Workstation <: workers))) > 1)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));4
this/inv5;(all ref0:(one Human),ref1:(one Robot)|(no ((ref0 . (Workstation <: workers)) & (ref1 . (Workstation <: workers)))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker),ref2:(one Workstation)|(one (ref1 & (ref2 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));9
this/inv9;((all ref0:(one ((Workstation - begin) - end))|(((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ)))) || (begin = end))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv6;((all ref0:(one Component)|(! ((ref0 -> ref0) in (Product <: parts)))) && (all ref1:(one univ),ref2:(one univ)|((! disj[ref1,ref2]) || ((((ref1 -> ref2) in (Product <: parts)) && (ref1 in Component) && (ref2 in Product)) => (all ref3:(one Product)|(((ref2 -> ref3) in (Product <: parts)) => (ref1 != ref3)))))));1;(all ref0:(one Component)|(! (ref0 in (ref0 . (^ (Product <: parts))))));36
this/inv9;((all ref0:(one (Workstation - end))|(end in (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(one (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));10
this/inv2;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(ref1 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));9
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# ((Workstation <: workers) . ref0)) = 1) && ((# (ref1 . (Workstation <: workers))) = 1)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));6
this/inv8;(all ref0:(one univ),ref1:(one univ)|(((ref0 in Dangerous) && (ref1 in Workstation)) => (all ref2:(one Worker)|(((ref1 -> ref2) in (Workstation <: workers)) => (ref2 !in Human)))));1;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous) && (ref1 in Workstation)) => (all ref2:(one Worker)|(((ref1 -> ref2) in (Workstation <: workers)) => (ref2 !in Human)))));11
this/inv6;((Component <: (Product <: parts)) !in iden);1;(no ((^ (Product <: parts)) & iden));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(some ref2:(one Workstation)|(one (ref1 & (ref2 . (Workstation <: workers)))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));9
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref0 in (ref1 . (Product <: parts))))) && (all ref2:(one Component)|(some ref3:(one Material)|(ref2 !in (ref3 . (Product <: parts))))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));12
this/inv8;(all ref0:(one Workstation)|((Dangerous in ((Component <: workstation) . ref0)) => ((ref0 . (Workstation <: workers)) in Robot)));1;(all ref0:(one Workstation)|((some (((Component <: workstation) . ref0) & Dangerous)) => ((ref0 . (Workstation <: workers)) in Robot)));7
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv6;(all ref0:(one Component)|((ref0 <: (Product <: parts)) !in iden));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));7
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one (ref1 . (Component <: workstation)))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|((# ((Workstation <: workers) . ref1)) = 1)));10
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|((none = (ref1 . (Workstation <: succ))) => (ref1 = end))) && (all ref2:(one Workstation)|((((Workstation <: succ) . ref2) = none) => (ref2 = begin))) && (all ref3:(one Workstation)|((none != (ref3 . (Workstation <: succ))) => (all ref4:(one Workstation)|((ref4 in (ref3 . (Workstation <: succ))) => ((none = (ref4 . (Workstation <: succ))) => (ref4 = end)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) => (ref1 in end))) && (all ref2:(one Workstation)|((no ((Workstation <: succ) . ref2)) => (ref2 in begin))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));39
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));12
this/inv2;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) > 0)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));6
this/inv9;((all ref0:(one (Workstation - begin))|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Workstation),ref2:(one Workstation)|((ref1 != ref2) => (no ((ref1 . (Workstation <: workers)) & (ref2 . (Workstation <: workers)))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));15
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((none = (ref1 . (Workstation <: succ))) => (ref1 = end))) && (all ref2:(one Workstation)|((((Workstation <: succ) . ref2) = none) => (ref2 = begin))) && (all ref3:(one Workstation)|((none != (ref3 . (Workstation <: succ))) => (all ref4:(one Workstation)|((ref4 in (ref3 . (Workstation <: succ))) => ((none = (ref4 . (Workstation <: succ))) => (ref4 = end)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) => (ref1 in end))) && (all ref2:(one Workstation)|((no ((Workstation <: succ) . ref2)) => (ref2 in begin))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));38
this/inv9;((all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end)) => (one (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv6;(iden !in (Component <: (Product <: parts)));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));8
this/inv9;((all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end)) => (one (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (one (begin . (Workstation <: succ))) && (begin != end) && ((begin . (Workstation <: succ)) != end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (* (Workstation <: succ))))) && (all ref1:(one Workstation)|((none = (ref1 . (Workstation <: succ))) => (ref1 = end))) && (all ref2:(one Workstation)|((((Workstation <: succ) . ref2) = none) => (ref2 = begin))) && (all ref3:(one Workstation)|((none != (ref3 . (Workstation <: succ))) => (all ref4:(one Workstation)|((ref4 in (ref3 . (Workstation <: succ))) => ((none = (ref4 . (Workstation <: succ))) => (ref4 = end)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) => (ref1 in end))) && (all ref2:(one Workstation)|((no ((Workstation <: succ) . ref2)) => (ref2 in begin))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));40
this/inv3;(all ref0:(one Component)|(ref0 in Int[(# Workstation)]));1;((Component <: workstation) in (Component ->one Workstation));7
this/inv5;(all ref0:(one Worker),ref1:(one Worker)|((! disj[ref0,ref1]) || (no ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers)))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(! ((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers))))));12
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (some ((Workstation <: succ) . ref0)))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv3;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in ref1)));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in ((Component <: workstation) . ref1))));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Workstation),ref2:(one Workstation)|((ref1 != ref2) => (no ((ref1 . (Workstation <: workers)) & (ref2 . (Workstation <: workers)))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));15
this/inv8;(all ref0:(one Component),ref1:(one ((Component <: workstation) . ref0))|(no ((ref1 . (Workstation <: workers)) & Human)));1;(all ref0:(one (Component & Dangerous)),ref1:(one (ref0 . (Component <: workstation)))|(no ((ref1 . (Workstation <: workers)) & Human)));4
this/inv6;(all ref0:(one univ),ref1:(one univ)|((! disj[ref0,ref1]) || ((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => ((ref1 -> ref0) !in (Product <: parts)))));1;(all ref0:(one Product)|((ref0 in Component) => (ref0 !in (ref0 . (^ (Product <: parts))))));22
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (begin !in (begin . (^ (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;((all ref0:(one Workstation)|(((ref0 != begin) => (some ((Workstation <: succ) . ref0))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(one (ref2 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));16
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (begin !in (begin . (^ (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv6;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => ((ref0 != ref1) && ((ref1 -> ref0) !in (Product <: parts)))));1;(all ref0:(one univ),ref1:(one univ)|((((ref0 -> ref1) in (Product <: parts)) && (ref0 in Component) && (ref1 in Product)) => ((all ref2:(one Product)|(((ref1 -> ref2) in (Product <: parts)) => ((ref2 -> ref0) !in (Product <: parts)))) && (ref0 != ref1) && ((ref1 -> ref0) !in (Product <: parts)))));16
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (* (Workstation <: succ)))) => (ref0 = end))) && (all ref1:(one Workstation)|((none = (ref1 . (Workstation <: succ))) => (ref1 = end))) && (all ref2:(one Workstation)|((((Workstation <: succ) . ref2) = none) => (ref2 = begin))) && (all ref3:(one Workstation)|((none != (ref3 . (Workstation <: succ))) => (all ref4:(one Workstation)|((ref4 in (ref3 . (Workstation <: succ))) => ((none = (ref4 . (Workstation <: succ))) => (ref4 = end)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) => (ref1 in end))) && (all ref2:(one Workstation)|((no ((Workstation <: succ) . ref2)) => (ref2 in begin))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));44
this/inv8;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|(no ((ref1 . (Workstation <: workers)) & Human)));1;(all ref0:(one (Component & Dangerous)),ref1:(one (ref0 . (Component <: workstation)))|(no ((ref1 . (Workstation <: workers)) & Human)));4
this/inv2;((all ref0:(one Workstation)|(0 < (# (ref0 . (Workstation <: workers))))) && (all ref1:(one Workstation),ref2:(one Workstation)|((ref1 != ref2) => (no ((ref1 . (Workstation <: workers)) & (ref2 . (Workstation <: workers)))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));19
this/inv8;(no (((Workstation <: workers) . Human) & (Component . (Component <: workstation))));1;(no (((Workstation <: workers) . Human) & (Dangerous . (Component <: workstation))));2
this/inv9;((all ref0:(one ((Workstation - end) - begin))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (begin !in (begin . (^ (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;((all ref0:(one Workstation)|(((ref0 != begin) => (some ((Workstation <: succ) . ref0))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv3;(all ref0:(one Component)|(some ref1:(one Workstation)|(one (((ref0 . (Component <: workstation)) & ((ref0 . (Component <: workstation)) & ref1)) & (Workstation - ref1)))));1;(all ref0:(one Component)|(one ((ref0 . (Component <: workstation)) & Workstation)));11
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && (begin !in (begin . (^ (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv8;(all ref0:(one Product),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 !in Human)));1;(all ref0:(one Component),ref1:(one Worker)|(((ref0 in Dangerous) && (ref1 in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))) => (ref1 !in Human)));9
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (* (Workstation <: succ)))) => (ref0 = begin))) && (all ref1:(one Workstation)|((none = (ref1 . (Workstation <: succ))) => (ref1 = end))) && (all ref2:(one Workstation)|((((Workstation <: succ) . ref2) = none) => (ref2 = begin))) && (all ref3:(one Workstation)|((none != (ref3 . (Workstation <: succ))) => (all ref4:(one Workstation)|((ref4 in (ref3 . (Workstation <: succ))) => ((none = (ref4 . (Workstation <: succ))) => (ref4 = end)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) => (ref1 in end))) && (all ref2:(one Workstation)|((no ((Workstation <: succ) . ref2)) => (ref2 in begin))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));44
this/inv9;((all ref0:(one Workstation)|((ref0 != begin) => (one ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 != end) => (one (ref1 . (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|((ref0 != begin) => (one ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 != end) => (one (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));11
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (all ref2:(one (Workstation - end))|(end in (ref2 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin != end) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));19
this/inv8;(all ref0:(one Product),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Robot)));1;(all ref0:(one Component),ref1:(one Worker)|(((ref0 in Dangerous) && (ref1 in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))) => (ref1 in Robot)));9
this/inv9;(one ref0:(one Workstation)|(Workstation in (ref0 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) => (end in (begin . (^ (Workstation <: succ))))) && (begin !in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((one ((Workstation <: workers) . ref1)) && (ref1 in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));7
this/inv9;(all ref0:(one begin)|(Workstation in (ref0 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv5;(all ref0:(one (Workstation . (Workstation <: workers)))|((ref0 in Human) || (ref0 in Robot)));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));6
this/inv9;((all ref0:(one Workstation)|((none = (ref0 . (Workstation <: succ))) => (ref0 = end))) && (all ref1:(one Workstation)|((((Workstation <: succ) . ref1) = none) => (ref1 = begin))) && (all ref2:(one Workstation)|((none != (ref2 . (Workstation <: succ))) => (all ref3:(one Workstation)|((ref3 in (ref2 . (Workstation <: succ))) => (((none = (ref3 . (Workstation <: succ))) && (ref2 != ref3)) => (ref3 = end)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));46
this/inv5;((((Workstation <: workers) . Human) + ((Workstation <: workers) . Robot)) = Workstation);1;((((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)) = none);4
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && (end in (ref0 . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) => ((begin != end) && (end in (begin . (^ (Workstation <: succ)))))) && (begin !in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && (end in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one (Workstation - begin))|(begin !in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) => ((begin != end) && (end in (begin . (^ (Workstation <: succ)))))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))) && (begin !in (begin . (^ (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))) && (one begin) && (one end));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv9;((all ref0:(one begin)|(Workstation in (ref0 . (* (Workstation <: succ))))) && (all ref1:(one end)|(ref1 in ((Workstation - ref1) . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (lone ((Workstation <: workers) . Worker)));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));7
this/inv9;((all ref0:(one Workstation)|((none = (ref0 . (Workstation <: succ))) => (ref0 = end))) && (all ref1:(one Workstation)|((none != (ref1 . (Workstation <: succ))) => (ref1 = begin))) && (all ref2:(one Workstation)|((none != (ref2 . (Workstation <: succ))) => (all ref3:(one Workstation)|((ref3 in (ref2 . (Workstation <: succ))) => ((ref2 != ref3) => ((none = (ref3 . (Workstation <: succ))) => (ref3 = end))))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));46
this/inv7;(all ref0:(one Component)|((no ((ref0 + (ref0 . (* (Product <: parts)))) & Dangerous)) || ((ref0 + (ref0 . (* (Product <: parts)))) in Dangerous)));1;(all ref0:(one Component)|((no ((ref0 . (Product <: parts)) & Dangerous)) || (ref0 in Dangerous)));10
this/inv2;(all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;((all ref0:(one Workstation)|((ref0 = begin) || (ref0 = end))) && (all ref1:(one begin)|(Workstation in (ref1 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv5;(no (((Workstation <: workers) . Human) - ((Workstation <: workers) . Robot)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));2
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && (end in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one (Workstation - begin))|(begin !in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) => ((begin != end) && (end in (begin . (^ (Workstation <: succ)))))) && (begin !in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && (end in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one (Workstation - begin))|(begin !in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) => ((begin != end) && (end in (begin . (^ (Workstation <: succ)))))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))) && (begin !in (begin . (^ (Workstation <: succ)))));12
this/inv7;(all ref0:(one Product)|((no ((ref0 + (ref0 . (* (Product <: parts)))) & Dangerous)) || ((ref0 + (ref0 . (* (Product <: parts)))) in Dangerous)));1;(all ref0:(one Component)|((no ((ref0 . (Product <: parts)) & Dangerous)) || (ref0 in Dangerous)));10
this/inv9;((all ref0:(one Workstation)|((ref0 != end) => (one (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation)|((none = (ref0 . (Workstation <: succ))) => (ref0 = end))) && (all ref1:(one Workstation)|((none != (ref1 . (Workstation <: succ))) => (ref1 = begin))) && (all ref2:(one Workstation)|((none != (ref2 . (Workstation <: succ))) => (all ref3:(one Workstation)|((ref3 in (ref2 . (Workstation <: succ))) => ((ref2 != ref3) => ((none = (ref3 . (* (Workstation <: succ)))) => (ref3 = end))))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));45
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in end) => ((no (ref1 . (Workstation <: succ))) && ((ref1 !in end) => (one (ref1 . (Workstation <: succ))))))) && (one begin) && (one end));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))) && (one begin));22
this/inv9;((all ref0:(one Workstation)|((ref0 = begin) || (ref0 = end) || (end in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one begin)|(Workstation in (ref1 . (* (Workstation <: succ))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));4
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Robot) => ((ref0 . (Workstation <: workers)) !in Human)));1;(all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Robot)) => (no ((ref0 . (Workstation <: workers)) & Human))));8
this/inv9;((all ref0:(one Workstation)|((none = (ref0 . (Workstation <: succ))) => (ref0 = end))) && (all ref1:(one Workstation)|((none != (ref1 . (Workstation <: succ))) => (ref1 = begin))) && (all ref2:(one Workstation)|((none != (ref2 . (Workstation <: succ))) => (all ref3:(one Workstation)|((ref3 in (ref2 . (Workstation <: succ))) => ((ref2 != ref3) => ((none = (ref3 . (^ (Workstation <: succ)))) => (ref3 = end))))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 !in end) => (one (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))));46
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(((ref1 !in end) => (one (ref1 . (Workstation <: succ)))) && ((ref1 in end) => (no (ref1 . (Workstation <: succ)))))) && (one begin) && (one end));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));23
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) <=> (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));9
this/inv5;(all ref0:(one Human),ref1:(one Workstation)|(some ref2:(one Robot)|((ref0 in (ref1 . (Workstation <: workers))) => (ref2 !in (ref1 . (Workstation <: workers))))));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));9
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (ref0 !in (Workstation . (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(((ref2 !in end) => (one (ref2 . (Workstation <: succ)))) && ((ref2 in end) => (no (ref2 . (Workstation <: succ)))))) && (one begin) && (one end));1;((all ref0:(one Workstation)|((ref0 in begin) => ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 in end) => (no (ref3 . (Workstation <: succ))))));23
this/inv10;(all ref0:(one Component)|((begin in (ref0 . (Component <: workstation))) => (no (ref0 . (Product <: parts)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));13
this/inv9;(((# Workstation) > 1) && (all ref0:(one Workstation)|((ref0 = begin) || (ref0 = end) || (end in (ref0 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (all ref2:(one (Workstation - end))|(end in (ref2 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));14
this/inv5;((all ref0:(one Workstation)|((some ((ref0 . (Component <: workstation)) & Robot)) => (no ((ref0 . (Component <: workstation)) & Human)))) && (all ref1:(one Workstation)|((some ((ref1 . (Component <: workstation)) & Human)) => (no ((ref1 . (Component <: workstation)) & Robot)))));1;((all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Robot)) => (no ((ref0 . (Workstation <: workers)) & Human)))) && (all ref1:(one Workstation)|((some ((ref1 . (Workstation <: workers)) & Human)) => (no ((ref1 . (Workstation <: workers)) & Robot)))));12
this/inv10;(all ref0:(one Component)|((begin in (ref0 . (Component <: workstation))) => (no ((ref0 . (Product <: parts)) & Component))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));13
this/inv5;((all ref0:(one Robot),ref1:(one Workstation)|(one ref2:(one Human)|((ref2 in (ref1 . (Workstation <: workers))) => (ref0 !in (ref1 . (Workstation <: workers)))))) && (all ref3:(one Human),ref4:(one Workstation)|(one ref5:(one Robot)|((ref5 in (ref4 . (Workstation <: workers))) => (ref3 !in (ref4 . (Workstation <: workers)))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));25
this/inv10;(all ref0:(one Component)|((begin in (ref0 . (^ (Component <: workstation)))) => (no ((ref0 . (Product <: parts)) & Component))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));14
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (Workstation . (Workstation <: workers))) && ((ref1 -> ref0) in (Workstation <: workers))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));11
this/inv9;(all ref0:(one Workstation)|((ref0 = begin) => (Workstation in (ref0 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));8
this/inv8;(all ref0:(one Component),ref1:(one Human)|((ref0 in Dangerous) => (ref1 !in (ref0 . (Component <: workstation)))));1;(all ref0:(one Component),ref1:(one Human)|((ref0 in Dangerous) => (ref1 !in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))));6
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) = ((ref1 . (Component <: workstation)) . (* (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));8
this/inv10;(all ref0:(one Component)|((begin in (ref0 . (Component <: workstation))) => (no ((ref0 . (^ (Product <: parts))) & Component))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));14
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (ref1 . (Workstation <: workers))) && ((ref1 -> ref0) in (Workstation <: workers))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))) && (some (ref0 . (Workstation <: workers)))));10
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (* (Component <: workstation))) = ((ref1 . (Component <: workstation)) . (* (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));9
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => ((ref0 . (Product <: parts)) in Dangerous))));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));6
this/inv9;((all ref0:(one (Workstation - end))|(one (Workstation <: succ))) && (all ref1:(one Workstation)|((ref1 = begin) => (Workstation in (ref1 . (* (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (* (Component <: workstation))) = ((ref1 . (Component <: workstation)) . (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));8
this/inv10;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (~ (Workstation <: succ))))));3
this/inv10;(all ref0:(one Component)|((ref0 in (Component . (Product <: parts))) => (no (ref0 . (Component <: workstation)))));1;(((^ (Product <: parts)) . (Component <: workstation)) in ((Component <: workstation) . (~ (^ (Workstation <: succ)))));13
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) = begin)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));13
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|((ref1 = begin) => (Workstation in (ref1 . (* (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (no ((Workstation <: succ) . ref0))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv7;(all ref0:(one Component),ref1:(one (((Product <: parts) . ref0) + (ref0 . (Product <: parts))))|((ref1 in Dangerous) => (ref0 in Dangerous)));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (no ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|((ref0 != begin) => (one ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 != end) => (one (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));19
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));9
this/inv4;(all ref0:(one Component),ref1:(one Material)|((no (ref0 . (Product <: parts))) && (no (ref1 . (Product <: parts)))));1;((all ref0:(one Component)|(! (no (ref0 . (Product <: parts))))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));5
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));6
this/inv9;((all ref0:(one Workstation)|((ref0 in begin) => (no ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 in end) => (no (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|((ref2 !in (begin + end)) => (one (ref2 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|((ref0 != begin) => (one ((Workstation <: succ) . ref0)))) && (all ref1:(one Workstation)|((ref1 != end) => (one (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));22
this/inv2;(all ref0:(one Workstation)|(none != (ref0 . (Workstation <: workers))));1;((Workstation <: workers) in (Workstation one->some Worker));9
this/inv7;(all ref0:(one Component)|(some ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Component))));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));6
this/inv1;(all ref0:(one Worker)|(((ref0 in Human) || (ref0 in Robot)) && (no (Human & Worker))));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));7
this/inv4;(all ref0:(one Component),ref1:(one Material)|((no (ref1 . (^ (Product <: parts)))) && (some (ref0 . (^ (Product <: parts))))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));10
this/inv7;(all ref0:(one Component),ref1:(one ((Product <: parts) . ref0))|((ref1 in Dangerous) => (ref0 in Dangerous)));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));4
this/inv9;(all ref0:(one Workstation)|(one (ref0 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv7;((all ref0:(one Product)|(((ref0 . (^ (Product <: parts))) !in Dangerous) => (ref0 !in Dangerous))) && (all ref1:(one Product)|(((ref1 . (^ (Product <: parts))) in Dangerous) => (ref1 in Dangerous))));1;((all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 in Dangerous))) && (((Product <: parts) . Dangerous) in Dangerous));15
this/inv1;(all ref0:(one Worker)|(no (Human & Worker)));1;(no ((Worker - (Human & Worker)) - Robot));5
this/inv2;(all ref0:(one Workstation)|((some ref1:(one Workstation)|(all ref2:(one Worker)|(ref2 in (ref1 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));10
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref1 . (Workstation <: workers)) in Human) => (((! ((ref1 . (Workstation <: workers)) in Robot)) && ((ref1 . (Workstation <: workers)) in Robot)) => (! ((ref1 . (Workstation <: workers)) in Human)))));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));20
this/inv9;((Workstation . (* (Workstation <: succ))) in (begin + end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));8
this/inv7;(all ref0:(one Component),ref1:(one ((Product <: parts) . ref0))|((ref0 in Dangerous) && (ref1 in Dangerous)));1;(all ref0:(one Dangerous),ref1:(one ((Product <: parts) . ref0))|(ref1 in Dangerous));8
this/inv10;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|((some (ref0 . (Component <: workstation))) => (after (some (ref1 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));12
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) => (((! ((ref0 . (Workstation <: workers)) in Robot)) && ((ref0 . (Workstation <: workers)) in Robot)) => (! ((ref0 . (Workstation <: workers)) in Human)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));18
this/inv2;(all ref0:(one Workstation)|((one ref1:(one Workstation)|(all ref2:(one Worker)|(ref2 in (ref1 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));10
this/inv1;(no (Human & Worker));1;(no ((Worker - (Human & Worker)) - Robot));4
this/inv5;(all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Human)) || (some ((ref0 . (Workstation <: workers)) & Robot))));1;(all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Human)) => (no ((ref0 . (Workstation <: workers)) & Robot))));6
this/inv10;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|((some (ref0 . (Component <: workstation))) => (before (some (ref1 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));12
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (no ((Workstation <: workers) . Human))));1;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (no ((ref1 . (Workstation <: workers)) & Human))));7
this/inv2;((Worker in (Workstation . (Workstation <: workers))) && (Workstation in ((Workstation <: workers) . Worker)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));6
this/inv2;(all ref0:(one Workstation)|((all ref1:(one Workstation)|(one ref2:(one Worker)|(ref2 in (ref1 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))) && (none != (ref0 . (Workstation <: workers)))));10
this/inv5;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) in Human) => (! ((ref0 . (Workstation <: workers)) in Robot))) && (((ref0 . (Workstation <: workers)) in Robot) => (! ((ref0 . (Workstation <: workers)) in Human)))));1;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) !in Human) || ((ref0 . (Workstation <: workers)) !in Robot)) && (((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot))));16
this/inv7;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => ((ref0 . (Product <: parts)) in Dangerous)));1;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));6
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((some (ref0 . (Component <: workstation))) => (before (some (ref1 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));12
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in begin) => (no ((Workstation <: succ) . ref1)))) && (all ref2:(one Workstation)|((ref2 in end) => (no (ref2 . (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in (begin + end)) => (one (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) => (ref1 in end))) && (all ref2:(one Workstation)|((no ((Workstation <: succ) . ref2)) => (ref2 in begin))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));26
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 = begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 = end))));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));18
this/inv8;(all ref0:(one Dangerous)|(no ref1:(one Human)|(none != ((ref0 . (Component <: workstation)) & (ref1 . (Workstation <: workers))))));1;(all ref0:(one Dangerous)|(no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human)));10
this/inv2;((all ref0:(one Worker)|(lone ((Workstation <: workers) . ref0))) && (Workstation in ((Workstation <: workers) . Worker)));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (Workstation in ((Workstation <: workers) . Worker)));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(some ref2:(one Worker)|((ref2 in (ref1 . (Workstation <: workers))) && (some ((Workstation <: workers) . ref0)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));10
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 = begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 = end))) && (all ref2:(one Workstation)|((begin in (ref2 . (^ (~ (Workstation <: succ))))) && (end in (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));23
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) || (ref0 = end))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv3;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in begin)));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in ((Component <: workstation) . ref1))));8
this/inv3;(all ref0:(one Component)|(one ref1:(one Workstation)|((ref0 . (Component <: workstation)) in begin)));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref1 in (ref0 . (Component <: workstation)))));6
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) || (ref0 = end))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(begin !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));20
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 = begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 = end))) && (all ref2:(one Workstation)|((begin in (ref2 . (^ (~ (Workstation <: succ))))) && (end in (ref2 . (^ (Workstation <: succ)))))) && (begin != end));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));26
this/inv2;(all ref0:(one Workstation)|(lone ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers)))));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv6;(all ref0:(one Component)|(one (ref0 - (ref0 . (Product <: parts)))));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));6
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(begin !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));16
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((some (ref0 . (Component <: workstation))) => ((all ref2:(one (ref1 . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref2 . (^ (Workstation <: succ))))) && (some (ref1 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|((some (ref0 . (Component <: workstation))) => ((all ref2:(one (ref1 . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref2 . (^ (Workstation <: succ))))) && (some (ref1 . (Component <: workstation))))));6
this/inv6;(all ref0:(one Component)|(one (ref0 + (ref0 . (^ (Product <: parts))))));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));5
this/inv9;(all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && ((ref0 . (^ (Workstation <: succ))) in end) && (ref0 in begin)));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv5;((all ref0:(one Workstation)|(one ref1:(one Human),ref2:(one Robot)|((ref2 in (ref0 . (Workstation <: workers))) => (ref1 !in (ref0 . (Workstation <: workers)))))) && (all ref3:(one Workstation)|(one ref4:(one Human),ref5:(one Robot)|((ref4 in (ref3 . (Workstation <: workers))) => (ref5 !in (ref3 . (Workstation <: workers)))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));23
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) !in (((Workstation <: succ) . ref0) . (Component <: workstation))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));9
this/inv9;((all ref0:(one (Workstation - end))|(end in (ref0 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));6
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) && (begin != end))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(begin !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));20
this/inv9;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 = begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 = end))) && (all ref2:(one Workstation)|((begin in (ref2 . (^ (~ (Workstation <: succ))))) && (end in (ref2 . (^ (Workstation <: succ)))))) && (no (begin & end)));1;((all ref0:(one Workstation)|((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin))) && (all ref1:(one Workstation)|((no (ref1 . (Workstation <: succ))) <=> (ref1 in end))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));27
this/inv9;((all ref0:(one Workstation)|((ref0 !in (Workstation . (Workstation <: succ))) => (ref0 in begin))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|((no (ref2 . (Workstation <: succ))) => (ref2 in end))));1;((all ref0:(one Workstation)|((ref0 !in (Workstation . (Workstation <: succ))) => (ref0 in begin))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (all ref3:(one Workstation)|((no (ref3 . (Workstation <: succ))) => (ref3 in end))));15
this/inv5;((all ref0:(one Workstation)|(some ref1:(one Human),ref2:(one Robot)|((ref2 in (ref0 . (Workstation <: workers))) => (ref1 !in (ref0 . (Workstation <: workers)))))) && (all ref3:(one Workstation)|(some ref4:(one Human),ref5:(one Robot)|((ref4 in (ref3 . (Workstation <: workers))) => (ref5 !in (ref3 . (Workstation <: workers)))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));23
this/inv4;((all ref0:(one Material)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(no (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));4
this/inv8;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref2 !in (ref1 . (Component <: workstation)))));1;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((ref2 in (ref0 . (Component <: workstation))) => (ref1 !in (ref2 . (Workstation <: workers)))));12
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (all ref1:(one ((Component <: workstation) . ref0))|(no ((ref1 . (Workstation <: workers)) & Human)))));1;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (no ((ref1 . (Workstation <: workers)) & Human))));4
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) || (ref0 = end) || (begin = end))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(begin !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));23
this/inv4;(all ref0:(one Component)|(no ref1:(one Material)|((some (ref0 . (Product <: parts))) && (some (ref1 . (^ (Product <: parts)))))));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(! (some (ref1 . (Product <: parts))))));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(end in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));12
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((ref0 . (Product <: parts)) !in none) && ((ref1 . (Product <: parts)) in none)));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(none = (ref1 . (Product <: parts)))));9
this/inv3;((iden :> Component) in ((Component <: workstation) . (~ (Component <: workstation))));1;(((iden :> Component) in ((Component <: workstation) . (~ (Component <: workstation)))) && (((~ (Component <: workstation)) . (Component <: workstation)) in iden));7
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (all ref2:(one (Workstation - end))|(end in (ref2 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));17
this/inv4;(all ref0:(one Component),ref1:(one Material)|((no (ref1 . (^ (Product <: parts)))) || (some (ref0 . (Product <: parts)))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));11
this/inv9;(all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) || (begin = end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));13
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (one ref1:(one ((Component <: workstation) . ref0))|(no ((ref1 . (Workstation <: workers)) & Human)))));1;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (no ((ref1 . (Workstation <: workers)) & Human))));4
this/inv5;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) in Human) => ((ref0 . (Workstation <: workers)) !in Robot)) || (((ref0 . (Workstation <: workers)) in Robot) => ((ref0 . (Workstation <: workers)) !in Human))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));14
this/inv9;((all ref0:(one Workstation)|((ref0 !in (Workstation . (Workstation <: succ))) => (ref0 in begin))) && (all ref1:(one Workstation)|(lone (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|((no (ref2 . (Workstation <: succ))) => (ref2 in end))));1;((all ref0:(one Workstation)|((ref0 !in (Workstation . (Workstation <: succ))) => (ref0 in begin))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))) && (all ref3:(one Workstation)|((no (ref3 . (Workstation <: succ))) => (ref3 in end))));19
this/inv3;(((Component <: workstation) . (~ (Component <: workstation))) = (iden :> Component));1;(all ref0:(one Component)|(one ref1:(one Workstation)|((ref0 . (Component <: workstation)) = ref1)));9
this/inv2;(all ref0:(one Worker)|(lone (ref0 . (Component <: workstation))));1;((Workstation <: workers) in (Workstation one->some Worker));10
this/inv5;(all ref0:(one Workstation)|(((Human in (ref0 . (Workstation <: workers))) => (Robot in (ref0 . (Workstation <: workers)))) || ((Robot in (ref0 . (Workstation <: workers))) => (Human in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Human)) || ((ref0 . (Workstation <: workers)) = ((ref0 . (Workstation <: workers)) & Robot))));18
this/inv8;(all ref0:(one Component),ref1:(one ((Component <: workstation) . ref0))|((ref0 in Dangerous) => (no ((ref1 . (Workstation <: workers)) & Human))));1;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (no ((ref1 . (Workstation <: workers)) & Human))));4
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) || (begin = end))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv10;(all ref0:(one Product)|(((ref0 . (Product <: parts)) . (Component <: workstation)) !in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));5
this/inv10;(all ref0:(one Component),ref1:(one Product),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref0 in (ref2 . (^ (Workstation <: succ)))) && (ref1 in ref2))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));16
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in ref0) && (ref2 in ref1))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));18
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) || (begin = end))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - begin))|(ref2 in (Workstation . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv8;(no ((((Dangerous . (Product <: parts)) . (Component <: workstation)) . (Workstation <: workers)) & Human));1;(no (((Dangerous . (Component <: workstation)) . (Workstation <: workers)) & Human));2
this/inv2;((all ref0:(one Worker)|(((Workstation <: workers) . ref0) in Workstation)) && (some (Workstation . (Workstation <: workers))));1;(((Workstation <: workers) in (Workstation one->some Worker)) && (some (Workstation <: workers)));7
this/inv3;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));1;(all ref0:(one Component)|(one ref1:(one Workstation)|((ref0 . (Component <: workstation)) = ref1)));12
this/inv9;((all ref0:(one (Workstation - end))|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (Workstation <: succ)))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));7
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Workstation)|(one ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))) && (ref1 in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))) && (ref1 in (ref0 . (Workstation <: workers))))));12
this/inv7;(all ref0:(one Component)|(no ((ref0 . (Product <: parts)) & Dangerous)));1;(all ref0:(one Component)|((no ((ref0 . (Product <: parts)) & Dangerous)) || (ref0 in Dangerous)));6
this/inv9;(all ref0:(one Workstation)|(one ref1:(one ((^ (Workstation <: succ)) . end)),ref2:(one (begin . (^ (Workstation <: succ))))|((ref0 in ref1) && (ref0 in ref2))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in (ref1 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));20
this/inv10;(all ref0:(one Component),ref1:(one Component)|(((ref0 != ref1) && (ref1 in (ref0 . (^ (Product <: parts))))) => ((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));10
this/inv8;(no ((Dangerous . (Product <: parts)) - (Human & ((Material . (Component <: workstation)) . (Workstation <: workers)))));1;(no (((Dangerous . (Component <: workstation)) . (Workstation <: workers)) & Human));8
this/inv9;(all ref0:(one Workstation)|(one ref1:(one ((* (Workstation <: succ)) . end)),ref2:(one (begin . (* (Workstation <: succ))))|((ref0 in ref1) && (ref0 in ref2))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv4;(all ref0:(one Product)|((ref0 in Material) || ((some (ref0 . (Product <: parts))) => (ref0 in Product))));1;(all ref0:(one Product)|(((no (ref0 . (Product <: parts))) => (ref0 in Material)) && ((some (ref0 . (Product <: parts))) => (ref0 in Component))));11
this/inv5;(all ref0:(one Workstation)|(no (((ref0 . (Workstation <: workers)) & Robot) & Human)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));7
this/inv9;((all ref0:(one (Workstation - end))|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));3
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(one ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));10
this/inv10;((all ref0:(one Material)|(one ((Product <: parts) . ref0))) && (all ref1:(one Product)|(((ref1 . (Product <: parts)) . (Component <: workstation)) !in ((Workstation <: succ) . (ref1 . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));15
this/inv8;(no (((((Dangerous . (Product <: parts)) - Material) . (Component <: workstation)) . (Workstation <: workers)) & Human));1;(no (((Dangerous . (Component <: workstation)) . (Workstation <: workers)) & Human));4
this/inv2;((all ref0:(one Worker)|(lone ((Workstation <: workers) . ref0))) && (some ((Workstation <: workers) . Worker)) && (some (Workstation . (Workstation <: workers))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (((Workstation <: workers) . Worker) = Workstation));9
this/inv10;((all ref0:(one Material)|(some ((Product <: parts) . ref0))) && (all ref1:(one Product)|(((ref1 . (Product <: parts)) . (Component <: workstation)) !in ((Workstation <: succ) . (ref1 . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));15
this/inv9;((all ref0:(one (Workstation - end))|((lone (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv4;(all ref0:(one Product)|(((ref0 in Product) && (some (ref0 . (Product <: parts)))) || (ref0 in Material)));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));13
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) !in (ref1 . (Component <: workstation))) && ((ref2 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref2 in (ref1 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));25
this/inv3;(all ref0:(one Material)|((ref0 in Component) => (one ((Component <: workstation) . ref0))));1;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));8
this/inv9;(all ref0:(one Workstation)|((begin -> end) in (* (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;((all ref0:(one (Workstation - end))|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(begin !in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));7
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (one ref2:(one Workstation)|(all ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));10
this/inv10;((all ref0:(one Material)|(some ((Product <: parts) . ref0))) && (all ref1:(one Component)|(((ref1 . (Product <: parts)) . (Component <: workstation)) !in ((Workstation <: succ) . (ref1 . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));15
this/inv10;(all ref0:(one Component),ref1:(one Workstation)|(((ref1 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref1 in ((ref0 . (^ (Product <: parts))) . (Component <: workstation)))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & ((ref0 . (Product <: parts)) . (Component <: workstation)))));17
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (* (Product <: parts)))) => (ref0 in Dangerous)));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));6
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|(one ref2:(one Human)|(((ref0 in Dangerous) && (ref2 in (ref1 . (Workstation <: workers)))) => (ref1 !in (ref0 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref2 !in (ref0 . (Component <: workstation)))));12
this/inv7;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Dangerous) => ((ref0 . (^ (Product <: parts))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));5
this/inv10;(all ref0:(one Component),ref1:(one Component)|(((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) => (ref1 in (ref0 . (^ (Product <: parts))))));1;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));15
this/inv6;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(ref0 !in ref1));1;(all ref0:(one Component)|(ref0 !in ((^ (Product <: parts)) . ref0)));8
this/inv10;(all ref0:(one Product),ref1:(one Workstation)|(((ref1 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref1 in ((ref0 . (^ (Product <: parts))) . (Component <: workstation)))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & ((ref0 . (Product <: parts)) . (Component <: workstation)))));17
this/inv7;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) in Dangerous) <=> ((ref0 . (^ (Product <: parts))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));8
this/inv10;(all ref0:(one Component)|((((ref0 . (Product <: parts)) - Material) . (Component <: workstation)) !in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));7
this/inv2;((all ref0:(one Worker)|(lone ((Workstation <: workers) . ref0))) && (some (Workstation . (Workstation <: workers))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));7
this/inv4;(all ref0:(one Component)|((all ref1:(one Material)|(none = (ref1 . (Product <: parts)))) && (none != (ref0 . (Product <: parts)))));1;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));10
this/inv10;(all ref0:(one Product),ref1:(one Workstation)|((some (ref0 . (Product <: parts))) => (((ref1 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref1 in ((ref0 . (^ (Product <: parts))) . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));21
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(no (((ref1 . (Workstation <: workers)) & Human) & ((ref1 . (Workstation <: workers)) & Robot))));1;(all ref0:(one Worker),ref1:(one Workstation)|((no ((ref1 . (Workstation <: workers)) & Human)) || (no ((ref1 . (Workstation <: workers)) & Robot))));9
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker),ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers)))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));6
this/inv10;((all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))))) && (all ref2:(one Component),ref3:(one Component)|(((ref3 . (Component <: workstation)) in ((ref2 . (Component <: workstation)) . (^ (Workstation <: succ)))) => (ref3 in (ref2 . (^ (Product <: parts)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));28
this/inv4;(all ref0:(one Product)|(((ref0 in Component) && (some (ref0 . (Product <: parts)))) || (ref0 in Material)));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));11
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(no (((ref1 . (Workstation <: workers)) & Human) & Robot)));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));8
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in ((Workstation <: workers) . ref1)) => ((! (ref0 in Human)) || (! (ref0 in Robot)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));15
this/inv10;((all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))))) && (all ref2:(one Component),ref3:(one Component)|(((ref2 . (Component <: workstation)) in ((ref3 . (Component <: workstation)) . (^ (Workstation <: succ)))) => (ref3 in (ref2 . (^ (Product <: parts)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));25
this/inv10;(all ref0:(one Product),ref1:(one Workstation)|((some (ref0 . (^ (Product <: parts)))) => (((ref1 . (^ (Workstation <: succ))) in (ref0 . (Component <: workstation))) && (ref1 in ((ref0 . (^ (Product <: parts))) . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));21
this/inv10;(all ref0:(one Component),ref1:(one Component)|(((ref1 . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) <=> (ref1 in (ref0 . (^ (Product <: parts))))));1;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));15
this/inv4;(all ref0:(one Product)|((ref0 in Material) || ((some (ref0 . (Product <: parts))) => (ref0 in Component))));1;(all ref0:(one Product)|(((no (ref0 . (Product <: parts))) => (ref0 in Material)) && ((some (ref0 . (Product <: parts))) => (ref0 in Component))));9
this/inv10;(all ref0:(one Component),ref1:(one Component)|(((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) <=> (ref1 in (ref0 . (^ (Product <: parts))))));1;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));17
this/inv9;(end in ((begin . (^ (Workstation <: succ))) - begin));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv10;(all ref0:(one Component)|(((ref0 . (* (Product <: parts))) . (Component <: workstation)) !in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));6
this/inv10;(all ref0:(one Product),ref1:(one Workstation)|((some (ref0 . (^ (Product <: parts)))) => (((ref1 . (^ (Workstation <: succ))) in ((ref0 . (Component <: workstation)) - ((ref0 . (^ (Product <: parts))) . (Component <: workstation)))) && (ref1 in (((ref0 . (^ (Product <: parts))) . (Component <: workstation)) - (ref0 . (Component <: workstation)))))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));30
this/inv5;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) - Human) !in Robot) && (((ref0 . (Workstation <: workers)) - Robot) !in Human)));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) !in Robot) <=> ((ref0 . (Workstation <: workers)) in Human)));10
this/inv9;(all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) || (ref0 = ref0) || (ref0 in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;((no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));9
this/inv10;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref1 . (Component <: workstation)) !in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));6
this/inv3;(all ref0:(one Component)|(one ref1:(one Workstation)|((ref0 . (Component <: workstation)) in ref1)));1;(all ref0:(one Component)|(one ref1:(one Workstation)|((ref0 . (Component <: workstation)) = ref1)));6
this/inv4;((all ref0:(one Product)|((ref0 . (Product <: parts)) in Component)) && (all ref1:(one Product)|((ref1 . (Product <: parts)) !in Material)));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));10
this/inv10;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) !in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));5
this/inv9;((no (end . (Workstation <: succ))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));7
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv4;((some ref0:(one Product)|((ref0 . (Product <: parts)) in Component)) && (some ref1:(one Product)|((ref1 . (Product <: parts)) !in Material)));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));10
this/inv10;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) !in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));4
this/inv6;((Product <: parts) !in iden);1;(no ((^ (Product <: parts)) & iden));4
this/inv9;(one (Workstation . (Workstation <: succ)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Product <: parts)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation),ref4:(one Workstation)|(((ref3 != ref4) && (ref3 in end)) => ((ref3 -> ref4) !in (Workstation <: succ)))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));22
this/inv9;((no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv10;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));24
this/inv9;(all ref0:(one Workstation)|((ref0 in end) => (ref0 in (begin . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation),ref2:(one Workstation)|(ref1 in (ref2 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;((no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));9
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Product <: parts)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 in end) => (all ref4:(one Workstation)|((ref3 -> ref4) !in (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));18
this/inv10;(all ref0:(one Component)|((no ((ref0 . (^ (Product <: parts))) . (Component <: workstation))) || (((ref0 . (^ (Product <: parts))) . (Component <: workstation)) !in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation))))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));12
this/inv9;(one ref0:(one Workstation),ref1:(one Workstation)|(ref0 in (ref1 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv7;(all ref0:(one Component)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));1;(all ref0:(one Product)|((ref0 in Dangerous) => ((ref0 . (^ (~ (Product <: parts)))) in Dangerous)));2
this/inv8;(all ref0:(one Component)|(some ref1:(one Human)|((ref0 in Dangerous) => (ref1 !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))))));1;(all ref0:(one Component),ref1:(one Human)|((ref0 in Dangerous) => (ref1 !in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))));4
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 in end) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref1 in begin) => (ref0 in (ref1 . (^ (Workstation <: succ))))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));25
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));10
this/inv9;(all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref0 in (ref1 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));28
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(ref1 in (ref0 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));15
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 in end) && (ref1 in begin)) => (ref0 in (ref1 . (* (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));25
this/inv1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) => (ref0 in Robot)) || (ref0 in Human)));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));11
this/inv2;(all ref0:(one Workstation)|(some ((ref0 . (Workstation <: workers)) & Worker)));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Product <: parts)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));10
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));4
this/inv9;(all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in end) && (ref1 in begin)) => (ref0 in (ref1 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv1;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref0 in Human) || (ref0 in Robot))));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));9
this/inv9;((no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));9
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((ref0 !in (ref0 . (Workstation <: succ))) && (ref1 in (ref0 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));13
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))) && (begin !in end));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));7
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(begin !in (ref1 . (Workstation <: succ)))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (ref0 & (ref1 . (Workstation <: workers)))) && (some ((ref1 . (Workstation <: workers)) & Worker))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(one (ref0 & (ref1 . (Workstation <: workers)))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));9
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((((ref0 in end) && (ref1 in begin)) => (ref0 in (ref1 . (* (Workstation <: succ))))) || (ref0 = ref1)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));24
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (Workstation <: succ)) in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));23
this/inv9;(all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv8;(all ref0:(one Component),ref1:(one Worker)|((ref0 in Dangerous) => (ref1 in Robot)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (all ref1:(one ((ref0 . (Component <: workstation)) . (Workstation <: workers)))|(ref1 in Robot))));4
this/inv9;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));13
this/inv8;(all ref0:(one Component),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 !in Human)));1;(all ref0:(one Component),ref1:(one Worker)|(((ref0 in Dangerous) && (ref1 in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))) => (ref1 !in Human)));9
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((one ref0) && (ref0 !in (ref0 . (Workstation <: succ))) && (ref1 in (ref0 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv10;((all ref0:(one Material)|(some ((Product <: parts) . ref0))) && (all ref1:(one Component)|((no ((ref1 . (^ (Product <: parts))) . (Component <: workstation))) || ((((ref1 . (^ (Product <: parts))) & Component) . (Component <: workstation)) !in ((^ (Workstation <: succ)) . (ref1 . (Component <: workstation)))))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));23
this/inv8;(all ref0:(one Component),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref2 in (ref0 . (Component <: workstation)))) => ((ref1 in (ref2 . (Workstation <: workers))) && (ref1 in Robot))));1;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref2 in (ref0 . (Component <: workstation)))) => (ref1 !in (ref2 . (Workstation <: workers)))));12
this/inv10;((all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => (((ref2 . (^ (Workstation <: succ))) in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation))))))) && (all ref3:(one Product),ref4:(one Workstation)|((some (ref3 . (^ (Product <: parts)))) => (((ref4 . (^ (Workstation <: succ))) in ((ref3 . (Component <: workstation)) - ((ref3 . (^ (Product <: parts))) . (Component <: workstation)))) && (ref4 in (((ref3 . (^ (Product <: parts))) . (Component <: workstation)) - (ref3 . (Component <: workstation))))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));59
this/inv6;(all ref0:(one Product),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => (ref1 !in Component)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));9
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 in begin) && (ref1 in end)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));25
this/inv9;((no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));7
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (~ (Workstation <: workers))) !in Human)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));3
this/inv8;(all ref0:(one Component),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref1 in Robot)));1;(all ref0:(one Component),ref1:(one Worker)|(((ref0 in Dangerous) && (ref1 in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))) => (ref1 in Robot)));9
this/inv9;((no (end . (Workstation <: succ))) && (Workstation = (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));7
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((ref1 -> ref0) in (Workstation <: workers)) && (some ((ref1 . (Workstation <: workers)) & Worker))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));12
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv2;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (some (Workstation . (Workstation <: workers))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));7
this/inv9;((no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));5
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((ref1 -> ref0) in (Workstation <: workers))));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;((all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));12
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 in begin) && (ref1 in end)) => (ref1 in (ref0 . (* (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));25
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || ((ref1 in (ref0 . (Product <: parts))) => ((ref2 in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in (ref3 . (^ (Workstation <: succ)))) && (ref3 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation))))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));30
this/inv9;((no ref0:(one Workstation)|((ref0 !in (begin + end)) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (Workstation = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));21
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));10
this/inv6;(all ref0:(one Component),ref1:(one Component)|(ref0 !in (ref0 . (Product <: parts))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));4
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(some ((ref1 . (Workstation <: workers)) & Worker)));1;((Workstation <: workers) in (Workstation one->some Worker));9
this/inv6;(all ref0:(one Component)|((ref0 . (Product <: parts)) in Material));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));5
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => (ref0 !in ((Workstation <: succ) . ref1))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));15
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 in begin) && (ref1 in end)) => (ref1 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));22
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Worker)|(lone ref3:(one Workstation)|((ref2 -> ref3) in (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))));8
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 != ref1) => (ref0 !in (ref0 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));8
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || ((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 != ref3) && (ref2 in ((ref0 . (Component <: workstation)) - (ref1 . (Component <: workstation)))) && (ref2 in (ref3 . (^ (Workstation <: succ)))) && (ref3 in ((ref1 . (Component <: workstation)) - (ref0 . (Component <: workstation))))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));32
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (end in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv9;((no ref0:(one Workstation)|((ref0 !in (begin + end)) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (Workstation = (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv9;(all ref0:(one Workstation)|(((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));10
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(some ((ref1 . (Workstation <: workers)) & Worker))) && (all ref2:(one Worker)|(one (ref2 & (Workstation . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));13
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => (ref0 !in (ref1 . (Workstation <: succ)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));15
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 in begin) && (ref1 in end)) <=> (ref1 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));22
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || ((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 != ref3) && (ref2 in (ref0 . (Component <: workstation))) && (ref2 in (ref3 . (^ (Workstation <: succ)))) && (ref3 in (ref1 . (Component <: workstation)))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));28
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) in ((begin . (* (Workstation <: succ))) - ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((begin . (* (Workstation <: succ))) - ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));4
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((! disj[ref2,ref3]) || ((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation))) && (ref3 in (ref2 . (^ (Workstation <: succ))))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));19
this/inv2;((all ref0:(one Workstation)|(some ((ref0 . (Workstation <: workers)) & Worker))) && (all ref1:(one Worker)|(one (ref1 & (Workstation . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));10
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) in ((begin . (* (Workstation <: succ))) - ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((begin . (* (Workstation <: succ))) - ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));6
this/inv9;((no ref0:(one Workstation)|((ref0 !in (begin + end)) && (ref0 in (begin . (^ (Workstation <: succ)))))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));23
this/inv7;(all ref0:(one Dangerous)|((ref0 . (^ (Product <: parts))) in Dangerous));1;(all ref0:(one Dangerous)|((ref0 . (^ (~ (Product <: parts)))) in Dangerous));3
this/inv9;(one (Workstation - (end . (Workstation <: succ))));1;(((Workstation <: succ) in (Workstation ->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation))) && (ref3 in (ref2 . (^ (Workstation <: succ)))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));14
this/inv9;((all ref0:(one Workstation)|((ref0 in (begin + end)) <=> (ref0 in (begin . (^ (Workstation <: succ)))))) && (no ref1:(one Workstation)|((ref1 !in (begin + end)) && (ref1 in (begin . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));25
this/inv2;((all ref0:(one Workstation)|(one ((ref0 . (Workstation <: workers)) & Worker))) && (all ref1:(one Worker)|(one (ref1 & (Workstation . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));12
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (* (Product <: parts)))) => (Dangerous in (ref0 . (* (Product <: parts))))));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));11
this/inv10;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation))) && (ref3 in (ref2 . (^ (Workstation <: succ)))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));14
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (* (Workstation <: succ)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (~ (^ (Workstation <: succ))))));6
this/inv2;((all ref0:(one Workstation)|(some ((ref0 . (Workstation <: workers)) & Worker))) && (all ref1:(one Worker)|(ref1 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));9
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 !in ((ref1 . (Workstation <: succ)) . (Workstation <: workers))) && (ref0 in (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));12
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (* (Product <: parts)))) => (Dangerous in (ref0 . (Product <: parts)))));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));10
this/inv10;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref3 in (ref2 . (^ (Workstation <: succ))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));12
this/inv2;((all ref0:(one Workstation)|(none != (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(some ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(none != (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));6
this/inv9;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv9;((Workstation = (begin . (^ (Workstation <: succ)))) && (begin != end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv7;(all ref0:(one Product)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));5
this/inv2;((all ref0:(one Workstation)|(some ((ref0 . (Workstation <: workers)) & Worker))) && (all ref1:(one Worker)|(ref1 in (Workstation . (Workstation <: workers)))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|((ref2 in (ref3 . (Workstation <: workers))) => (ref2 !in (ref4 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));23
this/inv9;((all ref0:(one Workstation)|(ref0 in (begin . (^ (Workstation <: succ))))) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));14
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv2;((all ref0:(one Workstation)|(some ((ref0 . (Workstation <: workers)) & Worker))) && (all ref1:(one Worker)|(one (ref1 & (Workstation . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation),ref4:(one Workstation)|((ref2 in (ref3 . (Workstation <: workers))) => (ref2 !in (ref4 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));24
this/inv9;((no ((Workstation <: succ) . begin)) && (Workstation = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 -> ref2) in (Workstation <: workers)) && ((ref1 -> ref2) in (Workstation <: workers))));1;(all ref0:(one Workstation)|(no ref1:(one Human),ref2:(one Robot)|(((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)))));10
this/inv5;(all ref0:(one Workstation)|(((Human . (Workstation <: workers)) + (Robot . (Workstation <: workers))) in ref0));1;(no ((Human . (~ (Workstation <: workers))) & (Robot . (~ (Workstation <: workers)))));8
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation),ref2:(one Workstation)|(((ref1)' in (ref1 . (Workstation <: succ))) => (! ((ref1)' in (ref1 . (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv2;(all ref0:(one Worker)|(lone (ref0 & (Workstation . (Workstation <: workers)))));1;((Workstation <: workers) in (Workstation one->some Worker));10
this/inv9;((no ((Workstation <: succ) . begin)) && (Workstation = (begin . (* (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv9;(all ref0:(one Workstation)|((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))));1;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))) && (ref0 !in ((^ (Workstation <: succ)) . ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));34
this/inv4;((all ref0:(one Component),ref1:(one Product)|((ref0 -> ref1) in (Product <: parts))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(some ref2:(one Worker)|(((ref1 -> ref2) in (Workstation <: workers)) => (one ref3:(one Workstation)|((ref3 -> ref0) in (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));14
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation),ref2:(one Workstation)|((ref2 in (ref1 . (Workstation <: succ))) => (! (ref1 in (ref2 . (Workstation <: succ)))))) && (no (end . (Workstation <: succ))) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|(((ref1 in (ref1 . (Component <: workstation))) && (ref1 in Dangerous)) => ((ref1 . (Workstation <: workers)) !in Human)));1;(all ref0:(one Dangerous),ref1:(one Workstation)|((ref0 in ((Component <: workstation) . ref1)) => ((ref1 . (Workstation <: workers)) !in Human)));12
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 in (ref0 . (Component <: workstation))) && (ref2 in (ref3 . (^ (Workstation <: succ)))) && (ref3 in (ref1 . (Component <: workstation))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));20
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(! (((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers)))));7
this/inv9;((no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv5;(all ref0:(one (Workstation . (Workstation <: workers)))|(no ((ref0 & Human) & (ref0 & Robot))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));9
this/inv2;(all ref0:(one Worker)|(one (ref0 & (Workstation . (Workstation <: workers)))));1;((Workstation <: workers) in (Workstation one->some Worker));10
this/inv10;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|((ref1 in (ref0 . (^ (Product <: parts)))) => ((ref2 in (ref0 . (Component <: workstation))) && (ref2 in (ref3 . (^ (Workstation <: succ)))) && (ref3 in (ref1 . (Component <: workstation))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));20
this/inv2;(all ref0:(one Workstation)|(one ref1:(one Workstation)|(some ref2:(one Worker)|(((ref0 -> ref2) in (Workstation <: workers)) && ((ref1 -> ref2) in (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));11
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|(((ref1 in (ref0 . (Component <: workstation))) && (ref1 in Dangerous)) => ((ref1 . (Workstation <: workers)) !in Human)));1;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref0 . (Component <: workstation)))) => ((ref1 . (Workstation <: workers)) !in Human)));10
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((one (ref0 . (Workstation <: succ))) && ((ref0 in (ref1 . (* (Workstation <: succ)))) => (ref1 !in (ref0 . (* (Workstation <: succ))))))) && (no (end . (Workstation <: succ))) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((ref0 in ((Workstation <: workers) . ref1)) => ((ref0 !in (ref2 . (Workstation <: workers))) && (ref1 != ref2))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));17
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv4;((all ref0:(one Component)|(lone ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));8
this/inv1;(! (some ref0:(one Worker)|(! (ref0 in (Human + Worker)))));1;(! (some ref0:(one Worker)|(! (ref0 in (Human + Robot)))));4
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((one (ref0 . (Workstation <: succ))) && ((ref0 in (ref1 . (* (Workstation <: succ)))) => (ref1 !in (ref0 . (* (Workstation <: succ))))))) && (no (end . (Workstation <: succ))) && ((one (begin . (Workstation <: succ))) <=> (some (Workstation - begin))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv9;(all ref0:(one Workstation)|((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))));1;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))) && (ref0 !in ((^ (Workstation <: succ)) . ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));23
this/inv10;(all ref0:(one Component)|(no ((((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (Component . (Component <: workstation))) & (ref0 . (Product <: parts)))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & ((ref0 . (Product <: parts)) . (Component <: workstation)))));8
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (^ (Workstation <: succ)))) && ((begin . (Workstation <: succ)) = end));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))));9
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((ref0 in ((Workstation <: workers) . ref1)) => ((ref0 !in ((Workstation <: workers) . ref2)) && (ref1 != ref2))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));19
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Human)|((ref1 in (ref0 . (Workstation <: workers))) => (no ((ref0 . (Workstation <: workers)) & Robot)))));1;(all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Human)) => (no ((ref0 . (Workstation <: workers)) & Robot))));8
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material)|(no (Product <: parts))));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (no (Material . (Product <: parts))));11
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(one (ref0 & (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(one (ref0 & (ref1 . (Workstation <: workers)))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));6
this/inv5;((all ref0:(one Workstation)|(some ref1:(one Human)|((ref1 in (ref0 . (Workstation <: workers))) => (no ((ref0 . (Workstation <: workers)) & Robot))))) && (all ref2:(one Workstation)|(some ref3:(one Robot)|((ref3 in (ref2 . (Workstation <: workers))) => (no ((ref2 . (Workstation <: workers)) & Human))))));1;((all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Human)) => (no ((ref0 . (Workstation <: workers)) & Robot)))) && (all ref1:(one Workstation)|((some ((ref1 . (Workstation <: workers)) & Robot)) => (no ((ref1 . (Workstation <: workers)) & Human)))));20
this/inv9;(Workstation = (begin . (^ (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));11
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(one ref2:(one Workstation)|(some ref3:(one Worker)|((ref0 in (ref2 . (Workstation <: workers))) && (ref3 in (ref1 . (Workstation <: workers)))))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));12
this/inv2;(all ref0:(one Workstation),ref1:(one Workstation)|(some ref2:(one Worker)|((ref2 in (ref0 . (Workstation <: workers))) => ((ref0 != ref1) && (ref2 !in (ref1 . (Workstation <: workers)))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))));18
this/inv9;(all ref0:(one Workstation)|(((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (all ref2:(one Workstation)|(one ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|(ref3 in (ref2 . (Workstation <: workers))))));8
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((ref1 in (ref0 . (Workstation <: workers))) => (ref1 !in ((ref0 . (Workstation <: succ)) . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ((Workstation <: workers) . ref2))));14
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in Human) => (((no (Worker - Robot)) && (ref0 in Robot)) => (no (Worker - Human)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));19
this/inv9;(all ref0:(one Workstation)|(((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 !in ((Workstation <: succ) . ref0)) && (ref0 !in (ref0 . (Workstation <: succ)))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));22
this/inv6;(no ref0:(one Component)|((ref0 -> ref0) in (Product <: parts)));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));5
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));6
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers)))) && (all ref2:(one Worker),ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));10
this/inv1;(no (Human + Robot));1;(no (Worker - (Human + Robot)));2
this/inv9;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))) && (ref0 !in ((Workstation <: succ) . ref0)) && (ref0 !in (ref0 . (Workstation <: succ)))));1;(all ref0:(one Workstation)|(((((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in begin) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 0) && ((# (ref0 . (Workstation <: succ))) = 1) && (ref0 in begin)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 0) && (ref0 in end)) || (((# ((Workstation <: succ) . ref0)) = 1) && ((# (ref0 . (Workstation <: succ))) = 1))) && (ref0 !in ((^ (Workstation <: succ)) . ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));4
this/inv5;(all ref0:(one Worker)|((ref0 in Human) => (((no (Worker - Robot)) && (ref0 in Robot)) => (no (Worker - Human)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));18
this/inv2;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers)))) => (ref0 != ref1)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));15
this/inv9;((all ref0:(one ((begin . (^ (Workstation <: succ))) - (begin + end)))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));2
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((no (((Workstation <: succ) . (Workstation <: workers)) . ref0)) && (ref0 !in ((ref1 . (Workstation <: succ)) . (Workstation <: workers))))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));19
this/inv8;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|((ref0 in Dangerous) => (Human !in (ref1 . (Workstation <: workers)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));9
this/inv4;((all ref0:(one Component),ref1:(one Component)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 != ref1))) && (all ref2:(one Material),ref3:(one Material)|(((ref2 -> ref3) !in (Product <: parts)) => (ref2 != ref3))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));16
this/inv6;((all ref0:(one Component)|((ref0 -> ref0) !in (Product <: parts))) && (all ref1:(one Component),ref2:(one Component)|((ref1 -> ref2) !in (Product <: parts))));1;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));11
this/inv9;((all ref0:(one ((begin . (^ (Workstation <: succ))) - (begin + end)))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv8;(all ref0:(one (Component + Dangerous))|(no ref1:(one Human)|(some ref2:(one (ref0 . (Component <: workstation)))|(ref1 in (ref2 . (Workstation <: workers))))));1;(all ref0:(one Dangerous),ref1:(one (ref0 . (Component <: workstation)))|((ref1 . (Workstation <: workers)) in Robot));9
this/inv4;((all ref2:(one Material),ref3:(one Material)|((ref2 -> ref3) !in (Product <: parts))) && (some ref0:(one Component),ref1:(one Component)|((ref0 -> ref1) in (Product <: parts))));1;((Product <: parts) in (Component ->some Product));16
this/inv6;(all ref0:(one Component)|((ref0 . (Product <: parts)) = (Component - ref0)));1;(no ref0:(one Component)|(ref0 in (ref0 . (^ (Product <: parts)))));9
this/inv4;(all ref0:(one Component),ref1:(one Material),ref2:(one Product)|((ref2 in (ref0 . (Product <: parts))) && (ref2 in (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));11
this/inv4;((some ref0:(one Component),ref1:(one Component)|((ref0 -> ref1) in (Product <: parts))) && (some ref2:(one Material),ref3:(one Material)|((ref2 -> ref3) !in (Product <: parts))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));8
this/inv9;(all ref0:(one begin)|(end in (ref0 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));11
this/inv8;(all ref0:(one (Component + Dangerous))|(no ref1:(one Human)|(some ref2:(one (ref0 . (^ (Component <: workstation))))|(ref1 in (ref2 . (Workstation <: workers))))));1;(all ref0:(one Dangerous),ref1:(one (ref0 . (Component <: workstation)))|((ref1 . (Workstation <: workers)) in Robot));9
this/inv6;(all ref0:(one Component)|(((ref0 -> ref0) !in (Product <: parts)) && (ref0 = ref0)));1;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));7
this/inv4;(some ref0:(one Product)|(all ref1:(one Component),ref2:(one Material)|((ref0 !in (ref2 . (Product <: parts))) && (ref0 in (ref1 . (Product <: parts))))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));13
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in ref0))) && (all ref2:(one Worker),ref3:(one Workstation)|(ref2 in ref3)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|((ref2 -> ref3) in (Workstation <: workers)))));12
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in ((Workstation <: workers) . ref0)))) && (some ref2:(one Workstation)|(all ref3:(one Worker)|(ref3 in ((Workstation <: workers) . ref2)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));10
this/inv9;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));15
this/inv8;(all ref0:(one (Human . (Component <: workstation)))|(no ref1:(one Dangerous)|(ref1 in ref0)));1;(all ref0:(one Dangerous),ref1:(one ((ref0 . (Component <: workstation)) . (Workstation <: workers)))|(ref1 !in Human));8
this/inv9;(all ref0:(one begin)|(end in (ref0 . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker),ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));8
this/inv5;((all ref0:(one Worker)|((ref0 in Human) => (ref0 !in Robot))) && (all ref1:(one Worker)|((ref1 in Robot) => (ref1 !in Human))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));19
this/inv2;(all ref0:(one Worker)|(lone ((Workstation <: workers) . ref0)));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one Workstation)|((ref1 in (ref0 . (^ (Workstation <: succ)))) && (ref1 in end)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv8;(all ref0:(one (Component & Dangerous)),ref1:(one (ref0 . (Component <: workstation)))|(one ((ref1 . (Workstation <: workers)) & Human)));1;(all ref0:(one (Component & Dangerous)),ref1:(one (ref0 . (Component <: workstation)))|(no ((ref1 . (Workstation <: workers)) & Human)));6
this/inv9;((one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;((all ref2:(one Workstation)|(one ref3:(one begin)|(ref2 in (ref3 . (^ (Workstation <: succ)))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));28
this/inv9;(all ref0:(one Workstation)|((all ref1:(one (ref0 . (Workstation <: succ))),ref2:(one (ref0 . (Workstation <: succ)))|(ref1 = ref2)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv9;((all ref2:(one Workstation)|(one ref3:(one begin)|((ref2 != ref3) && (ref2 in (ref3 . (^ (Workstation <: succ))))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (all ref4:(one Workstation)|(ref4 !in (ref4 . (^ (Workstation <: succ))))) && (all ref5:(one Workstation)|((ref5 !in end) => (one (ref5 . (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));30
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) => (ref0 in Human)) || (ref0 in Robot)));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));12
this/inv4;((none = (Material . (Product <: parts))) && (Component in (Component . (Product <: parts))));1;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));2
this/inv9;((1 < (# (begin . (^ (Workstation <: succ))))) && (no ((^ (Workstation <: succ)) & iden)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));14
this/inv9;((all ref2:(one Workstation)|(one ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ))))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (all ref4:(one Workstation)|(ref4 !in (ref4 . (^ (Workstation <: succ))))) && (all ref5:(one Workstation)|((ref5 !in end) => (one (ref5 . (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));24
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one end)|(end in (ref1 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));18
this/inv9;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (all ref4:(one Workstation)|(ref4 !in (ref4 . (^ (Workstation <: succ))))) && (all ref5:(one Workstation)|((ref5 !in end) => (one (ref5 . (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));24
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref1 . (Product <: parts))) = 0) && (some (ref0 . (Product <: parts)))));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) = 0)));12
this/inv9;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 !in Robot) || ((ref0 in (ref1 . (Workstation <: workers))) => (ref0 in Human))));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));12
this/inv9;((all ref0:(one Workstation)|(((ref0 !in begin) && (ref0 !in end)) => (one (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|(((ref1 in begin) || (ref1 in end)) => (no (ref1 . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));22
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 -> ref1) !in (Product <: parts)) => (ref0 = ref1)));1;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));10
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one end)|(end in (ref1 . (* (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;(all ref0:(one Workstation)|((((# (ref0 . (Workstation <: succ))) = 0) || ((# (ref0 . (Workstation <: succ))) = 1)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 !in Robot) || ((ref0 in (ref1 . (Workstation <: workers))) => (ref0 !in Human))));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));14
this/inv3;(all ref0:(one Component)|(some ref1:(one Workstation)|(ref0 in (ref1 . (Component <: workstation)))));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in (ref1 . (~ (Component <: workstation))))));5
this/inv2;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref3 . (Workstation <: workers))) && (ref2 != ref3)) => (ref0 != ref1)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));19
this/inv4;(all ref0:(one Component),ref1:(one Material)|((one (ref1 . (Product <: parts))) && (some (ref0 . (Product <: parts)))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));10
this/inv9;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (all ref4:(one Workstation)|(ref4 !in (ref4 . (^ (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (all ref4:(one Workstation)|(ref4 !in (ref4 . (^ (Workstation <: succ))))) && (all ref5:(one Workstation)|((ref5 !in end) => (one (ref5 . (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));19
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((no (ref0 & Robot)) || ((ref0 in (ref1 . (Workstation <: workers))) => (no (ref0 & Human)))));1;(all ref0:(one Human),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) => ((ref1 . (Workstation <: workers)) in Human)));16
this/inv4;(all ref0:(one Product)|(ref0 in (Component . (Product <: parts))));1;(((Product <: parts) . Product) = Component);7
this/inv9;(all ref0:(one Workstation)|((all ref1:(one (Workstation - ref0))|(ref1 in (ref0 . (^ (Workstation <: succ))))) && (((# (ref0 . (Workstation <: succ))) = 0) || ((# (ref0 . (Workstation <: succ))) = 1)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));24
this/inv5;((Human in (Workstation . (Workstation <: workers))) => (Robot !in (Workstation . (Workstation <: workers))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers)))));11
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 = ref1)));1;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (^ (Product <: parts)))) => (ref0 != ref1)));9
this/inv3;((all ref0:(one Component)|(some ref1:(one Workstation)|(ref0 in (ref1 . (Component <: workstation))))) && (all ref2:(one Component)|(one ((Component <: workstation) . ref2))));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref0 in (ref1 . (~ (Component <: workstation))))));11
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (ref1 . (Workstation <: workers))) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv4;(all ref0:(one Product)|((some (ref0 . (Product <: parts))) => (ref0 in Component)));1;(all ref0:(one Product)|((none != (ref0 . (Product <: parts))) <=> (ref0 in Component)));7
this/inv9;((all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));1;((all ref2:(one Workstation),ref3:(one Workstation)|(((ref2 != ref3) && (ref3 in begin)) => (ref2 in (ref3 . (^ (Workstation <: succ)))))) && (all ref4:(one Workstation)|(ref4 !in (ref4 . (^ (Workstation <: succ))))) && (all ref5:(one Workstation)|((ref5 !in end) => (one (ref5 . (Workstation <: succ))))) && (one ref0:(one Workstation)|((no (ref0 . (Workstation <: succ))) && (ref0 in end))) && (one ref1:(one Workstation)|((ref1 !in (Workstation . (Workstation <: succ))) && (ref1 in begin))));32
this/inv6;(one ref0:(one Component)|((ref0 -> ref0) !in (Product <: parts)));1;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));3
this/inv4;((none = (Material . (Product <: parts))) && (Component in (Product . (Product <: parts))));1;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));2
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ref1:(one end)|(ref1 in (ref0 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));18
this/inv5;(((Human in (Workstation . (Workstation <: workers))) => (Robot !in (Workstation . (Workstation <: workers)))) && ((Robot in (Workstation . (Workstation <: workers))) => (Human !in (Workstation . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));19
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((((# (ref1 . (Workstation <: succ))) = 1) && (all ref2:(one (Workstation - ref1))|(ref2 in (ref1 . (^ (Workstation <: succ))))) && (ref1 in begin)) || (((# (ref1 . (Workstation <: succ))) = 1) && (ref1 !in begin) && (ref1 !in end)) || ((none = (ref1 . (Workstation <: succ))) && (ref1 in end)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((((# (ref1 . (Workstation <: succ))) = 1) && (all ref2:(one (Workstation - ref1))|(ref2 in (ref1 . (^ (Workstation <: succ))))) && (ref1 in begin)) || (((# (ref1 . (Workstation <: succ))) = 1) && (one ref3:(one (Workstation - ref1))|(ref1 = (ref3 . (Workstation <: succ)))) && (ref1 !in begin) && (ref1 !in end)) || ((none = (ref1 . (Workstation <: succ))) && (ref1 in end)))));12
this/inv4;(all ref0:(one Product)|((no (ref0 . (Product <: parts))) => (ref0 !in Material)));1;(((Product <: parts) . Product) = Component);10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (ref0 . (Workstation <: workers))) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));5
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(no ((ref0 . (Component <: workstation)) . (Workstation <: succ))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));10
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) => (some ref1:(one end)|(ref1 in (ref0 . (^ (Workstation <: succ)))))) || (ref0 in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv6;(lone ref0:(one Component)|((ref0 -> ref0) !in (Product <: parts)));1;(all ref0:(one Product)|((ref0 -> ref0) !in (^ (Product <: parts))));3
this/inv4;((all ref0:(one Component)|(some ((Product <: parts) . ref0))) && (all ref1:(one Material)|((# ((Product <: parts) . ref1)) = 0)));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) = 0)));8
this/inv9;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 in (begin . (^ (Workstation <: succ)))))) && (1 < (# (begin . (^ (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));19
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|(no ((ref1 . (Component <: workstation)) . (Workstation <: succ))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));10
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 . (Component <: workstation)) in (ref0 . (^ (Component <: workstation)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));10
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|((ref2 !in end) => (one (ref2 . (Workstation <: succ))))) && (all ref3:(one Workstation)|(ref3 !in (ref3 . (^ (Workstation <: succ))))));13
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# (ref0 . (~ (Workstation <: workers)))) = 1) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));8
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (end in (ref0 . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 !in end) => (one (ref1 . (Workstation <: succ))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv1;(all ref0:(one Worker)|(ref0 in (Human & Robot)));1;(all ref0:(one Worker)|(ref0 in (Human + Robot)));4
this/inv4;(all ref0:(one Component)|(one ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|(ref3 in (ref2 . (Product <: parts))))) && (ref1 in (ref0 . (Product <: parts))))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));14
this/inv4;(Component in (Component . (Product <: parts)));1;(((Product <: parts) . Product) = Component);6
this/inv4;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no ((Product <: parts) . ref1))));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (no (Material . (Product <: parts))));5
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# (ref0 . (~ (Workstation <: workers)))) = 1) && ((# (ref1 . (Workstation <: workers))) > 1)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));7
this/inv9;((no ((^ (Workstation <: succ)) & iden)) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation = (begin . (* (Workstation <: succ)))));9
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => ((ref0 . (^ (Workstation <: succ))) in end)));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));19
this/inv5;((Human in (Workstation . (Workstation <: workers))) <=> (Robot in (Workstation . (Workstation <: workers))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));11
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => ((((Component <: workstation) . ref0) . (Workstation <: workers)) in Robot)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot)));4
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref0 in (ref1 . (Product <: parts))))) && (all ref2:(one Material)|(no (ref2 . (Product <: parts)))));1;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material)|(no (ref2 . (Product <: parts)))));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((# (ref0 . (~ (Workstation <: workers)))) = 1) && ((# (ref1 . (Workstation <: workers))) > 2)));1;((all ref0:(one Worker)|((# ((Workstation <: workers) . ref0)) = 1)) && (all ref1:(one Workstation)|((# (ref1 . (Workstation <: workers))) > 0)));7
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation)))) => (ref0 in (ref1 . (^ (Product <: parts))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));16
this/inv9;((no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));10
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ((ref0 . (^ (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));19
this/inv5;((! (Human in (Workstation . (Workstation <: workers)))) <=> (Robot in (Workstation . (Workstation <: workers))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));12
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (some ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv2;((all ref0:(one Workstation)|(some (Workstation <: workers))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));8
this/inv5;(((! (Human in (Workstation . (Workstation <: workers)))) <=> (Robot in (Workstation . (Workstation <: workers)))) && ((! (Robot in (Workstation . (Workstation <: workers)))) <=> (Human in (Workstation . (Workstation <: workers)))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));25
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 !in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref0 !in (ref2 . (Workstation <: workers))) <=> (ref1 in (ref2 . (Workstation <: workers)))));8
this/inv3;(all ref0:(one Component)|(lone (ref0 . (Component <: workstation))));1;(all ref0:(one Component)|(one (ref0 . (Component <: workstation))));4
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (one ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));19
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))) && (begin !in end));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));7
this/inv5;(all ref0:(one Human),ref1:(one Robot)|(some ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers)))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));6
this/inv9;(all ref0:(one Workstation)|((one ((ref0 . (* (Workstation <: succ))) & begin)) && (one ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));15
this/inv5;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 !in (ref2 . (Workstation <: workers))) => (ref0 in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|((ref1 in (ref2 . (Workstation <: workers))) => (! (ref0 in (ref2 . (Workstation <: workers))))));9
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (begin & end)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv2;(all ref0:(one Workstation)|((all ref1:(one (ref0 . (Workstation <: workers)))|(ref0 = (ref1 . (Component <: workstation)))) && (none != (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));12
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) => (some ((ref0 . (* (Workstation <: succ))) & end))) && ((ref0 in end) => (no (ref0 . (Workstation <: succ))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));19
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (begin & end)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no ((^ (Workstation <: succ)) & iden)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 in (ref1 . (Product <: parts))) && (ref1 in (ref0 . (Product <: parts)))) => (ref0 = ref1)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));13
this/inv5;(one ref0:(one Workstation)|((Human in (ref0 . (Workstation <: workers))) <=> (Robot !in (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) !in Robot) <=> ((ref0 . (Workstation <: workers)) in Human)));8
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) => (no ((Workstation <: succ) . ref0))) || ((ref0 in end) => (no (ref0 . (Workstation <: succ)))) || (some ((ref0 . (* (Workstation <: succ))) & end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));25
this/inv2;(all ref0:(one Workstation)|(((# (ref0 . (Workstation <: workers))) > 0) && (one ((ref0 . (Workstation <: workers)) . (~ (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))));11
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) => (no ((Workstation <: succ) . ref0))) || ((ref0 in end) => (no (ref0 . (Workstation <: succ)))) || (some ((ref0 . (* (Workstation <: succ))) & end)) || (begin = end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));28
this/inv4;(Component in (Product . (Product <: parts)));1;((Product <: parts) in (Component ->some Product));4
this/inv6;(all ref0:(one Component),ref1:(one Component)|(((ref0 in (ref1 . (Product <: parts))) && (ref1 in (ref0 . (Product <: parts)))) => (ref0 != ref1)));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));11
this/inv8;(all ref0:(one Component),ref1:(one Dangerous),ref2:(one Human)|((ref0 in Dangerous) => (ref0 !in Human)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));8
this/inv8;(all ref0:(one Component),ref1:(one Worker)|((ref0 in Dangerous) => ((((ref0 . (Component <: workstation)) . (Workstation <: workers)) & ref1) in Human)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));7
this/inv10;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (* (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));6
this/inv8;(all ref0:(one Component),ref1:(one Human)|((ref0 in Dangerous) => (ref0 !in Human)));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));7
this/inv4;((all ref0:(one Material),ref1:(one Product)|(ref0 !in (ref1 . (Product <: parts)))) && (Component in (Product . (Product <: parts))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));10
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(one ref2:(one Workstation)|(((# (ref1 . (Workstation <: workers))) > 0) && (ref0 in (ref2 . (Workstation <: workers))))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));10
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) && (ref0 in end)) || ((ref0 in begin) => (no ((Workstation <: succ) . ref0))) || ((ref0 in end) => (no (ref0 . (Workstation <: succ)))) || (some ((ref0 . (* (Workstation <: succ))) & end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));30
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (one (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));16
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref0 . (Component <: workstation)))) => (all ref2:(one Worker)|((ref2 in (ref1 . (Workstation <: workers))) && (ref2 in Human)))));1;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref0 . (Component <: workstation)))) => (all ref2:(one Worker)|((ref2 in (ref1 . (Workstation <: workers))) => (ref2 in Robot)))));10
this/inv7;(all ref0:(one Component)|(ref0 !in Dangerous));1;(all ref0:(one Dangerous)|(((Product <: parts) . ref0) in Dangerous));6
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) => (no ((Workstation <: succ) . ref0))) || ((ref0 in end) => (no (ref0 . (Workstation <: succ)))) || (some ((ref0 . (* (Workstation <: succ))) & end)) || ((begin . (Workstation <: succ)) in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));28
this/inv4;(all ref0:(one Component),ref1:(one Product)|((all ref2:(one Material),ref3:(one Product)|(ref2 !in (ref3 . (Product <: parts)))) && (ref0 in (ref1 . (Product <: parts)))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));14
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (((one (ref0 . (Workstation <: succ))) && (ref0 in end)) => (one ((Workstation <: succ) . ref0)))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));18
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material),ref3:(one Product)|(ref2 !in (ref3 . (Product <: parts)))) && (ref0 in (ref1 . (Product <: parts))))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));14
this/inv9;(all ref0:(one Workstation)|((((ref0 . (Workstation <: succ)) in end) && (ref0 in begin)) || ((ref0 in begin) => (no ((Workstation <: succ) . ref0))) || ((ref0 in end) => (no (ref0 . (Workstation <: succ)))) || (some ((ref0 . (* (Workstation <: succ))) & end))));1;(all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && ((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin)) && ((no (ref0 . (Workstation <: succ))) <=> (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));28
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (all ref1:(one Human)|(ref0 !in (((Component <: workstation) . (Component <: workstation)) . ref1)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));9
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|(ref2 in (ref3 . (Product <: parts))))) && (ref0 in (ref1 . (Product <: parts))))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));14
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Component <: workstation) . ref1))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));6
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|((ref2 -> ref3) in (Product <: parts)))) && (ref0 in (ref1 . (Product <: parts))))));1;(((Product <: parts) in (Component ->some Product)) && (no (Material . (Product <: parts))));15
this/inv6;(all ref0:(one Component)|((ref0 !in (ref0 . (Product <: parts))) && ((ref0 . (Product <: parts)) !in (ref0 . (Product <: parts)))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));11
this/inv9;((all ref0:(one (Workstation - end))|(one ((Workstation <: succ) . ref0))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => (((lone (ref0 . (^ (Workstation <: succ)))) && (ref0 in end)) => (lone ((^ (Workstation <: succ)) . ref0)))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));20
this/inv10;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|(ref1 !in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));10
this/inv9;((all ref0:(one (Workstation - begin))|(one ((Workstation <: succ) . ref0))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));9
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Component <: workstation))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));8
this/inv4;(all ref0:(one Product)|(((no (ref0 . (Product <: parts))) && (ref0 in Material)) || ((ref0 in Product) && (some (ref0 . (Product <: parts))))));1;(all ref0:(one Product)|(((no (ref0 . (Product <: parts))) && (ref0 in Material)) || ((ref0 in Component) && (some (ref0 . (Product <: parts))))));4
this/inv6;(all ref0:(one Component)|((ref0 !in (ref0 . (Product <: parts))) && ((ref0 . (Product <: parts)) !in ref0)));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));9
this/inv6;(all ref0:(one Component),ref1:(one Component)|((ref0 !in (ref0 . (Product <: parts))) && ((ref1 in (ref0 . (Product <: parts))) => (ref0 !in (ref1 . (Product <: parts))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 != ref1)));15
this/inv9;(one ref0:(one Workstation)|((ref0 . (^ (Workstation <: succ))) in (Workstation - ref0)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|(((ref0 in (begin + end)) => (no ((Workstation <: succ) . ref0))) || ((ref0 in begin) => (lone (ref0 . (Workstation <: succ)))) || ((ref0 in end) => (lone ((Workstation <: succ) . ref0)))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));24
this/inv2;(all ref0:(one Workstation)|((one ((Workstation <: workers) . Worker)) && (some (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));5
this/inv9;(all ref0:(one Workstation)|(((ref0 in (begin + end)) => ((no ((Workstation <: succ) . ref0)) && (no (ref0 . (Workstation <: succ))))) || ((ref0 in begin) => (lone (ref0 . (Workstation <: succ)))) || ((ref0 in end) => (lone ((Workstation <: succ) . ref0)))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));29
this/inv1;((some Human) && (some Robot));1;((Human + Robot) = Worker);6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (some ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) in (Workstation - ref1))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (* (Product <: parts)))) => (Dangerous in ref0)));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));8
this/inv1;(all ref0:(one Human),ref1:(one Robot)|((ref0 in Worker) && (ref0 in Worker)));1;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));9
this/inv6;(all ref0:(one Component)|(ref0 !in ((ref0 . (Product <: parts)) . (Product <: parts))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));5
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) in (Workstation - ref1))) && (one ref2:(one Workstation)|(no (ref2 . (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));15
this/inv4;((all ref0:(one Component)|(some (Product . (Product <: parts)))) && (all ref1:(one Material)|(no (Product . (Product <: parts)))));1;((all ref0:(one Component)|(some (ref0 . (Product <: parts)))) && (no (Material . (Product <: parts))));7
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((one (ref0 . (Component <: workstation))) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 in begin) => ((ref1 . (^ (Workstation <: succ))) in (Workstation - ref1)))) && (one ref2:(one Workstation)|(no (ref2 . (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));19
this/inv6;(all ref0:(one Component)|(ref0 !in (((ref0 . (Product <: parts)) . (Product <: parts)) . (Product <: parts))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));7
this/inv3;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref1 in ((Component <: workstation) . ref0))));1;(all ref0:(one Component)|(one ref1:(one Workstation)|(ref1 in (ref0 . (Component <: workstation)))));6
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 in begin) => ((ref1 . (^ (Workstation <: succ))) in (Workstation - begin)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));16
this/inv4;(all ref0:(one Product)|(((ref0 . (Product <: parts)) in Product) => (ref0 = Component)));1;(((Product <: parts) . Product) = Component);9
this/inv5;(all ref0:(one Workstation),ref1:(one (ref0 . (Workstation <: workers)))|(ref1 = (Human + Robot)));1;((((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)) = none);10
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(one (ref2 . (Component <: workstation))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));12
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|(no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human)));1;(all ref0:(one Dangerous)|(no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human)));3
this/inv4;(all ref0:(one Component)|((all ref1:(one Material)|((# (ref1 . (Product <: parts))) = none)) && (some (ref0 . (Product <: parts)))));1;(((Product <: parts) . Product) = Component);12
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((some ref2:(one Workstation)|(ref0 in (ref2 . (Workstation <: workers)))) && (ref0 in (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));11
this/inv1;(all ref0:(one Human),ref1:(one Robot)|((# (ref0 & ref1)) = 0));1;(all ref0:(one ((Worker - Human) - Robot))|((# ref0) = 0));5
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((# (ref1 . (Product <: parts))) = none) && (some (ref0 . (Product <: parts)))));1;(((Product <: parts) . Product) = Component);12
this/inv8;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human)));1;(all ref0:(one Dangerous)|(no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human)));2
this/inv2;((all ref0:(one Worker),ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(one ((Component <: workstation) . ref2)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));12
this/inv4;(no (Material . (Product <: parts)));1;(((Product <: parts) . Product) = Component);5
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((begin . (^ (Workstation <: succ))) in (Workstation - begin)));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));13
this/inv6;((all ref0:(one Component)|(ref0 !in (ref0 . (Product <: parts)))) && (all ref1:(one Product)|((ref1 in (ref1 . (Product <: parts))) => (ref1 !in Component))));1;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));14
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (no (ref0 & Dangerous))));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));8
this/inv4;(all ref0:(one Component),ref1:(one Product)|((all ref2:(one Material)|((# (ref2 . (Product <: parts))) = none)) && ((ref1 . (Product <: parts)) in ref0)));1;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));12
this/inv9;(all ref0:(one Workstation)|(((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end)) || ((one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));31
this/inv4;(all ref0:(one Component),ref1:(one Material),ref2:(one ((ref0 . (Product <: parts)) - (ref0 + Dangerous)))|(((# (ref1 . (Product <: parts))) = none) && (ref2 in ref0)));1;(((Product <: parts) . Product) = Component);12
this/inv10;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (* (Product <: parts)))) => (ref0 !in (ref1 . (* (Product <: parts))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));15
this/inv4;((all ref0:(one Component)|((ref0 -> ref0) in (Product <: parts))) && (all ref1:(one Material)|((ref1 -> ref1) !in (Product <: parts))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));12
this/inv4;(all ref0:(one Product),ref1:(one Product)|(((ref0 in Component) => ((ref0 != ref1) && (ref1 in (ref1 . (Product <: parts))))) || ((ref0 in Material) => ((ref0 != ref1) && (ref1 !in (ref1 . (Product <: parts)))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));23
this/inv9;(all ref0:(one Workstation)|(((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end)) || ((one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin)) || ((ref0 in begin) && (ref0 in end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));38
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))) && (begin != end));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv2;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|(one ((~ (Workstation <: workers)) . ref1))));1;((all ref0:(one Workstation)|((# (ref0 . (Workstation <: workers))) > 0)) && (all ref1:(one Worker)|((# ((Workstation <: workers) . ref1)) = 1)));9
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (* (Product <: parts))))|((ref1 in Dangerous) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation)|(no (ref0 & (ref0 . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv4;(all ref0:(one Product),ref1:(one Product)|(((ref0 in Component) => ((ref0 != ref1) && (ref0 in (ref1 . (Product <: parts))))) || ((ref0 in Material) => ((ref0 != ref1) && (ref1 !in (ref1 . (Product <: parts)))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));23
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 in begin) => (ref1 !in end))) && ((Workstation - begin) = (begin . (^ (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|(((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end)) || ((one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin)) || ((one Workstation) && (ref0 in begin) && (ref0 in end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));40
this/inv2;((Workstation <: workers) in (Workstation one->one Worker));1;((Workstation <: workers) in (Workstation one->some Worker));2
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Component <: workstation) . ref0)) && (one (ref0 . (Component <: workstation))))) && (one ((Component <: workstation) . end)) && (one (begin . (Component <: workstation))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((~ (Workstation <: workers)) . ref1))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));5
this/inv9;(all ref0:(one Workstation)|(((no (Workstation <: succ)) && (ref0 in begin) && (ref0 in end)) || ((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end)) || ((one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));40
this/inv4;(all ref0:(one Product),ref1:(one Product)|(((ref0 in Component) => ((ref0 != ref1) && (ref0 in (ref1 . (Product <: parts))))) || ((ref0 in Material) => ((ref0 != ref1) && (ref0 !in (ref1 . (Product <: parts)))))));1;(all ref0:(one Product)|(((ref0 in Component) => (some (ref0 . (Product <: parts)))) && ((ref0 in Material) => (no (ref0 . (Product <: parts))))));23
this/inv9;((all ref0:(one Workstation)|(no (ref0 & (ref0 . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));9
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (^ (Product <: parts))))|((Dangerous in ref1) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));6
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (^ (Product <: parts))))|((Dangerous in ref1) => (Dangerous in ref0))));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));8
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 !in (ref0 . (Product <: parts))))) && (all ref2:(one Material)|(no ref3:(one Product)|(ref3 !in (ref2 . (Product <: parts))))));1;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material),ref3:(one Product)|(ref3 !in (ref2 . (Product <: parts)))));10
this/inv9;((all ref0:(one Workstation)|(no (ref0 & (ref0 . (^ (Workstation <: succ)))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));7
this/inv9;(all ref0:(one Workstation)|(((no ((Workstation <: succ) & iden)) && (one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin)) || ((no (Workstation <: succ)) && (ref0 in begin) && (ref0 in end)) || ((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));44
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (one ref1:(one Workstation)|((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));12
this/inv1;(Human in Robot);1;(Worker in (Human + Robot));2
this/inv9;(all ref0:(one Workstation)|(((no ((Workstation <: succ) & iden)) && (one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin)) || ((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));37
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => ((ref1 . (Workstation <: workers)) !in Robot)));1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (no ((ref1 . (Workstation <: workers)) & Robot))));7
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref1 -> ref0) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref3 -> ref2) !in (Product <: parts))));1;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material),ref3:(one Product)|(ref3 !in (ref2 . (Product <: parts)))));12
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material)|(no ref3:(one Product)|(ref3 !in (ref2 . (Product <: parts))))));1;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material),ref3:(one Product)|(ref3 !in (ref2 . (Product <: parts)))));8
this/inv7;(all ref0:(one Component)|(some ref1:(one (ref0 . (^ (Product <: parts))))|((Dangerous in ref1) => (some ((ref0 & Dangerous) & Component)))));1;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref1 in Dangerous) => (ref0 in Dangerous)));11
this/inv4;(all ref0:(one Component),ref1:(one Material)|(some ref2:(one Product)|((ref2 !in (ref1 . (Product <: parts))) && (ref2 in (ref0 . (Product <: parts))))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));13
this/inv9;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));11
this/inv4;(((Product <: parts) !in (Material -> Product)) && ((Product <: parts) in (Component ->some Product)));1;((Product <: parts) in (Component ->some Product));6
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));4
this/inv5;((all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => ((ref1 . (Workstation <: workers)) !in Robot))) && (all ref2:(one Worker),ref3:(one Workstation)|(((ref2 in (ref3 . (Workstation <: workers))) && (ref2 in Robot)) => ((ref3 . (Workstation <: workers)) !in Human))));1;((all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Robot)) => ((ref1 . (Workstation <: workers)) in Robot))) && (all ref2:(one Worker),ref3:(one Workstation)|(((ref2 in (ref3 . (Workstation <: workers))) && (ref2 in Human)) => ((ref3 . (Workstation <: workers)) in Human))));16
this/inv9;(all ref0:(one Workstation)|(((no ((Workstation <: succ) & iden)) && (one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin)) || ((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end)) || (ref0 in (begin + end))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));40
this/inv9;((all ref0:(one Workstation)|((ref0 != begin) => (ref0 in (begin . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));13
this/inv9;(((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ)))) || (no (Workstation <: succ)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv4;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) = none)));1;((all ref0:(one Component)|((# (ref0 . (Product <: parts))) > 0)) && (all ref1:(one Material)|((# (ref1 . (Product <: parts))) = 0)));6
this/inv9;(all ref0:(one Workstation)|((((one (((Workstation <: succ) . ref0) - ref0)) && (one ((ref0 . (Workstation <: succ)) - ref0))) || ((one (((Workstation <: succ) . ref0) - ref0)) && (ref0 in end)) || ((one ((ref0 . (Workstation <: succ)) - ref0)) && (ref0 in begin)) || (ref0 in (begin + end))) && (no ((Workstation <: succ) & iden))));1;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && ((no ((Workstation <: succ) . ref0)) <=> (ref0 in begin)) && ((no (ref0 . (Workstation <: succ))) <=> (ref0 in end)))) && (no ((^ (Workstation <: succ)) & iden)));35
this/inv5;((all ref0:(one Workstation)|(some ref1:(one Worker)|(((ref1 in (ref0 . (Workstation <: workers))) && (ref1 in Human)) => ((ref0 . (Workstation <: workers)) !in Robot)))) && (all ref2:(one Workstation)|(some ref3:(one Worker)|(((ref3 in (ref2 . (Workstation <: workers))) && (ref3 in Robot)) => ((ref2 . (Workstation <: workers)) !in Human)))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(((ref0 in (ref2 . (Workstation <: workers))) => (ref1 !in (ref2 . (Workstation <: workers)))) && ((ref1 in (ref2 . (Workstation <: workers))) => (ref0 !in (ref2 . (Workstation <: workers))))));27
this/inv5;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) in Human) => ((ref0 . (Workstation <: workers)) !in Robot)) && (((ref0 . (Workstation <: workers)) in Robot) => ((ref0 . (Workstation <: workers)) !in Human))));1;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) !in Human) || ((ref0 . (Workstation <: workers)) !in Robot)) && (((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot))));14
this/inv9;(((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ)))) || (one Workstation));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;((all ref0:(one Workstation)|((ref0 !in begin) => (ref0 in (begin . (^ (Workstation <: succ)))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));13
this/inv5;((all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) => ((ref0 . (Workstation <: workers)) !in Robot))) && (all ref1:(one Workstation)|(((ref1 . (Workstation <: workers)) in Robot) => ((ref1 . (Workstation <: workers)) !in Human))));1;((all ref0:(one Workstation)|((some ((ref0 . (Workstation <: workers)) & Human)) => (no ((ref0 . (Workstation <: workers)) & Robot)))) && (all ref1:(one Workstation)|((some ((ref1 . (Workstation <: workers)) & Robot)) => (no ((ref1 . (Workstation <: workers)) & Human)))));16
this/inv1;(all ref0:(one Workstation)|((ref0 in Human) || (ref0 in Robot)));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));2
this/inv9;((all ref0:(one Workstation)|(begin !in (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));9
this/inv5;(all ref0:(one Human),ref1:(one Robot)|((ref0 . (~ (Workstation <: workers))) != (ref1 . (Workstation <: workers))));1;(all ref0:(one Human),ref1:(one Robot)|((ref0 . (~ (Workstation <: workers))) != (ref1 . (~ (Workstation <: workers)))));5
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));10
this/inv9;((all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));4
this/inv8;(all ref0:(one Product)|((ref0 in Dangerous) => (no ((ref0 . (Workstation <: workers)) & Human))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));4
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (no ((Workstation <: succ) & (begin -> end))) && (one ((Workstation <: succ) . end)) && (one (begin . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv8;(all ref0:(one Component),ref1:(one (ref0 . (Component <: workstation)))|(ref0 in Dangerous));1;(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) in Robot);8
this/inv4;(all ref0:(one Product)|((ref0 !in ((Material - Component) . (Product <: parts))) && (ref0 in ((Component - Material) . (Product <: parts)))));1;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));13
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (((ref0 . (^ (Product <: parts))) . (Component <: workstation)) . (Workstation <: succ))));1;(all ref0:(one Component)|((((^ (Product <: parts)) . ref0) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))));9
this/inv9;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (one ref1:(one Workstation)|((no ((Workstation <: succ) . ref1)) && ((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1)))) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (one ref1:(one Workstation)|((no ((Workstation <: succ) . ref1)) && ((ref1 . (^ (Workstation <: succ))) = (Workstation - ref1)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));8
this/inv2;((all ref0:(one Worker)|(ref0 in (Workstation . (Workstation <: workers)))) && (all ref1:(one Workstation)|(ref1 in ((Workstation <: workers) . Worker))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (Workstation in ((Workstation <: workers) . Worker)));8
this/inv10;(all ref0:(one Component)|((ref0 . (Component <: workstation)) in (ref0 . (^ (((Product <: parts) . (Component <: workstation)) . (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));9
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker),ref2:(one Worker)|((((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)) && (ref1 in Human)) <=> (ref2 !in Robot))));1;(all ref0:(one Workstation)|(no ref1:(one Human),ref2:(one Robot)|(((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)))));13
this/inv4;(some ref0:(one Product)|((ref0 !in (Material . (Product <: parts))) && (ref0 in (Component . (Product <: parts)))));1;((none = (Material . (Product <: parts))) && (Component in ((Product <: parts) . Product)));9
this/inv7;(some ref0:(one Product)|(((ref0 . (Product <: parts)) in Dangerous) => (ref0 in Dangerous)));1;(all ref0:(one Component)|((ref0 in ((Product <: parts) . Dangerous)) => (ref0 in Dangerous)));4
this/inv7;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) in Dangerous) => (some ((ref0 & Dangerous) & Component))));1;(all ref0:(one Component)|((ref0 in ((^ (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));9
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker),ref2:(one Worker)|((((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)) && (ref1 in Human)) <=> (ref2 in Human))));1;(all ref0:(one Workstation)|(no ref1:(one Human),ref2:(one Robot)|(((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)))));13
this/inv1;(all ref0:(one Workstation)|(some ref1:(one Worker)|(((ref0 -> ref1) in (Workstation <: workers)) => ((ref1 in Human) || (ref1 in Robot)))));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));13
this/inv4;(all ref0:(one Component)|(some ref1:(one Product)|((all ref2:(one Material)|(no ref3:(one Product)|(ref3 in (ref2 . (Product <: parts))))) && (ref0 in (ref1 . (Product <: parts))))));1;((all ref0:(one (Product - Material))|(some (ref0 . (Product <: parts)))) && (all ref1:(one Material)|(no (ref1 . (Product <: parts)))));14
this/inv5;(all ref0:(one Workstation)|(some ref1:(one Worker),ref2:(one Worker)|((((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)) && (ref1 in Human)) => (ref2 in Human))));1;(all ref0:(one Workstation)|(no ref1:(one Human),ref2:(one Robot)|(((ref0 -> ref1) in (Workstation <: workers)) && ((ref0 -> ref2) in (Workstation <: workers)))));13
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Component) => ((ref0 . (Component <: workstation)) in (((ref0 . (Product <: parts)) . (Component <: workstation)) . (* (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));11
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(ref1 in (ref0 . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv10;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((Workstation <: succ) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));3
this/inv2;((lone (Workstation <: succ)) && (Workstation in (Worker . (~ (Workstation <: workers)))));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv8;(all ref0:(one Component)|(some ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (all ref2:(one Worker)|(ref2 in Robot)))));1;(all ref0:(one Component),ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (! (some ref2:(one Human)|((ref1 -> ref2) in (Workstation <: workers))))));11
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));14
this/inv2;((one ((Component <: workstation) . Worker)) && (some (Workstation . (Workstation <: workers))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));8
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref0 in (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (Workstation <: succ)))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));12
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (some (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));10
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . Worker)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref3 in ((Workstation <: workers) . ref2)))));10
this/inv7;(all ref0:(one Component)|(((ref0 . (* (Product <: parts))) in Dangerous) => (some ((ref0 & Dangerous) & Component))));1;(all ref0:(one Component)|((ref0 in ((* (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));9
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref0 in (ref1 . (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));11
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (one begin) && (one end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;(all ref0:(one Workstation)|(some ref1:(one Workstation)|((ref0 != ref1) && ((ref0 -> ref1) in (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv10;(all ref0:(one Component)|((ref0 . (^ (Product <: parts))) !in Material));1;(((^ (Product <: parts)) . (Component <: workstation)) in ((Component <: workstation) . (~ (^ (Workstation <: succ)))));11
this/inv7;(all ref0:(one Component)|(((ref0 . (* (Product <: parts))) in Dangerous) => (some (ref0 & Dangerous))));1;(all ref0:(one Component)|((ref0 in ((* (Product <: parts)) . Dangerous)) => (ref0 in Dangerous)));7
this/inv9;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));15
this/inv9;(all ref0:(one Worker),ref1:(one Workstation)|(((ref1 -> ref0) in (Workstation <: workers)) => (lone ref2:(one Workstation)|((ref1 -> ref2) in (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));23
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && (one begin) && (one end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));14
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((none != (ref1 . (Workstation <: workers))) && (ref0 in (ref1 . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(none != (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));11
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (one begin) && (one end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));19
this/inv9;(all ref0:(one Workstation)|((ref0 in begin) => ((ref0 . (Workstation <: succ)) in end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (Product <: parts))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref2 . (Workstation <: succ)))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));12
this/inv2;((all ref0:(one Worker)|(Workstation in (Worker . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));9
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Component) => (((ref0 . (Product <: parts)) . (Component <: workstation)) in ((ref0 . (^ (Component <: workstation))) . (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));11
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (begin & end)) && (no (end . (Workstation <: succ))) && (one begin) && (one end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (((Workstation - begin) . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv9;((all ref0:(one ((Workstation - begin) - end))|((one ((Workstation <: succ) . ref0)) && (one (ref0 . (Workstation <: succ))))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv9;((all ref0:(one Workstation)|((one Workstation) || (some (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|((one Workstation) || (ref1 !in (ref1 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv2;((all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in (ref2 . (Workstation <: workers)))) => (ref1 = ref2))) && (all ref3:(one Workstation)|(some ref4:(one Worker)|(ref4 in (ref3 . (Workstation <: workers))))));1;((all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in (ref2 . (Workstation <: workers)))) => (ref1 = ref2))) && (all ref3:(one Workstation)|(some (ref3 . (Workstation <: workers)))) && (all ref4:(one Worker)|(ref4 in (Workstation . (Workstation <: workers)))));16
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Component) => (((ref0 . (Product <: parts)) . (Component <: workstation)) in (ref0 . (^ ((Component <: workstation) . (Workstation <: succ)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));13
this/inv10;(all ref0:(one Component)|((ref0 . (^ (Product <: parts))) in end));1;(((^ (Product <: parts)) . (Component <: workstation)) in ((Component <: workstation) . (~ (^ (Workstation <: succ)))));9
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (Workstation in (Worker . (~ (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && ((Workstation <: workers) in (Workstation one->some Worker)));7
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (Product <: parts))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (Workstation <: succ)))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));10
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) in Component) => ((ref0 . (Component <: workstation)) in (ref0 . (^ (((Product <: parts) . (Component <: workstation)) . (Workstation <: succ)))))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));11
this/inv9;((all ref0:(one Workstation)|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (one begin) && (one end));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));23
this/inv2;((all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in (ref2 . (Workstation <: workers)))) => (ref1 = ref2))) && (all ref3:(one Workstation)|(some (ref3 . (Workstation <: workers)))));1;((all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in (ref2 . (Workstation <: workers)))) => (ref1 = ref2))) && (all ref3:(one Workstation)|(some (ref3 . (Workstation <: workers)))) && (all ref4:(one Worker)|(ref4 in (Workstation . (Workstation <: workers)))));14
this/inv9;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|((one Workstation) || (ref1 !in (ref1 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv5;(all ref0:(one Human),ref1:(one Robot)|(one ref2:(one Workstation)|((ref0 in (ref2 . (Workstation <: workers))) || (ref1 in (ref2 . (Workstation <: workers))))));1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Workstation)|(! ((ref0 in (ref2 . (Workstation <: workers))) && (ref1 in (ref2 . (Workstation <: workers))))));9
this/inv10;(all ref0:(one Component)|((ref0 . (^ (Product <: parts))) !in end));1;(((^ (Product <: parts)) . (Component <: workstation)) in ((Component <: workstation) . (~ (^ (Workstation <: succ)))));11
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(ref1 in (Workstation . (Workstation <: workers)))) && (Workstation in (Worker . (~ (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));13
this/inv9;(all ref0:(one Workstation)|((one Workstation) || (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));17
this/inv10;(all ref0:(one Component),ref1:(one Product)|((ref0 in (ref1 . (Product <: parts))) => (all ref2:(one Workstation)|(ref0 !in (ref2 . (Component <: workstation))))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));16
this/inv10;(all ref0:(one Component)|((ref0 . (Product <: parts)) in ((Workstation . (^ ((Component <: workstation) . (Workstation <: succ)))) - ((ref0 . (Component <: workstation)) . (^ ((Component <: workstation) . (Workstation <: succ)))))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) . (Component <: workstation)) in ((ref0 . (Component <: workstation)) . (~ (^ (Workstation <: succ))))));13
this/inv9;((all ref0:(one Workstation)|((ref0 in end) || (some (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));17
this/inv9;((all ref0:(one Workstation)|((ref0 in end) || (some (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 !in (ref1 . (^ (Workstation <: succ)))) || (ref1 in end))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));21
this/inv1;(all ref0:(one Human),ref1:(one Robot),ref2:(one Worker)|((ref0 = ref2) || (ref1 = ref2)));1;(all ref0:(one ((Worker - Human) - Robot))|((# ref0) = 0));11
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((Workstation . (^ ((Component <: workstation) . (Workstation <: succ)))) - ((ref0 . (Component <: workstation)) . (^ ((Component <: workstation) . (Workstation <: succ)))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((begin . (* (Workstation <: succ))) - ((ref0 . (Component <: workstation)) . (* (Workstation <: succ))))));12
this/inv9;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|((ref1 !in (ref1 . (^ (Workstation <: succ)))) || (ref1 in end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv4;(all ref0:(one Component)|((all ref1:(one Material)|(no (ref1 . (Product <: parts)))) || (some (ref0 . (Product <: parts)))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (all ref1:(one Component)|(some (ref1 . (Product <: parts)))));10
this/inv8;(all ref0:(one Component)|(some ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (all ref2:(one Human)|(ref2 !in (ref1 . (^ (Workstation <: workers))))))));1;(all ref0:(one Component),ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (no ((ref1 . (Workstation <: workers)) & Human))));11
this/inv9;((all ref0:(one Workstation)|((ref0 !in end) => (some (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|((ref1 !in (ref1 . (^ (Workstation <: succ)))) || (ref1 in end))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));21
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in (Workstation - ((ref0 . (Component <: workstation)) . (^ ((Component <: workstation) . (Workstation <: succ)))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((Workstation - ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) - (ref0 . (Component <: workstation)))));8
this/inv9;((all ref0:(one Workstation)|((ref0 !in end) => (some (ref0 . (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));17
this/inv10;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in (Workstation - ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((Workstation - ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ)))) - (ref0 . (Component <: workstation)))));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation . (Workstation <: workers)) - (univ - ref1)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));10
this/inv7;(all ref0:(one Component)|(some ref1:(one Product)|((((ref0 -> ref1) in (Product <: parts)) && (ref1 = Dangerous)) => (ref0 = Dangerous))));1;(all ref0:(one Component),ref1:(one Product)|((((ref0 -> ref1) in (Product <: parts)) && (ref1 in Dangerous)) => (ref0 in Dangerous)));8
this/inv7;(all ref0:(one Component)|((some (ref0 & Dangerous)) => (ref0 in Dangerous)));1;(all ref0:(one Component)|((some ((ref0 . (Product <: parts)) & Dangerous)) => (ref0 in Dangerous)));4
this/inv9;(all ref0:(one Workstation)|(ref0 in (ref0 . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));16
this/inv2;(all ref0:(one Workstation)|(some ref1:(one Worker)|((ref1 -> ref0) in (Component <: workstation))));1;((Workstation <: workers) in (Workstation one->some Worker));10
this/inv7;(all ref0:(one Component)|(some ref1:(one Product)|((((ref0 -> ref1) in (Product <: parts)) && (ref1 in Dangerous)) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one Product)|((((ref0 -> ref1) in (Product <: parts)) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv9;(all ref0:(one begin),ref1:(one end)|((ref0 = ref1) || (ref1 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv5;(all ref0:(one Workstation),ref1:(one (ref0 . (Workstation <: workers)))|(ref1 in Human));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));11
this/inv2;(all ref0:(one Workstation)|(one ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))) && (ref1 in (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(some ref1:(one Worker)|((all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))) && (ref1 in (ref0 . (Workstation <: workers))))));8
this/inv2;((some (Workstation <: workers)) && (some (Worker . (~ (Workstation <: workers)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (~ (Workstation <: workers))))));8
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 -> ref1) in (Workstation <: workers)) && ((ref1 -> ref0) in (Workstation <: workers))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));10
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 in end) => (no (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));12
this/inv2;(Workstation = (Workstation . (Workstation <: workers)));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv2;(all ref0:(one Workstation)|(ref0 in (ref0 . (Workstation <: workers))));1;((Workstation <: workers) in (Workstation one->some Worker));7
this/inv9;(one ref0:(one begin),ref1:(one end)|(ref1 in (ref0 . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));15
this/inv2;(((Workstation <: workers) . Workstation) = Workstation);1;((Workstation <: workers) in (Workstation one->some Worker));6
this/inv1;((all ref0:(one Worker),ref1:(one Worker)|((ref0 != ref1) => ((ref0 in Human) && (ref1 in Robot)))) && (no Worker));1;(all ref0:(one Worker)|((ref0 in Human) || (ref0 in Robot)));14
this/inv2;((Worker . (Workstation <: workers)) = Workstation);1;((Workstation <: workers) in (Workstation one->some Worker));6
this/inv9;(one ref0:(one begin),ref1:(one end)|(ref1 in (ref0 . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;(all ref0:(one ((Workstation - end) - begin))|((no ((^ (Workstation <: succ)) . begin)) && (no (end . (^ (Workstation <: succ)))) && (one (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv5;(all ref0:(one Workstation)|((Worker in (ref0 . (Workstation <: workers))) => (Robot !in (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));10
this/inv4;((all ref0:(one Component)|(one ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material)|(no ref3:(one Product)|(ref3 in (ref2 . (Product <: parts))))));1;((all ref0:(one Component)|(some ref1:(one Product)|(ref1 in (ref0 . (Product <: parts))))) && (all ref2:(one Material)|(no ref3:(one Product)|(ref3 in (ref2 . (Product <: parts))))));8
this/inv2;((((Workstation <: workers) . Worker) = Workstation) && (((Workstation <: workers) . Workstation) = Worker));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && ((Workstation <: workers) in (Workstation one->some Worker)));10
this/inv9;(all ref0:(one ((Workstation - end) - begin))|((no ((^ (Workstation <: succ)) . begin)) && (no (end . (^ (Workstation <: succ)))) && (one ((ref0 . (^ (Workstation <: succ))) - ref0))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv3;((Component <: workstation) in (Component one-> Worker));1;((Component <: workstation) in (Component ->one Workstation));4
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one (ref1 . (Component <: workstation)))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));6
this/inv9;(all ref0:(one ((Workstation - end) - begin))|((no ((^ (Workstation <: succ)) . begin)) && (no (end . (^ (Workstation <: succ)))) && (one (ref0 . (^ (Workstation <: succ)))) && ((ref0 . (^ (Workstation <: succ))) !in ref0)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));20
this/inv3;((Component <: workstation) in (Component ->one Worker));1;((Component <: workstation) in (Component ->one Workstation));2
this/inv4;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material)|(some ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts)))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));8
this/inv9;(all ref0:(one ((Workstation - end) - begin))|((no ((^ (Workstation <: succ)) . begin)) && (no (end . (^ (Workstation <: succ)))) && (one (ref0 . (^ (Workstation <: succ)))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));20
this/inv2;((((Workstation <: workers) . Worker) = Workstation) && (Worker = (Workstation . (Workstation <: workers))));1;(((Workstation <: workers) in (Workstation one->some Worker)) && (some (Workstation <: workers)));9
this/inv2;((((Workstation <: workers) . Worker) = Workstation) && (Worker = (Worker . (~ (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && ((Worker . (~ (Workstation <: workers))) = Workstation));10
this/inv2;((((Workstation <: workers) . Workstation) = Workstation) && (Worker = (Worker . (~ (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && ((Worker . (~ (Workstation <: workers))) = Workstation));10
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|((ref1 -> ref0) in (Workstation <: workers)));1;(all ref0:(one Human),ref1:(one Workstation)|(((ref1 -> ref0) in (Workstation <: workers)) => (all ref2:(one Robot)|((ref1 -> ref2) !in (Workstation <: workers)))));11
this/inv8;((((Component & Dangerous) . (Component <: workstation)) . (Workstation <: workers)) !in Human);1;(no ((((Component & Dangerous) . (Component <: workstation)) . (Workstation <: workers)) & Human));3
this/inv4;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in (Product . (Product <: parts))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));4
this/inv7;(all ref0:(one Component)|(one ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (Product <: parts))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv7;(all ref0:(one Component)|((Dangerous in (ref0 . (^ (Product <: parts)))) => (ref0 = Dangerous)));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));7
this/inv10;(all ref0:(one Component)|(((ref0 . (^ ((Product <: parts) . (Component <: workstation)))) !in end) => ((ref0 . (Component <: workstation)) !in end)));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));14
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref3 -> ref1) in (Workstation <: workers))) => (ref1 in Human)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref1 in Human)));11
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (some (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));10
this/inv9;((all ref0:(one (begin . (^ (Workstation <: succ))))|(ref0 !in (ref0 . (Workstation <: succ)))) && (end in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref3 in (ref2 . (^ (Workstation <: succ))))));1;(all ref0:(one Product),ref1:(one Product),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref3 . (^ (Workstation <: succ))))));12
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref3 -> ref1) in (Workstation <: workers))) => (ref1 in Human)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref0 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref1 in Human)));9
this/inv7;(all ref0:(one Component)|((Dangerous in ref0) <=> (Dangerous in (ref0 . (Product <: parts)))));1;(((Product <: parts) . Dangerous) in Dangerous);9
this/inv7;(all ref0:(one Component)|(one ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 in end) => (ref3 !in (Workstation . (^ (Workstation <: succ)))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));16
this/inv4;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in (Component . (Product <: parts))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));4
this/inv5;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation),ref3:(one Workstation)|(((ref1 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref3 -> ref1) in (Workstation <: workers))) => (ref0 in Human)));1;(all ref0:(one Worker),ref1:(one Worker),ref2:(one Workstation)|(((ref1 in Human) && ((ref2 -> ref0) in (Workstation <: workers)) && ((ref2 -> ref1) in (Workstation <: workers))) => (ref0 in Human)));9
this/inv1;((Human + Robot) in Worker);1;((Human + Robot) = Worker);2
this/inv9;((no ((^ (Workstation <: succ)) & iden)) && (Workstation in ((begin . (* (Workstation <: succ))) & (end . (* (~ (Workstation <: succ)))))));1;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation in ((begin . (* (Workstation <: succ))) & (end . (* (~ (Workstation <: succ)))))));5
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) !in Human) => ((((ref0 . (Workstation <: workers)) !in Robot) && ((ref0 . (Workstation <: workers)) in Robot)) => ((ref0 . (Workstation <: workers)) in Human))));1;(all ref0:(one Workstation)|((((ref0 . (Workstation <: workers)) !in Human) || ((ref0 . (Workstation <: workers)) !in Robot)) && (((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot))));12
this/inv4;(all ref0:(one Component),ref1:(one Material)|(((ref0 -> ref0) in (Product <: parts)) && ((ref1 -> ref1) !in (Product <: parts))));1;((all ref0:(one Component)|(some ref1:(one Product)|((ref0 -> ref1) in (Product <: parts)))) && (all ref2:(one Material),ref3:(one Product)|((ref2 -> ref3) !in (Product <: parts))));12
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref1 in begin) => (((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref0 !in end) && (ref0 in (ref1 . (^ (Workstation <: succ))))) => (one (ref0 . (Workstation <: succ)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));29
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((no (ref3 . (^ (Workstation <: succ)))) <=> (ref3 in end))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));19
this/inv8;(all ref0:(one Component)|((ref0 = Dangerous) => (Human !in ((ref0 . (Component <: workstation)) . (Workstation <: workers)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));6
this/inv4;((((Product <: parts) . Component) = Component) && (no ((Product <: parts) . Material)));1;(((Product <: parts) . Product) = Component);7
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (Workstation in ((begin . (* (Workstation <: succ))) & (end . (* (~ (Workstation <: succ)))))));1;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no ((^ (Workstation <: succ)) & iden)) && (Workstation in ((begin . (* (Workstation <: succ))) & (end . (* (~ (Workstation <: succ)))))));5
this/inv1;((no (Human & (Workstation . (Workstation <: workers)))) && (no (Robot & (Workstation . (Workstation <: workers)))));1;((no (Human & Robot)) && ((Human + Robot) = Worker));13
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no ((^ (Workstation <: succ)) & iden)));1;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));11
this/inv2;((Workstation <: workers) in (Workstation some->some Worker));1;((Workstation <: workers) in (Workstation one->some Worker));2
this/inv4;((no (Material . (Product <: parts))) && (Component = (Component . (Product <: parts))));1;((all ref0:(one Material)|(no (ref0 . (Product <: parts)))) && (Component in ((Product <: parts) . Product)));7
this/inv2;(all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in ref1)));1;((Workstation <: workers) in (Workstation one->some Worker));8
this/inv5;((Human = (Workstation . (Workstation <: workers))) || (Robot = (Workstation . (Workstation <: workers))));1;(no (((Workstation <: workers) . Human) & ((Workstation <: workers) . Robot)));11
this/inv10;(all ref0:(one Component),ref1:(one Material),ref2:(one Product),ref3:(one Workstation)|((ref2 !in (ref0 . (Product <: parts))) => (ref3 !in (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (Product <: parts)) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));16
this/inv10;(no ((Component . (Product <: parts)) . (Component <: workstation)));1;(no ((((Component <: workstation) . (* (Workstation <: succ))) . (~ (Component <: workstation))) & ((Product <: parts) :> Component)));10
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));14
this/inv8;(all ref0:(one Dangerous),ref1:(one Workstation)|(ref0 in ((Component <: workstation) . ref1)));1;(all ref0:(one Dangerous),ref1:(one Human)|(ref0 !in (((Component <: workstation) . (Workstation <: workers)) . ref1)));8
this/inv8;(all ref0:(one (Component & Dangerous))|(Human !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))));1;(all ref0:(one (Component & Dangerous))|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human));4
this/inv10;(no (((Component . (Product <: parts)) . (Component <: workstation)) . (~ (Workstation <: succ))));1;(((^ (Product <: parts)) . (Component <: workstation)) in ((Component <: workstation) . (~ (^ (Workstation <: succ)))));9
this/inv5;(all ref0:(one Workstation)|((no ((ref0 . (Workstation <: workers)) & Human)) || (some ((ref0 . (Workstation <: workers)) & Robot))));1;(all ref0:(one Workstation)|((no ((ref0 . (Workstation <: workers)) & Human)) || (no ((ref0 . (Workstation <: workers)) & Robot))));4
this/inv10;((Component . (Component <: workstation)) !in (((Component . (Product <: parts)) . (Component <: workstation)) . (Workstation <: succ)));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));11
this/inv9;(all ref0:(one Workstation)|((ref0 !in end) => (one (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(one ref0:(one (Workstation & begin))|(((# (ref0 . (^ (Workstation <: succ)))) - 1) = ((# (ref0 . (^ (Workstation <: succ)))) - end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));8
this/inv1;(all ref0:(one Workstation)|((ref0 . (Workstation <: succ)) != (ref0 . (Workstation <: workers))));1;(all ref0:(one ((Worker - Human) - Robot))|(ref0 !in Worker));10
this/inv9;(one ref0:(one (Workstation & begin))|(((# (ref0 . (^ (Workstation <: succ)))) - 1) = (# ((ref0 . (^ (Workstation <: succ))) - end))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));21
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((ref0 in (ref1 . (Workstation <: workers))) && ((ref1 . (Workstation <: workers)) !in none)));1;((all ref0:(one Worker)|(one ref1:(one Workstation)|(ref0 in (ref1 . (Workstation <: workers))))) && (all ref2:(one Workstation)|(some (ref2 . (Workstation <: workers)))));10
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) => (no (Robot - (ref0 . (Workstation <: workers))))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));9
this/inv10;(all ref0:(one Component),ref1:(one (ref0 . (Product <: parts)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));4
this/inv5;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) => (((no (Robot - (ref0 . (Workstation <: workers)))) && ((ref0 . (Workstation <: workers)) in Robot)) => (no (Human - (ref0 . (Workstation <: workers)))))));1;(all ref0:(one Workstation)|(((ref0 . (Workstation <: workers)) in Human) || ((ref0 . (Workstation <: workers)) in Robot)));18
this/inv7;(some ref0:(one Component)|((some ((ref0 . (^ (Product <: parts))) & Dangerous)) => (ref0 in Dangerous)));1;(all ref0:(one Product)|((some ((ref0 . (^ (Product <: parts))) & Dangerous)) => (ref0 in Dangerous)));2
this/inv2;((all ref0:(one Workstation)|(one ref1:(one Worker)|((none = (ref0 . (Workstation <: succ))) && (ref1 in (ref0 . (Workstation <: workers)))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((none = (ref3 . (Workstation <: succ))) && (ref2 in (ref3 . (Workstation <: workers)))))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|(ref2 in (ref3 . (Workstation <: workers))))));20
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|((one (ref0 . (~ (Workstation <: workers)))) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one (ref0 . (~ (Workstation <: workers))))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));5
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in ref0))) && (all ref2:(one Worker)|(ref2 in Workstation)));1;((Workstation <: workers) in (Workstation one->some Worker));11
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (Workstation in ((begin . (* (Workstation <: succ))) & (end . (* (~ (Workstation <: succ)))))));1;((all ref0:(one Workstation)|((lone (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))))) && (Workstation in ((begin . (* (Workstation <: succ))) & (end . (* (~ (Workstation <: succ)))))));7
this/inv2;(all ref0:(one Worker),ref1:(one Workstation),ref2:(one Workstation)|(((ref0 in ref2) => (ref0 !in ref1)) && (some (ref1 . (Workstation <: workers)))));1;((all ref0:(one Worker)|(one ((Workstation <: workers) . ref0))) && (all ref1:(one Workstation)|(some (ref1 . (Workstation <: workers)))));14
this/inv10;(all ref0:(one Component)|((ref0 . (^ (Product <: parts))) in (((ref0 . (Component <: workstation)) . (^ (~ (Workstation <: succ)))) . (~ (Component <: workstation)))));1;(all ref0:(one Component)|(((ref0 . (^ (Product <: parts))) & Component) in (((ref0 . (Component <: workstation)) . (^ (~ (Workstation <: succ)))) . (~ (Component <: workstation)))));4
this/inv7;(all ref0:(one Component)|(ref0 !in (ref0 . (^ (Product <: parts)))));1;(all ref0:(one Dangerous)|((ref0 . (^ (~ (Product <: parts)))) in Dangerous));7
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|(ref1 in (ref0 . (Workstation <: workers))))) && (all ref2:(one Worker)|(ref2 in Workstation)));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && ((Workstation <: workers) in (Workstation one->some Worker)));11
this/inv2;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Component <: workstation)))));1;((all ref0:(one Workstation)|(some ref1:(one Worker)|((ref0 -> ref1) in (Workstation <: workers)))) && (all ref2:(one Worker)|(one ref3:(one Workstation)|((ref3 -> ref2) in (Workstation <: workers)))));10
this/inv7;(no ((^ (Product <: parts)) & iden));1;(((^ (Product <: parts)) . Dangerous) in Dangerous);7
this/inv10;(all ref0:(one Component)|(no ((((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))) . (~ (Component <: workstation))) & (ref0 . (^ (Product <: parts))))));1;(all ref0:(one Component)|(no ((((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) . (~ (Component <: workstation))) & (ref0 . (^ (Product <: parts))))));4
this/inv5;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Robot)) => (((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human) && ((ref1 . (Workstation <: workers)) in Robot)) => ((ref1 . (Workstation <: workers)) in Human))));1;(all ref0:(one Worker),ref1:(one Workstation)|(((ref0 in (ref1 . (Workstation <: workers))) && (ref0 in Human)) => (no ((ref1 . (Workstation <: workers)) - Human))));22
this/inv1;(all ref0:(one Worker)|((ref0 in Robot) || ((ref0 in (Workstation . (Workstation <: workers))) => (ref0 in Human))));1;(all ref0:(one Worker)|((ref0 !in Robot) <=> (ref0 in Human)));12
this/inv10;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => (((ref0 . (Component <: workstation)) in end) && ((ref1 . (Component <: workstation)) in begin))));1;(all ref0:(one Component),ref1:(one Component)|((ref1 in (ref0 . (Product <: parts))) => ((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));13
this/inv8;(((Workstation . (Component <: workstation)) . (Workstation <: workers)) in Robot);1;(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) in Robot);2
this/inv9;(all ref0:(one begin),ref1:(one end)|((no (ref1 . (Workstation <: succ))) && ((ref0 . (Workstation <: succ)) in Workstation)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv10;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) & Component))|(ref0 in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) - Material))|((ref0 . (Component <: workstation)) in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ)))));6
this/inv8;((((Component <: workstation) . Component) . (Workstation <: workers)) in Robot);1;(((Dangerous . (Component <: workstation)) . (Workstation <: workers)) in Robot);2
this/inv2;(all ref0:(one Workstation)|((no (Worker - (ref0 . (Workstation <: workers)))) && (some (ref0 . (Workstation <: workers)))));1;(all ref0:(one Workstation)|((all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))) && (some (ref0 . (Workstation <: workers)))));9
this/inv2;(all ref0:(one Worker),ref1:(one Workstation)|((none != (ref1 . (Workstation <: workers))) && (ref0 in (Workstation . (Workstation <: workers)))));1;((all ref0:(one Workstation)|(none != (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ref2:(one Workstation)|(ref1 in (ref2 . (Workstation <: workers))))));11
this/inv8;(((~ (Workstation <: workers)) . ((~ (Component <: workstation)) . Component)) in Robot);1;(((~ (Workstation <: workers)) . ((~ (Component <: workstation)) . Dangerous)) in Robot);2
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (Human !in (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (((ref0 . (Component <: workstation)) . (Workstation <: workers)) !in Human)));6
this/inv2;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(lone (ref1 & (Workstation . (Workstation <: workers))))));1;((all ref0:(one Workstation)|(some (ref0 . (Workstation <: workers)))) && (all ref1:(one Worker)|(one ((Workstation <: workers) . ref1))));10
this/inv8;(all ref0:(one Component)|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot));1;(all ref0:(one Dangerous)|(((ref0 . (Component <: workstation)) . (Workstation <: workers)) in Robot));2
this/inv8;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref2 in (ref0 . (Component <: workstation)))) => (Human !in (ref2 . (Workstation <: workers)))));1;(all ref0:(one Component),ref1:(one Human),ref2:(one Workstation)|(((ref0 in Dangerous) && (ref2 in (ref0 . (Component <: workstation)))) => (ref1 !in (ref2 . (Workstation <: workers)))));8
this/inv9;(all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((ref0 . (^ (Workstation <: succ))) in (Workstation - ref0))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));16
this/inv7;(all ref0:(one Dangerous)|(some (ref0 . (Product <: parts))));1;(((Product <: parts) . Dangerous) in Dangerous);6
this/inv7;(all ref0:(one Dangerous)|(some ref1:(one Dangerous)|((ref0 -> ref1) in (Product <: parts))));1;(all ref0:(one Dangerous),ref1:(one ((Product <: parts) . ref0))|(ref1 in Dangerous));8
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref0 . (^ (Workstation <: succ))) in ref1)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;(((Workstation <: succ) in (Workstation one->one Workstation)) && ((begin . (* (Workstation <: succ))) in Workstation));1;(((Workstation <: succ) in (Workstation ->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv8;(all ref0:(one Dangerous),ref1:(one Human),ref2:(one Workstation)|((! ((ref2 -> ref1) in (Workstation <: workers))) && ((ref0 -> ref2) in (Component <: workstation))));1;(all ref0:(one Dangerous),ref1:(one (ref0 . (Component <: workstation)))|(no ref2:(one Human)|(ref2 in (ref1 . (Workstation <: workers)))));15
this/inv7;(all ref0:(one Dangerous),ref1:(one Dangerous)|((ref0 -> ref1) in (Product <: parts)));1;(all ref0:(one Dangerous),ref1:(one ((Product <: parts) . ref0))|(ref1 in Dangerous));8
this/inv9;(one ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));10
this/inv7;(all ref0:(one Dangerous)|(some ref1:(one Dangerous)|((ref1 -> ref0) in (Product <: parts))));1;(all ref0:(one Dangerous),ref1:(one ((Product <: parts) . ref0))|(ref1 in Dangerous));8
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)) && ((begin . (* (Workstation <: succ))) in Workstation));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));10
this/inv9;(all ref0:(one Workstation)|(one ref1:(one Workstation)|((ref0 != ref1) && ((ref0 . (^ (Workstation <: succ))) in ref1))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|((no (ref0 & (ref0 . (^ (Workstation <: succ))))) && (begin != end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;(all ref0:(one Workstation)|(lone ref1:(one Workstation)|((ref0 != ref1) && ((ref0 . (^ (Workstation <: succ))) in ref1))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|(! (ref0 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));17
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)) && ((begin . (* (Workstation <: succ))) in Workstation) && (end !in begin));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 = begin) && (ref1 = end)) => (ref0 != ref1))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));21
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! (ref0 in (ref0 . (^ (Workstation <: succ))))) && ((ref0 -> ref1) in (Workstation <: succ))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));18
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref0 in begin)) => (ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));21
this/inv7;(all ref0:(one Component),ref1:(one Component)|(((ref0 != ref1) && (ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref1 in Dangerous)));1;(all ref0:(one Component),ref1:(one Product)|(((ref1 in (ref0 . (^ (Product <: parts)))) && (ref1 in Dangerous)) => (ref0 in Dangerous)));9
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|(((begin in ref0) && (end in ref1)) => (ref0 != ref1))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));21
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one Workstation)|((no (ref1 . (^ (Workstation <: succ)))) && ((ref0 . (^ (Workstation <: succ))) in (Workstation - ref0)) && (ref2 !in (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));17
this/inv9;((all ref0:(one (Workstation - end))|(one ref1:(one Workstation)|(ref1 in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one (Workstation - begin))|(one ref3:(one Workstation)|(ref2 in (ref3 . (^ (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));19
this/inv7;(all ref0:(one Component),ref1:(one Component)|(((ref0 != ref1) && (ref0 in Dangerous) && (ref1 in (ref0 . (^ (Product <: parts))))) => (ref1 in Dangerous)));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));13
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! (ref0 in (ref0 . (^ (Workstation <: succ))))) && (ref0 != ref1) && ((ref0 -> ref1) in (Workstation <: succ))));1;((all ref0:(one (Workstation - begin))|(ref0 in (begin . (^ (Workstation <: succ))))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one (Workstation - end))|(one (ref2 . (Workstation <: succ)))));20
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one Workstation)|((no (ref1 . (^ (Workstation <: succ)))) && ((ref0 . (^ (Workstation <: succ))) in Workstation) && (ref2 !in (ref2 . (^ (Workstation <: succ)))))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((begin in ref0) && (end in ref1)) => (ref0 != ref1)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));22
this/inv9;((all ref0:(one (Workstation - end))|(one ref1:(one Workstation)|((ref0 != ref1) && (ref1 in (ref0 . (^ (Workstation <: succ))))))) && (all ref2:(one (Workstation - begin))|(one ref3:(one Workstation)|((ref2 != ref3) && (ref2 in (ref3 . (^ (Workstation <: succ))))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));26
this/inv7;(all ref0:(one Component),ref1:(one Product)|(((ref0 in Dangerous) && (ref1 in (ref0 . (^ (Product <: parts))))) => (ref1 in Dangerous)));1;(all ref0:(one Component),ref1:(one Dangerous)|((ref1 in (ref0 . (^ (Product <: parts)))) => (ref0 in Dangerous)));10
this/inv9;(all ref0:(one Workstation)|((! (ref0 in (ref0 . (^ (Workstation <: succ))))) && (begin != end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;(all ref0:(one Workstation)|((! (ref0 in (ref0 . (^ (Workstation <: succ))))) && (end in (begin . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (end . (Workstation <: succ))) && (one begin) && (one end));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));23
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));9
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (no ((Workstation & begin) & end)) && (one (Workstation & begin)) && (one (Workstation & end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv8;(all ref0:(one Component),ref1:(one Human)|(ref1 !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))));1;(all ref0:(one Dangerous),ref1:(one Human)|(ref1 !in ((ref0 . (Component <: workstation)) . (Workstation <: workers))));4
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))) && ((begin . (* (Workstation <: succ))) in Workstation));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv1;(all ref0:(one univ)|(ref0 in (Human + Robot)));1;(all ref0:(one Worker)|(ref0 in (Human + Robot)));2
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 !in (ref1 . (^ (Workstation <: succ))))) && (all ref2:(one Workstation)|(ref2 in (begin . (^ (Workstation <: succ))))) && (no ((Workstation . (Workstation <: succ)) & begin)) && (no (begin & end)) && (no (end . (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|((one (ref0 . (Workstation <: succ))) && (begin !in (ref0 . (Workstation <: succ))))) && (all ref1:(one (Workstation - begin))|(ref1 in (begin . (^ (Workstation <: succ))))) && (no (end . (Workstation <: succ))));23
this/inv9;((all ref0:(one Workstation)|(ref0 in ((^ (Workstation <: succ)) . Workstation))) && (one (Workstation & begin)) && (one (Workstation & end)));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));19
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one Workstation)|((lone (ref2 . (^ (Workstation <: succ)))) && (no (ref1 . (Workstation <: succ))) && ((ref0 . (^ (Workstation <: succ))) in Workstation))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));15
this/inv9;(no ((begin - (end & end)) - begin));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;((all ref0:(one Workstation)|(one (((^ (Workstation <: succ)) . Workstation) & ref0))) && (one (Workstation & begin)) && (one (Workstation & end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv10;(all ref0:(one Product)|(no (ref0 . (Product <: parts))));1;(all ref0:(one Component),ref1:(one ((ref0 . (Product <: parts)) . (Component <: workstation)))|((ref0 . (Component <: workstation)) in (ref1 . (^ (Workstation <: succ)))));11
this/inv9;((all ref0:(one Workstation)|(one ((((^ (Workstation <: succ)) . Workstation) + (Workstation . (^ (Workstation <: succ)))) & ref0))) && (one (Workstation & begin)) && (one (Workstation & end)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));23
this/inv7;(all ref0:(one Component),ref1:(one Dangerous)|(ref0 in (ref1 . (Product <: parts))));1;(((Product <: parts) . Dangerous) in Dangerous);6
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one Workstation)|((lone (ref2 . (Workstation <: succ))) && (no (ref1 . (Workstation <: succ))) && ((ref0 . (^ (Workstation <: succ))) in Workstation))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));14
this/inv9;((all ref0:(one Workstation)|(one ((((^ (Workstation <: succ)) . Workstation) + (Workstation . (^ (Workstation <: succ)))) & ref0))) && (one (Workstation & begin)) && (one (Workstation & end)) && (begin !in (Workstation . (^ (Workstation <: succ)))) && (end !in ((^ (Workstation <: succ)) . Workstation)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))) && (begin !in (Workstation . (Workstation <: succ))));31
this/inv9;((begin . (Workstation <: succ)) = end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));13
this/inv10;(all ref0:(one Product)|(no ((ref0 . (Product <: parts)) & Component)));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));11
this/inv9;((begin . (Workstation <: succ)) in end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));13
this/inv9;(one ref0:(one begin),ref1:(one end)|(all ref2:(one Workstation)|((lone (ref2 . (Workstation <: succ))) && (no (ref1 . (Workstation <: succ))) && ((ref0 . (^ (Workstation <: succ))) in (Workstation - ref0)))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && ((Workstation - begin) in (begin . (^ (Workstation <: succ)))));16
this/inv10;(all ref0:(one Product)|(no (((ref0 . (Product <: parts)) & Component) . (Component <: workstation))));1;(all ref0:(one Component)|(no (((ref0 . (Component <: workstation)) . (* (Workstation <: succ))) & (((ref0 . (Product <: parts)) & Component) . (Component <: workstation)))));9
this/inv9;((begin . (^ (Workstation <: succ))) = end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv9;((begin . (* (Workstation <: succ))) = end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv10;(all ref0:(one Product)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in (((~ (Workstation <: succ)) . ref0) . (Component <: workstation))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));6
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 in (ref1 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in ((ref1 . (Component <: workstation)) . (^ (Workstation <: succ))))));1;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 != ref1) && (ref0 in (ref1 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref3 in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));15
this/inv8;(all ref0:(one Component),ref1:(one Human)|((ref0 in Dangerous) => (no ((ref0 . (Component <: workstation)) & (ref1 . (Component <: workstation))))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));9
this/inv10;(all ref0:(one Product)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (~ (Workstation <: succ))) . (ref0 . (Component <: workstation)))));1;(all ref0:(one Component)|((((ref0 . (Product <: parts)) & Component) . (Component <: workstation)) in ((^ (Workstation <: succ)) . (ref0 . (Component <: workstation)))));3
this/inv10;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 != ref1) && (ref0 in (ref1 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref2 in (ref1 . (Component <: workstation)))));1;(all ref0:(one Component),ref1:(one Component),ref2:(one Workstation),ref3:(one Workstation)|(((ref0 != ref1) && (ref0 in (ref1 . (^ (Product <: parts)))) && (ref2 in (ref0 . (Component <: workstation))) && (ref3 in (ref1 . (Component <: workstation)))) => (ref3 in ((ref0 . (Component <: workstation)) . (^ (Workstation <: succ))))));15
this/inv8;(all ref0:(one Component),ref1:(one Human)|((ref0 in Dangerous) => (no ((ref0 . (Component <: workstation)) & (ref1 . (Workstation <: workers))))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));7
this/inv8;(all ref0:(one Component)|((ref0 in Dangerous) => (all ref1:(one Workstation)|((ref1 in (ref0 . (Component <: workstation))) => (Human !in (ref1 . (Workstation <: workers)))))));1;(all ref0:(one Component),ref1:(one Workstation)|(((ref0 in Dangerous) && (ref1 in (ref0 . (Component <: workstation)))) => ((ref1 . (Workstation <: workers)) !in Human)));8
this/inv7;(all ref0:(one Component)|(some ref1:(one Dangerous)|(((ref1 -> ref0) in (Product <: parts)) => (ref0 in Dangerous))));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));6
this/inv9;(all ref0:(one Workstation)|(one (ref0 & (ref0 . (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv8;(all ref0:(one Component),ref1:(one Worker)|((ref0 in Dangerous) => ((no ((ref0 . (Component <: workstation)) & (ref1 . (Workstation <: workers)))) && (ref1 in Human))));1;(all ref0:(one Component)|((ref0 in Dangerous) => (no (((ref0 . (Component <: workstation)) . (Workstation <: workers)) & Human))));11
this/inv7;(all ref0:(one Component),ref1:(one Product)|((ref1 in (ref0 . (Product <: parts))) => (ref0 in Dangerous)));1;(all ref0:(one Component)|((some ref1:(one Dangerous)|(ref1 in (ref0 . (Product <: parts)))) => (ref0 in Dangerous)));4
this/inv7;(all ref0:(one Component)|(ref0 in ((^ (Product <: parts)) . Dangerous)));1;(((^ (Product <: parts)) . Dangerous) in Dangerous);3
this/inv7;(all ref0:(one Component)|(lone ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)) && (no (begin & end)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv7;(all ref0:(one Component)|(one ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 in Dangerous))));1;(all ref0:(one Component),ref1:(one Dangerous)|(((ref0 -> ref1) in (Product <: parts)) => (ref0 in Dangerous)));4
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv9;(Workstation = (Workstation . (^ (Workstation <: succ))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));14
this/inv8;(all ref0:(one Component),ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (! (some ref2:(one Human)|((ref2 -> ref1) in (Workstation <: workers))))));1;(all ref0:(one Component),ref1:(one Workstation)|((((ref0 -> ref1) in (Component <: workstation)) && (ref0 in Dangerous)) => (! (some ref2:(one Human)|((ref1 -> ref2) in (Workstation <: workers))))));8
this/inv9;(all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (some (ref0 . (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));13
this/inv9;(all ref0:(one Workstation)|((ref0 . (^ (Workstation <: succ))) = Workstation));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));15
this/inv9;(all ref0:(one Workstation)|((one (ref0 . (Workstation <: succ))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref1 !in (ref0 . (^ (Workstation <: succ)))) && (ref1 in (ref0 . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));20
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 -> ref1) in (Workstation <: succ)) => (! (some ref2:(one Workstation)|((ref2 -> ref1) in (Workstation <: succ)))))));1;((all ref0:(one (Workstation - begin))|(ref0 in (Workstation . (Workstation <: succ)))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (no ((^ (Workstation <: succ)) & iden)));27
this/inv9;(all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));10
this/inv9;(all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (Workstation in (ref0 . (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));12
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((ref1 in begin) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));1;((all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 != ref1) && (ref1 in begin)) => (ref0 in (ref1 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));12
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 -> ref1) in (Workstation <: succ)) => (! (some ref2:(one Workstation)|((ref2 -> ref1) in (Workstation <: succ))))))) && (all ref3:(one Workstation),ref4:(one Workstation)|((! disj[ref3,ref4]) || (((! (some ref5:(one Workstation)|((ref5 -> ref3) in (Workstation <: succ)))) && ((ref3 -> ref4) in (Workstation <: succ))) => (ref3 in begin)))));1;((all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref1 in begin) => (ref0 in (ref1 . (^ (Workstation <: succ))))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))) && (all ref3:(one Workstation)|((ref3 !in end) => (one (ref3 . (Workstation <: succ))))));47
this/inv8;(no ((((Component <: workstation) . Dangerous) . (Workstation <: workers)) & Human));1;(no (((Dangerous . (Component <: workstation)) . (Workstation <: workers)) & Human));2
this/inv9;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(ref2 !in (ref2 . (^ (Workstation <: succ))))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));10
this/inv9;(all ref0:(one Workstation)|((ref0 !in end) => (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));18
this/inv9;(all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ))));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(one (ref2 . (Workstation <: succ)))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));8
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation one->one Workstation)) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));12
this/inv9;((all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || (((ref0 -> ref1) in (Workstation <: succ)) => (! (some ref2:(one Workstation)|((ref2 -> ref1) in (Workstation <: succ))))))) && (all ref3:(one Workstation),ref4:(one Workstation)|((! disj[ref3,ref4]) || (((! (some ref5:(one Workstation)|((ref5 -> ref3) in (Workstation <: succ)))) && ((ref3 -> ref4) in (Workstation <: succ))) => (ref3 in begin)))) && (all ref6:(one Workstation),ref7:(one Workstation)|((! disj[ref6,ref7]) || (((! (some ref8:(one Workstation)|((ref7 -> ref8) in (Workstation <: succ)))) && ((ref6 -> ref7) in (Workstation <: succ))) => (ref7 in end)))));1;((all ref0:(one Workstation)|((begin -> ref0) in (* (Workstation <: succ)))) && (all ref1:(one Workstation)|(some ref2:(one Workstation)|(((ref1 -> ref2) in (Workstation <: succ)) || (ref1 in end)))) && (all ref3:(one Workstation),ref4:(one Workstation)|((some ref5:(one Workstation)|(((ref5 -> ref3) in (Workstation <: succ)) && ((ref5 -> ref4) in (Workstation <: succ)))) => (ref3 = ref4))) && (all ref6:(one Workstation)|(! ((end -> ref6) in (Workstation <: succ)))));63
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref0 !in begin) => ((ref0 !in (ref0 . (^ (Workstation <: succ)))) && (ref1 in (ref0 . (Workstation <: succ)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));22
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no ((Workstation <: succ) . begin)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((! disj[ref0,ref1]) || ((ref0 !in (ref0 . (^ (Workstation <: succ)))) && ((ref0 !in begin) => (ref1 in (ref0 . (Workstation <: succ)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));22
this/inv9;(all ref0:(one Workstation)|((ref0 !in (ref0 . (^ (Workstation <: succ)))) && ((ref0 in begin) => (some (ref0 . (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));17
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv9;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))));1;(((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));6
this/inv9;(all ref0:(one Workstation)|(((no (Workstation - ref0)) || (ref0 in end) || (some (ref0 . (Workstation <: succ)))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));18
this/inv9;(all ref0:(one Workstation)|(((no (Workstation - ref0)) || (ref0 in end) || (some (ref0 . (Workstation <: succ)))) && (ref0 !in (ref0 . (^ (Workstation <: succ)))) && ((ref0 . (Workstation <: succ)) !in begin)));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));23
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one (Workstation - begin))|(one ((Workstation <: succ) . ref1))) && (Workstation in (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));7
this/inv9;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && ((Workstation <: succ) in (Workstation lone->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));8
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|(((ref0 !in (ref1 . (Workstation <: succ))) && (ref0 = ref1)) || (((ref0 in begin) && (ref1 in end)) => ((no (ref1 . (Workstation <: succ))) && (ref0 !in ((Workstation <: succ) . Workstation)) && (some (ref0 . (Workstation <: succ)))))));1;((all ref0:(one Workstation)|(ref0 !in (ref0 . (^ (Workstation <: succ))))) && (all ref1:(one (Workstation - end))|(one (ref1 . (Workstation <: succ)))) && (Workstation = (begin . (* (Workstation <: succ)))));33
this/inv9;((all ref0:(one Workstation)|((begin -> ref0) in (* (Workstation <: succ)))) && (all ref1:(one Workstation)|(! ((end -> ref1) in (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv9;((all ref0:(one Workstation)|((begin -> ref0) in (* (Workstation <: succ)))) && (all ref1:(one Workstation)|(some ref2:(one Workstation)|((ref1 -> ref2) in (Workstation <: succ)))) && (all ref3:(one Workstation)|(! ((end -> ref3) in (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));23
this/inv9;((all ref0:(one Workstation)|((begin -> ref0) in (* (Workstation <: succ)))) && (all ref1:(one Workstation)|(some ref2:(one Workstation)|(((ref1 -> ref2) in (Workstation <: succ)) || (ref1 in end)))) && (all ref3:(one Workstation)|(! ((end -> ref3) in (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));27
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((((ref0 != ref1) && (ref0 in begin) && (ref1 in end)) => ((no (ref1 . (Workstation <: succ))) && (ref0 !in ((Workstation <: succ) . Workstation)) && (some (ref0 . (Workstation <: succ))))) || ((ref0 = ref1) => ((no (Workstation - ref0)) && (ref0 !in (ref1 . (Workstation <: succ)))))));1;((all ref0:(one begin),ref1:(one end)|((no (ref1 . (^ (Workstation <: succ)))) && ((Workstation - ref0) in (ref0 . (^ (Workstation <: succ)))))) && (all ref2:(one Workstation)|(lone (ref2 . (Workstation <: succ)))));42
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((((ref0 != ref1) && (ref0 in begin) && (ref1 in end)) => ((no (ref1 . (Workstation <: succ))) && (ref0 !in ((Workstation <: succ) . Workstation)) && (some (ref0 . (Workstation <: succ))))) || ((ref0 = ref1) => ((no (Workstation - ref0)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));39
this/inv9;((begin . ((^ (Workstation <: succ)) - ((^ (Workstation <: succ)) :> end))) = end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation = (begin . (* (Workstation <: succ)))));19
this/inv9;(all ref0:(one Workstation),ref1:(one Workstation)|((((ref0 != ref1) && (ref0 in begin) && (ref1 in end)) => ((no (ref1 . (Workstation <: succ))) && (ref0 !in ((Workstation <: succ) . Workstation)) && (some (ref0 . (Workstation <: succ))))) || ((ref0 = ref1) => ((no (Workstation - (ref0 + ref1))) && ((ref0 + ref1) !in ((ref0 + ref1) . (^ (Workstation <: succ))))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));45
this/inv9;(one ((begin . (^ (Workstation <: succ))) :> end));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));16
this/inv9;(one (((begin . (^ (Workstation <: succ))) :> end) - begin));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(all ref0:(one Workstation)|(((ref0 in begin) || (some ((Workstation <: succ) . ref0))) && ((ref0 in end) || (some (ref0 . (Workstation <: succ)))) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));1;(all ref0:(one Workstation)|(((one ((Workstation <: succ) . ref0)) || (ref0 in begin)) && ((one (ref0 . (Workstation <: succ))) || (ref0 in end)) && (ref0 !in (ref0 . (^ (Workstation <: succ))))));18
this/inv9;(lone (((begin . (^ (Workstation <: succ))) :> end) - begin));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;((lone (((begin . (^ (Workstation <: succ))) :> end) - begin)) && (no (begin & end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));19
this/inv9;((lone (((begin . (^ (Workstation <: succ))) :> end) - begin)) && (no ((Workstation & begin) & end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;((no ((Workstation & begin) & end)) && (one (((begin . (^ (Workstation <: succ))) :> end) - begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));20
this/inv9;((begin != end) => (one (((begin . (^ (Workstation <: succ))) :> end) - begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv9;(all ref0:(one begin),ref1:(one end)|(end in (ref0 . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;((no ((Workstation & begin) & end)) => (one (((begin . (^ (Workstation <: succ))) :> end) - begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));22
this/inv9;(all ref0:(one begin),ref1:(one end)|((ref0 != ref1) && (end in (ref0 . (^ (Workstation <: succ))))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
this/inv9;(((Workstation :> begin) != (Workstation :> end)) => (one (((begin . (^ (Workstation <: succ))) :> end) - begin)));1;(((Workstation <: succ) in (Workstation ->lone Workstation)) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));21
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (some (begin . (^ (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));7
this/inv9;(one ((begin . (^ (Workstation <: succ))) :> (end - begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (some (begin . (* (Workstation <: succ)))));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));5
this/inv9;(lone ((begin . (^ (Workstation <: succ))) :> (end - begin)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));17
this/inv9;(no ((begin . (^ (Workstation <: succ))) :> (Workstation - end)));1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (all ref1:(one Workstation)|(ref1 in (begin . (* (Workstation <: succ))))) && (no (end . (Workstation <: succ))));18
this/inv9;(one ((begin . (^ (Workstation <: succ))) :> (Workstation - begin)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv9;(lone ((begin . (^ (Workstation <: succ))) :> (Workstation - begin)));1;((all ref0:(one Workstation)|(lone (ref0 . (Workstation <: succ)))) && (no (end . (^ (Workstation <: succ)))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv9;((begin . (^ (Workstation <: succ))) in end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));14
this/inv9;(((begin . (^ (Workstation <: succ))) - begin) in end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));16
this/inv9;(((begin . (^ (Workstation <: succ))) - (Workstation - end)) in end);1;((all ref0:(one (Workstation - end))|(one (ref0 . (Workstation <: succ)))) && (no (end . (Workstation <: succ))) && (Workstation in (begin . (* (Workstation <: succ)))));18
