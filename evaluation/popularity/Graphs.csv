predicate;formula;frequency;closest_solution;solution_distance
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (^ (Node <: adj)))));18;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/stonglyConnected;(all ref0:(one Node)|(Node in (ref0 . (^ (Node <: adj)))));17;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));4
this/noLoops;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));15;(all ref0:(one Node)|(ref0 !in (ref0 . (Node <: adj))));3
this/undirected;(all ref0:(one Node)|(ref0 in ((ref0 . (Node <: adj)) . (~ (Node <: adj)))));14;((Node <: adj) in (~ (Node <: adj)));5
this/stonglyConnected;(Node in (Node . (^ (Node <: adj))));12;((Node -> Node) in (* (Node <: adj)));4
this/noLoops;(no ((^ (Node <: adj)) & iden));12;(no ((Node <: adj) & iden));1
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))));12;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));4
this/undirected;(((Node <: adj) . (~ (Node <: adj))) in iden);12;((Node <: adj) in (~ (Node <: adj)));2
this/complete;(all ref0:(one Node)|(Node in (ref0 . (^ (Node <: adj)))));11;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));3
this/stonglyConnected;(all ref0:(one Node)|((ref0 . (^ (Node <: adj))) = Node));10;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));4
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));10;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in (((* (Node <: adj)) . ref0) + (ref0 . (* (Node <: adj))))));10;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));8
this/complete;(all ref0:(one Node)|((ref0 . (Node <: adj)) = (Node - ref0)));9;(all ref0:(one Node)|((ref0 . (Node <: adj)) = Node));4
this/complete;(all ref0:(one Node)|((Node - ref0) in (ref0 . (Node <: adj))));9;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));4
this/noLoops;(all ref0:(one Node)|(ref0 != (ref0 . (Node <: adj))));8;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));4
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));8;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) && (ref1 in (ref0 . (^ (Node <: adj))))));8;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));6
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (* (~ (Node <: adj)))))));8;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));7
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) && (ref1 in (ref0 . (^ (Node <: adj))))));8;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));16
this/complete;(all ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));7;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));5
this/undirected;(no (Node <: adj));7;(no ((Node <: adj) - (~ (Node <: adj))));3
this/oriented;((Node <: adj) != (~ (Node <: adj)));7;(no ((Node <: adj) & (~ (Node <: adj))));3
this/weaklyConnected;(all ref0:(one Node)|((ref0 + ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))) = Node));7;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));9
this/acyclic;(all ref0:(one Node)|(ref0 !in (ref0 . (Node <: adj))));7;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));3
this/weaklyConnected;(all ref0:(one Node)|(((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj))))) = Node));7;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));7
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj)))) || (ref1 in (ref0 . (^ (Node <: adj))))));7;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));20
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (Node <: adj)) . ref0) + (ref0 . (^ (Node <: adj))))));6;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));8
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) <=> (ref0 = (ref1 . (Node <: adj)))));6;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));11
this/complete;(all ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));6;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));3
this/complete;(all ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));6;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));4
this/noLoops;(all ref0:(one Node)|(ref0 !in (ref0 . (* (Node <: adj)))));6;(all ref0:(one Node)|(ref0 !in (ref0 . (Node <: adj))));3
this/oriented;(((Node <: adj) & (~ (Node <: adj))) in iden);6;(no ((Node <: adj) & (~ (Node <: adj))));3
this/weaklyConnected;(Node in (Node . (^ (Node <: adj))));6;(((Node -> Node) - iden) in (^ ((Node <: adj) + (~ (Node <: adj)))));7
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (~ (* (Node <: adj)))))));6;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 in (ref1 . (Node <: adj))) || (ref0 in (ref1 . (~ (Node <: adj))))) && ((ref1 in (ref0 . (Node <: adj))) || (ref1 in (ref0 . (~ (Node <: adj)))))));6;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));26
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in (ref0 . (^ (Node <: adj)))));5;(all ref0:(one Node)|((Node - ref0) in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))));5
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (((ref0 . (Node <: adj)) = ref1) <=> (ref0 = (ref1 . (Node <: adj))))));5;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))));12
this/complete;(all ref0:(one Node)|(ref0 in (ref0 . (* (Node <: adj)))));5;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));5
this/undirected;(all ref0:(one Node)|(ref0 = ((ref0 . (Node <: adj)) . (Node <: adj))));5;((Node <: adj) = (~ (Node <: adj)));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) || (ref1 in (ref0 . (^ (Node <: adj))))));5;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));16
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (^ (Node <: adj)))));5;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* (Node <: adj)))));6
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + ((~ (* (Node <: adj))) . ref0))));5;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));10
this/weaklyConnected;(all ref0:(one Node)|(Node in (((* (~ (Node <: adj))) . ref0) + (ref0 . (* (Node <: adj))))));5;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));9
this/oriented;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref1) !in (Node <: adj))));5;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) !in (Node <: adj))));6
this/acyclic;(iden !in (^ (Node <: adj)));5;(iden = (iden - (^ (Node <: adj))));4
this/oriented;(no (Node <: adj));4;(no ((Node <: adj) & (~ (Node <: adj))));3
this/complete;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (^ (Node <: adj)))));4;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));5
this/noLoops;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));4;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));3
this/undirected;(((~ (Node <: adj)) . (Node <: adj)) in iden);4;((Node <: adj) in (~ (Node <: adj)));4
this/oriented;(no (((Node <: adj) . (~ (Node <: adj))) & iden));4;(no (((Node <: adj) . (Node <: adj)) & iden));1
this/weaklyConnected;(all ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));4;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/complete;(all ref0:(one Node)|((Node - ref0) in (ref0 . (^ (Node <: adj)))));4;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . ((Node <: adj) + (~ (Node <: adj))))));4;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));3
this/weaklyConnected;(all ref0:(one Node)|(Node in (((Node <: adj) . ref0) + (ref0 . (Node <: adj)))));4;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));8
this/weaklyConnected;((^ (Node <: adj)) = (Node -> Node));4;(graph/weaklyConnected[(Node <: adj)]);7
this/weaklyConnected;(all ref0:(one Node)|((ref0 . (^ (Node <: adj))) = Node));4;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));7
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* (Node <: adj)))));4;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/stonglyConnected;(all ref0:(one Node)|((some (Node <: adj)) && (Node in (ref0 . (^ (Node <: adj))))));4;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));7
this/weaklyConnected;(all ref0:(one Node)|((ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))) = Node));4;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));4
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));4;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));6
this/oriented;(all ref0:(one Node)|((ref0 . (Node <: adj)) !in ((Node <: adj) . ref0)));4;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ (Node <: adj))))));4;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (Node <: adj)) . ref0) + (ref0 . (* (Node <: adj))))));4;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));8
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (Node <: adj)));4;(graph/weaklyConnected[(Node <: adj)]);8
this/oriented;(no ((Node <: adj) + (~ (Node <: adj))));4;(no ((Node <: adj) & (~ (Node <: adj))));2
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref0 = (ref1 . (Node <: adj)))));4;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/complete;(all ref0:(one Node)|((ref0 . (^ (Node <: adj))) = Node));4;(all ref0:(one Node)|((ref0 . (Node <: adj)) = Node));3
this/oriented;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) => (ref0 = ref1)));4;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)))));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj))))));4;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) !in (Node <: adj))));4;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));12
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj)))) || (ref1 in (ref0 . (^ (Node <: adj))))));4;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));12
this/oriented;(! ((Node <: adj) = (~ (Node <: adj))));4;((Node <: adj) = ((Node <: adj) - (~ (Node <: adj))));3
this/oriented;((Node <: adj) !in (~ (Node <: adj)));4;(no ((Node <: adj) & (~ (Node <: adj))));3
this/stonglyConnected;(all ref0:(one Node)|(Node in ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));4;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ (Node <: adj))))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (^ (Node <: adj)))));4;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));9
this/undirected;(no ((Node <: adj) & (~ (Node <: adj))));4;(no ((Node <: adj) - (~ (Node <: adj))));2
this/noLoops;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj)))));4;(all ref0:(one Node)|(! ((ref0 -> ref0) in (Node <: adj))));11
this/undirected;(all ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));4;(all ref0:(one Node)|(((Node <: adj) . ref0) in (ref0 . (Node <: adj))));5
this/weaklyConnected;(Node in (((Node <: adj) . Node) + (Node . (Node <: adj))));4;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));8
this/oriented;(! (all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj)))));3;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(! (ref0 in (ref1 . (Node <: adj)))));4
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj))))));3;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));10
this/complete;(all ref0:(one Node)|(ref0 in (Node . (Node <: adj))));3;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));5
this/noLoops;(all ref0:(one Node)|(no (ref0 -> ref0)));3;(all ref0:(one Node)|((ref0 -> ref0) !in (Node <: adj)));5
this/undirected;(all ref0:(one Node)|(ref0 in (ref0 . (* (Node <: adj)))));3;(all ref0:(one Node)|(((Node <: adj) . ref0) in (ref0 . (Node <: adj))));5
this/oriented;(all ref0:(one Node)|(((Node <: adj) . ref0) != (ref0 . (Node <: adj))));3;(all ref0:(one Node)|(no (((Node <: adj) . ref0) & (ref0 . (Node <: adj)))));5
this/weaklyConnected;((^ ((Node <: adj) + (~ (Node <: adj)))) = (Node -> Node));3;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));7
this/weaklyConnected;(all ref0:(one Node)|(((((^ (Node <: adj)) . ref0) :> Node) + ((ref0 . (^ (Node <: adj))) :> Node)) = Node));3;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));12
this/undirected;((Node <: adj) = (Node <: adj));3;((Node <: adj) = (~ (Node <: adj)));1
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) || ((ref1 -> ref0) in (Node <: adj))));3;(graph/weaklyConnected[(Node <: adj)]);14
this/undirected;(all ref0:(one Node)|(some ((Node <: adj) . ref0)));3;(graph/undirected[(Node <: adj)]);6
this/complete;(Node in (Node . (^ (Node <: adj))));3;((Node -> Node) in (Node <: adj));3
this/complete;(Node = (Node . (^ (Node <: adj))));3;((Node <: adj) = (Node -> Node));5
this/complete;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (^ (Node <: adj)))));3;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (~ (Node <: adj))) . ref0) + (ref0 . (^ (Node <: adj))))));3;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))));3;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));6
this/weaklyConnected;(all ref0:(one Node)|((ref0 . ((Node <: adj) + (~ (Node <: adj)))) = Node));3;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));3
this/undirected;(all ref0:(one Node)|(no (ref0 . (Node <: adj))));3;(no ((Node <: adj) - (~ (Node <: adj))));6
this/noLoops;(all ref0:(one Node)|(no (ref0 . (^ (Node <: adj)))));3;(no ((Node <: adj) & iden));6
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + (~ (Node <: adj))))));3;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));4
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) in ref1) <=> ((ref1 . (Node <: adj)) in ref0)));3;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/acyclic;(no (Node . (* (Node <: adj))));3;(graph/dag[(Node <: adj)]);6
this/oriented;(no (~ (Node <: adj)));3;(no ((Node <: adj) & (~ (Node <: adj))));2
this/weaklyConnected;((* ((Node <: adj) + (~ (Node <: adj)))) = (Node -> Node));3;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));5
this/stonglyConnected;((* (Node <: adj)) = (Node -> Node));3;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (^ (Node <: adj)))) && (ref1 in (ref0 . (^ (Node <: adj)))))));3;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));21
this/weaklyConnected;(Node in (Node . (* (Node <: adj))));3;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));5
this/weaklyConnected;(((^ (Node <: adj)) + (^ (~ (Node <: adj)))) = (Node -> Node));3;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));8
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some (((^ (Node <: adj)) . ref1) & ref0)));3;(graph/weaklyConnected[(Node <: adj)]);10
this/complete;(all ref0:(one Node)|(some ((Node <: adj) . ref0)));3;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));7
this/weaklyConnected;(some ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));3;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/oriented;(((Node <: adj) . (~ (Node <: adj))) in iden);2;(no (((Node <: adj) . (Node <: adj)) & iden));4
this/undirected;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (~ (Node <: adj)))));2;((Node <: adj) in (~ (Node <: adj)));7
this/acyclic;(all ref0:(one Node)|(no (ref0 . (* (Node <: adj)))));2;(all ref0:(one Node)|(no (ref0 & (ref0 . (^ (Node <: adj))))));6
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (* (Node <: adj)))) && (ref1 in (ref0 . (* (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));6
this/acyclic;(all ref0:(one Node)|(no (ref0 & (ref0 . (* (Node <: adj))))));2;(all ref0:(one Node)|(no (ref0 & (ref0 . (^ (Node <: adj))))));4
this/oriented;((! (all ref2:(one Node),ref3:(one (ref2 . (Node <: adj)))|(ref2 in (ref3 . (Node <: adj))))) && (no ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj)))));2;(no ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));13
this/acyclic;(all ref0:(one Node)|(no (ref0 . (^ (Node <: adj)))));2;(all ref0:(one Node)|(no (ref0 & (ref0 . (^ (Node <: adj))))));4
this/complete;((Node <: adj) = ((Node -> Node) - iden));2;((Node <: adj) = (Node -> Node));2
this/noLoops;(no ref0:(one Node)|(ref0 in (ref0 . (* (Node <: adj)))));2;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));3
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (* (Node <: adj)))) || (ref1 in (ref0 . (* (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/oriented;(no ((Node <: adj) - (~ (Node <: adj))));2;(no ((Node <: adj) & (~ (Node <: adj))));2
this/oriented;(no (((Node <: adj) - (~ (Node <: adj))) - iden));2;(no ((Node <: adj) & (~ (Node <: adj))));4
this/weaklyConnected;(all ref0:(one Node)|(ref0 in (ref0 . (* (Node <: adj)))));2;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj)))));2;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(ref2 !in (ref2 . (^ (Node <: adj))))));12
this/undirected;(all ref0:(one Node)|(ref0 in (ref0 . (~ (Node <: adj)))));2;((Node <: adj) in (~ (Node <: adj)));5
this/stonglyConnected;((Node <: adj) = (Node -> Node));2;((Node -> Node) in (* (Node <: adj)));5
this/undirected;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in ref1));2;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 + ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj))))))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/stonglyConnected;(Node in ((^ (Node <: adj)) . Node));2;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* (Node <: adj)))));2;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/weaklyConnected;((^ (Node <: adj)) = ((Node -> Node) - iden));2;(((Node -> Node) - iden) in (^ ((Node <: adj) + (~ (Node <: adj)))));9
this/weaklyConnected;(all ref0:(one Node)|(ref0 in (Node . (Node <: adj))));2;(graph/weaklyConnected[(Node <: adj)]);7
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/weaklyConnected;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));2;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));5
this/acyclic;(all ref0:(one Node)|(ref0 !in (ref0 . (~ (Node <: adj)))));2;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));4
this/weaklyConnected;((Node -> Node) in (* ((Node <: adj) & (~ (Node <: adj)))));2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));2
this/weaklyConnected;(all ref0:(one Node)|((ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))) = (Node - ref0)));2;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));6
this/stonglyConnected;(all ref0:(one Node)|(((ref0 . (^ (Node <: adj))) :> Node) = Node));2;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));6
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (ref0 -> (ref0 . (* (Node <: adj)))))));2;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));9
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (ref0 -> ((ref0 . (* (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));11
this/stonglyConnected;(all ref0:(one Node)|((some (ref0 . (Node <: adj))) && (Node in (ref0 . (^ (Node <: adj))))));2;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));9
this/oriented;(all ref0:(one Node)|(no ((Node <: adj) . ref0)));2;(no (((Node <: adj) . (Node <: adj)) & iden));5
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (((ref0 . (Node <: adj)) = ref1) => (ref0 = (ref1 . (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))));10
this/noLoops;(all ref0:(one Node)|((ref0 -> ref0) in (Node <: adj)));2;(no ref0:(one Node)|((ref0 -> ref0) in (Node <: adj)));2
this/undirected;(no ((Node <: adj) & (Node <: adj)));2;(no ((Node <: adj) - (~ (Node <: adj))));3
this/noLoops;(((Node <: adj) . (~ (Node <: adj))) !in iden);2;(no ((Node <: adj) & iden));6
this/oriented;(all ref0:(one Node)|(! ((ref0 . (Node <: adj)) in ((Node <: adj) . ref0))));2;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(! (ref0 in (ref1 . (Node <: adj)))));7
this/weaklyConnected;(Node = (Node . ((Node <: adj) + (~ (Node <: adj)))));2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));5
this/acyclic;(all ref0:(one Node)|(ref0 !in (ref0 . (* (Node <: adj)))));2;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));4
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ((ref0 . (* (Node <: adj))) & (ref1 . (* (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));13
this/acyclic;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));2;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));5
this/oriented;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj)))));9
this/complete;(all ref0:(one Node)|((ref0 . (^ (Node <: adj))) = (Node - ref0)));2;(all ref0:(one Node)|((ref0 . (Node <: adj)) = Node));5
this/weaklyConnected;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj)))) && (all ref2:(one Node)|(Node in (ref2 . (* (Node <: adj))))));2;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));21
this/acyclic;((* (Node <: adj)) !in iden);2;(graph/dag[(Node <: adj)]);5
this/complete;(all ref0:(one Node)|(ref0 in ((Node <: adj) . ref0)));2;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));5
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) || (ref1 in (ref0 . (^ (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));8
this/acyclic;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));2;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));3
this/acyclic;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref2) in (Node <: adj))) => (ref0 = ref2)));2;(graph/dag[(Node <: adj)]);19
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + (^ (~ (Node <: adj)))))));2;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/acyclic;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) => (! (ref0 = (ref0 & ref1)))));2;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(ref2 !in (ref2 . (^ (Node <: adj))))));20
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) !in (Node <: adj))));2;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj))));6
this/weaklyConnected;(Node in ((Node . (^ (Node <: adj))) + (Node . (^ (~ (Node <: adj))))));2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));9
this/weaklyConnected;(Node = ((Node . (^ (Node <: adj))) + (Node . (^ (~ (Node <: adj))))));2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));11
this/acyclic;(all ref0:(one Node)|(ref0 != (ref0 . (Node <: adj))));2;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));5
this/acyclic;(no ((Node <: adj) & iden));2;(no ((^ (Node <: adj)) & iden));1
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((Node <: adj) . ref0) + (ref0 . (Node <: adj))) + ref0)));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (Node <: adj)) + ((~ (Node <: adj)) . ref0))));2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));8
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 + ((ref0 . (Node <: adj)) + ((~ (Node <: adj)) . ref0)))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) in ref1) => ((ref1 . (Node <: adj)) in ref0)));2;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));8
this/acyclic;(no (Node . (^ (Node <: adj))));2;(no ((^ (Node <: adj)) & iden));4
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in ((Node <: adj) . ref1))));2;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));11
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (((ref0 . (Node <: adj)) in ref1) => ((ref1 . (Node <: adj)) in ref0))));2;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))));8
this/undirected;(some (((Node <: adj) . (Node <: adj)) & iden));2;((Node <: adj) in (~ (Node <: adj)));6
this/undirected;(iden in ((Node <: adj) . (Node <: adj)));2;((Node <: adj) in (~ (Node <: adj)));3
this/oriented;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (Node <: adj))) <=> (ref1 !in (ref0 . (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj)))));11
this/undirected;(all ref0:(one Node)|(ref0 in ((ref0 . (Node <: adj)) . (Node <: adj))));2;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));6
this/undirected;(iden in ((Node <: adj) . (~ (Node <: adj))));2;((Node <: adj) in (~ (Node <: adj)));2
this/undirected;((Node <: adj) in ((Node <: adj) . (Node <: adj)));2;((Node <: adj) in (~ (Node <: adj)));3
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (Node <: adj)) . ref0) + (ref0 + (ref0 . (^ (Node <: adj)))))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/undirected;(Node in Node);2;(graph/undirected[(Node <: adj)]);4
this/oriented;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) <=> ((ref1 -> ref0) !in (Node <: adj))));2;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) !in (Node <: adj))));6
this/undirected;(lone Node);2;(graph/undirected[(Node <: adj)]);3
this/undirected;(all ref0:(one Node)|(((ref0 !in (ref0 . (Node <: adj))) && (ref0 in ((ref0 . (Node <: adj)) . (Node <: adj)))) || (no (ref0 . (Node <: adj)))));2;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));17
this/complete;((Node . (^ (Node <: adj))) in Node);2;((Node -> Node) in (Node <: adj));5
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref1 !in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (^ (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));9
this/weaklyConnected;(all ref0:(one Node)|((some (ref0 . (Node <: adj))) || (some (ref0 . (~ (Node <: adj))))));2;(graph/weaklyConnected[(Node <: adj)]);12
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (^ (Node <: adj)))));2;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));9
this/undirected;(((Node <: adj) . (~ (Node <: adj))) = iden);2;((Node <: adj) = (~ (Node <: adj)));2
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (Node <: adj))) <=> (ref1 in (ref0 . (Node <: adj))))));6
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref1 = (ref1 . (Node <: adj)))));2;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));11
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (((* (Node <: adj)) . ref0) + (ref0 . (* (Node <: adj))))));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));11
this/complete;(all ref0:(one Node)|(some (ref0 . (Node <: adj))));2;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (* (Node <: adj)))) && (ref1 in (ref0 . (* (Node <: adj))))));2;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/acyclic;(! (iden in (^ (Node <: adj))));2;(all ref0:(one Node)|(! (ref0 in (ref0 . (^ (Node <: adj))))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((^ (Node <: adj)) . ref0) + (ref0 . (^ (Node <: adj)))) - ref0)));2;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/acyclic;(iden !in ((* (Node <: adj)) - (Node <: adj)));2;(iden = (iden - (^ (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* (Node <: adj)))));2;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/undirected;(some ((Node <: adj) & (~ (Node <: adj))));2;((Node <: adj) in (~ (Node <: adj)));3
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((^ (Node <: adj)) . ref0) in ((^ (Node <: adj)) . ref1)));2;(graph/weaklyConnected[(Node <: adj)]);12
this/undirected;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) => (ref0 in ((ref0 . (Node <: adj)) . (Node <: adj)))));2;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));9
this/weaklyConnected;((Node . (^ (Node <: adj))) in Node);2;(graph/weaklyConnected[(Node <: adj)]);7
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in ((^ (Node <: adj)) . ref1)) && (ref1 in ((^ (Node <: adj)) . ref0))));2;(graph/weaklyConnected[(Node <: adj)]);16
this/weaklyConnected;(all ref0:(one Node)|((ref0 -> (ref0 . (^ (Node <: adj)))) in (Node -> Node)));2;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));11
this/weaklyConnected;((Node . (* (Node <: adj))) in Node);2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));7
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (* (Node <: adj)))) => (ref1 in (ref0 . (* (Node <: adj)))))));2;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));13
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) in ref1) <=> (ref0 in (ref1 . (Node <: adj)))));2;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));8
this/weaklyConnected;(((* (Node <: adj)) + (* (~ (Node <: adj)))) = (Node -> Node));2;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));8
this/oriented;(some Node);2;(no ((Node <: adj) & (~ (Node <: adj))));7
this/weaklyConnected;((some (Node <: adj)) && (Node in (((Node <: adj) . Node) + (Node . (Node <: adj)))));2;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));11
this/undirected;(all ref0:(one Node),ref1:(one Node)|((ref1 -> ref0) in (Node <: adj)));1;((Node <: adj) in (~ (Node <: adj)));7
this/undirected;((some (Node . (Node <: adj))) => (some ((Node <: adj) . Node)));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));9
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in ((ref1 . (Node <: adj)) . (~ (Node <: adj))))));1;((Node <: adj) in (~ (Node <: adj)));11
this/oriented;(all ref0:(one Node)|(ref0 in ((ref0 . (Node <: adj)) . (~ (Node <: adj)))));1;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));5
this/noLoops;(no (iden & (Node <: (^ (Node <: adj)))));1;(no ((Node <: adj) & iden));5
this/oriented;((Node <: adj) = (~ (Node <: adj)));1;((Node <: adj) = ((Node <: adj) - (~ (Node <: adj))));2
this/noLoops;(no ((* (Node <: adj)) & iden));1;(no ((Node <: adj) & iden));1
this/undirected;(all ref0:(one Node)|(ref0 = (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(((Node <: adj) . ref0) = (ref0 . (Node <: adj))));4
this/undirected;((all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj)))) && (no (Node <: adj)));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));7
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));10
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref1 in (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (Node <: adj))));10
this/undirected;(all ref0:(one Node)|((none != (ref0 . (Node <: adj))) && (ref0 = ((ref0 . (Node <: adj)) . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));12
this/noLoops;(all ref0:(one Node)|((ref0 . (integer/next[])) !in ref0));1;(all ref0:(one Node)|((ref0 -> ref0) !in (Node <: adj)));6
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (* (Node <: adj)))) && (ref1 in (ref0 . (* (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));11
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref1 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (Node <: adj))));10
this/stonglyConnected;(all ref0:(one Node)|(ref0 in (ref0 . (~ (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ (Node <: adj))))));6
this/stonglyConnected;(all ref0:(one Node)|(Node in (ref0 . (~ (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));4
this/noLoops;(all ref0:(one Node)|(no (((^ (Node <: adj)) . ref0) & (ref0 . (^ (Node <: adj))))));1;(no ((Node <: adj) & iden));9
this/undirected;(all ref0:(one Node)|(some (ref0 & ((ref0 . (Node <: adj)) . (~ (Node <: adj))))));1;((Node <: adj) in (~ (Node <: adj)));8
this/undirected;(all ref0:(one Node)|(lone (ref0 & ((ref0 . (Node <: adj)) . (~ (Node <: adj))))));1;((Node <: adj) in (~ (Node <: adj)));8
this/undirected;(all ref0:(one Node)|(Node in (ref0 . (^ (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));7
this/acyclic;(all ref0:(one Node)|(no ((ref0 . (Node <: adj)) . (* (Node <: adj)))));1;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (* (Node <: adj)))));5
this/undirected;(all ref0:(one Node)|(ref0 !in (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(((Node <: adj) . ref0) = (ref0 . (Node <: adj))));6
this/undirected;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (Node <: adj)));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (((Node <: adj) . ref0) + (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));11
this/undirected;(all ref0:(one Node)|(ref0 != (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(((Node <: adj) . ref0) = (ref0 . (Node <: adj))));6
this/oriented;(relation/antisymmetric[(Node <: adj)]);1;(no ((Node <: adj) & (~ (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));1;(graph/weaklyConnected[(Node <: adj)]);7
this/oriented;(relation/irreflexive[(Node <: adj)]);1;(no ((Node <: adj) & (~ (Node <: adj))));6
this/undirected;(no ((Node <: adj) & iden));1;(no ((Node <: adj) - (~ (Node <: adj))));5
this/oriented;(no ((Node <: adj) - ((~ (Node <: adj)) - iden)));1;(no ((Node <: adj) & (~ (Node <: adj))));4
this/complete;((Node <: adj) in (Node -> Node));1;((Node <: adj) = (Node -> Node));2
this/undirected;(no ((^ (Node <: adj)) & iden));1;(no ((Node <: adj) - (~ (Node <: adj))));6
this/undirected;(all ref0:(one Node)|(ref0 in (Node . (Node <: adj))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));5
this/acyclic;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(no (ref2 . (Node <: adj)))));1;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(ref2 !in (ref2 . (^ (Node <: adj))))));10
this/oriented;(((Node <: adj) & (~ (Node <: adj))) = iden);1;(no ((Node <: adj) & (~ (Node <: adj))));3
this/weaklyConnected;(all ref0:(one Node)|(some (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/undirected;(all ref0:(one Node)|((ref0 in ((Node <: adj) . Node)) || (ref0 in (Node . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj)))));11
this/undirected;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (! (ref1 in (ref0 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj)))));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (((Node <: adj) . ref1) + (ref1 . (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));11
this/undirected;(all ref0:(one Node)|((ref0 in (Node . (Node <: adj))) || (ref0 in (Node . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj)))));12
this/stonglyConnected;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));3
this/noLoops;(all ref0:(one Node),ref1:(one Node)|((! ((ref0 in (ref1 . (^ (Node <: adj)))) && (ref1 in (ref0 . (Node <: adj))))) || (! disj[ref0,ref1])));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref0 != ref1)));17
this/noLoops;(all ref0:(one Node),ref1:(one Node)|(! ((ref0 in (ref1 . (^ (Node <: adj)))) && (ref1 in (ref0 . (Node <: adj))))));1;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));13
this/oriented;(all ref0:(one Node)|(some ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 !in (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 !in (ref1 . (Node <: adj)))));4
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in ((ref0 . (Node <: adj)) . (* (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));9
this/acyclic;(no (iden & (~ (Node <: adj))));1;(no ((^ (Node <: adj)) & iden));4
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in (ref0 . ((Node <: adj) + (~ (Node <: adj))))));1;(all ref0:(one Node)|((Node - ref0) in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))));3
this/oriented;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(! (ref0 in ref1)));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(! (ref0 in (ref1 . (Node <: adj)))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in ((ref1 . (Node <: adj)) . (* (Node <: adj)))) && (ref1 in ((ref0 . (Node <: adj)) . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));18
this/oriented;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in ((Node <: adj) . ref0))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj)))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . ((Node <: adj) + (~ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((Node <: adj) . ref0) + (ref0 . (Node <: adj))) . (Node <: adj))));1;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));10
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . ((Node <: adj) + (~ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));10
this/stonglyConnected;(all ref0:(one Node)|(((ref0 -> ref0) in (Node <: adj)) && (Node in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));10
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));8
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((Node <: adj) . ref0) + (ref0 . (Node <: adj))) . (^ (Node <: adj)))));1;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));11
this/stonglyConnected;(all ref0:(one Node)|((iden in (Node <: adj)) && (Node in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));8
this/weaklyConnected;(((Node -> Node) - iden) in (^ (Node <: adj)));1;(((Node -> Node) - iden) in (^ ((Node <: adj) + (~ (Node <: adj)))));3
this/oriented;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));1;(no ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));4
this/acyclic;(all ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));1;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));2
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((Node <: adj) . ref0) + (ref0 . (Node <: adj))) . (* (Node <: adj)))));1;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));9
this/stonglyConnected;(Node in ((* (Node <: adj)) . Node));1;(all ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));3
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((Node <: adj) . ref0) + (ref0 + (ref0 . (Node <: adj)))) . (* (Node <: adj)))));1;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/stonglyConnected;((^ ((Node <: adj) + (~ (Node <: adj)))) = (Node -> Node));1;((Node -> Node) in (* (Node <: adj)));9
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (Node <: adj)) . (* (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/weaklyConnected;(all ref0:(one Node)|(((ref0 . (^ (Node <: adj))) & (ref0 . (^ (~ (Node <: adj))))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));9
this/complete;(all ref0:(one Node),ref1:(one Node)|(((ref0 in (ref1 . (Node <: adj))) || (ref0 in (ref1 . (^ (Node <: adj))))) && ((ref1 in (ref0 . (Node <: adj))) || (ref1 in (ref0 . (^ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));18
this/acyclic;(some ref0:(one Node)|(no (((Node <: adj) . ref0) & (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|(no (ref0 & (ref0 . (^ (Node <: adj))))));5
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((^ (Node <: adj)) . ref0) + (ref0 . (^ (Node <: adj)))) + ref0)));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/weaklyConnected;(all ref0:(one Node)|(((^ (Node <: adj)) . ref0) = Node));1;(graph/weaklyConnected[(Node <: adj)]);8
this/noLoops;(Node !in (Node . (Node <: adj)));1;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));5
this/acyclic;(some ref0:(one Node),ref1:(one Node)|((ref0 -> ref0) in (Node <: adj)));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));6
this/noLoops;(all ref0:(one Node)|(! (ref0 in (ref0 . (^ (Node <: adj))))));1;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));4
this/weaklyConnected;(all ref0:(one Node)|(((* (Node <: adj)) . ref0) = Node));1;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));7
this/acyclic;(some ref0:(one Node)|((ref0 -> ref0) in (Node <: adj)));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ref2:(one Node)|(ref0 in ((ref2 . (^ (Node <: adj))) + ((~ (~ (Node <: adj))) . ref1)))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));13
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));5
this/weaklyConnected;(all ref0:(one Node)|((((^ (Node <: adj)) . ref0) + ((^ (~ (Node <: adj))) . ref0)) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));9
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 & (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ref2:(one Node)|(ref0 in ((ref2 . (* (Node <: adj))) + ((~ (~ (Node <: adj))) . ref1)))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));13
this/oriented;(((~ (Node <: adj)) . (Node <: adj)) in iden);1;(no (((Node <: adj) . (Node <: adj)) & iden));4
this/undirected;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) => (ref0 = ref1)));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj))));8
this/weaklyConnected;(all ref0:(one Node)|(some ((ref0 . (* (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));10
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 & (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) <=> ((ref1 -> ref0) in (Node <: adj))));1;(graph/weaklyConnected[(Node <: adj)]);14
this/weaklyConnected;(all ref0:(one Node)|(some (ref0 -> ((ref0 . (* (Node <: adj))) + (ref0 . (^ (~ (Node <: adj))))))));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));12
this/weaklyConnected;((all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))) && (all ref2:(one Node)|(Node in (ref2 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));22
this/weaklyConnected;(all ref0:(one Node)|(some (ref0 . (ref0 -> ((ref0 . (* (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))))));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));14
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (Node <: adj)) . ref0) & (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));10
this/weaklyConnected;(all ref0:(one Node)|((Node in (ref0 . (Node <: adj))) || (Node in (ref0 . (^ (Node <: adj))))));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));12
this/undirected;(no ((Node <: adj) . (Node <: adj)));1;(no ((Node <: adj) - (~ (Node <: adj))));3
this/undirected;(all ref0:(one Node)|(no ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref0 = (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/undirected;(((Node <: adj) . Node) = (Node . (Node <: adj)));1;((Node <: adj) = (~ (Node <: adj)));5
this/acyclic;(Node !in (Node . (Node <: adj)));1;(graph/dag[(Node <: adj)]);6
this/oriented;(all ref0:(one Node)|(no (((Node <: adj) . Node) & (Node . (Node <: adj)))));1;(no ((Node <: adj) & (~ (Node <: adj))));6
this/undirected;(some ((Node <: adj) . (Node <: adj)));1;((Node <: adj) in (~ (Node <: adj)));4
this/oriented;(some ref0:(one Node)|(no ((Node <: adj) . ref0)));1;(no (((Node <: adj) . (Node <: adj)) & iden));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (^ (Node <: adj))));1;(graph/weaklyConnected[(Node <: adj)]);9
this/acyclic;(Node !in (Node . (^ (Node <: adj))));1;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));5
this/stonglyConnected;(all ref0:(one Node)|(Node in ((^ (Node <: adj)) . ref0)));1;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));6
this/weaklyConnected;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) && (some (Node <: adj)));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (Node <: adj)) . ref0) & (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/oriented;(all ref0:(one Node)|(no ((Node <: adj) :> ref0)));1;(no ((Node <: adj) & (~ (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node)|((ref0 in ((Node <: adj) . ref0)) || (ref0 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));13
this/oriented;(all ref0:(one Node)|(((Node <: adj) :> ref0) != (ref0 <: (Node <: adj))));1;(no ((Node <: adj) & (~ (Node <: adj))));9
this/oriented;(all ref0:(one Node)|(((Node <: adj) . ref0) !in (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(no (((Node <: adj) . ref0) & (ref0 . (Node <: adj)))));5
this/undirected;((((Node <: adj) . (~ (Node <: adj))) in iden) && (((~ (Node <: adj)) . (Node <: adj)) in iden));1;(((Node <: adj) in (~ (Node <: adj))) && ((~ (Node <: adj)) in (Node <: adj)));4
this/weaklyConnected;(all ref0:(one Node)|((ref0 in (ref0 . (^ (Node <: adj)))) || (ref0 in (Node . (^ (Node <: adj))))));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));13
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(Node in ((ref0 <: (^ (Node <: adj))) . ref1)));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/oriented;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 !in (ref1 . (Node <: adj))));5
this/undirected;((iden in ((Node <: adj) . (~ (Node <: adj)))) && (((~ (Node <: adj)) . (Node <: adj)) in iden));1;(((Node <: adj) in (~ (Node <: adj))) && ((~ (Node <: adj)) in (Node <: adj)));4
this/weaklyConnected;(all ref0:(one Node)|((ref0 in ((Node <: adj) . Node)) || (ref0 in (Node . (^ (Node <: adj))))));1;(graph/weaklyConnected[(Node <: adj)]);14
this/stonglyConnected;(Node = (Node . (^ (Node <: adj))));1;((Node -> Node) in (* (Node <: adj)));6
this/noLoops;((Node <: adj) = (~ iden));1;(no ((Node <: adj) & iden));4
this/undirected;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj)))) && (no ((Node <: adj) & (Node <: adj))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj))));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 = ref1) || (ref0 in ((Node <: adj) . ref1)) || (ref0 in (ref1 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));18
this/undirected;((iden in ((~ (Node <: adj)) . (Node <: adj))) && (((~ (Node <: adj)) . (Node <: adj)) in iden));1;(((Node <: adj) in (~ (Node <: adj))) && ((~ (Node <: adj)) in (Node <: adj)));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ((ref0 <: (^ (Node <: adj))) . ref1)));1;(graph/weaklyConnected[(Node <: adj)]);10
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (~ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));8
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(Node in ((ref0 . (* (Node <: adj))) & (ref1 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));11
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in ((Node <: adj) . ref1)) || (ref0 in (ref1 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj))))));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref1 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));11
this/stonglyConnected;(Node = (Node . (Node <: adj)));1;((Node -> Node) in (* (Node <: adj)));5
this/oriented;(all ref0:(one Node)|(ref0 = ((ref0 . (Node <: adj)) . (~ (Node <: adj)))));1;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ((ref0 . (* (Node <: adj))) + (ref1 . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));13
this/weaklyConnected;(all ref0:(one Node)|((((((^ (Node <: adj)) . ref0) :> Node) + ((ref0 . (^ (Node <: adj))) :> Node)) + ((ref0 . (^ (Node <: adj))) :> ref0)) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));19
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 = ref1) || (ref0 in ((Node <: adj) . ref1)) || (ref0 in (ref1 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj))))));12
this/oriented;(all ref0:(one Node)|(no ((ref0 . (Node <: adj)) & ((~ (Node <: adj)) . ref0))));1;(all ref0:(one Node)|(no ((ref0 . (Node <: adj)) & (ref0 . (~ (Node <: adj))))));4
this/weaklyConnected;(all ref0:(one Node)|((((((^ (Node <: adj)) . ref0) :> Node) + ((ref0 . (^ (Node <: adj))) :> Node)) = Node) && (some ((ref0 . (Node <: adj)) :> ref0))));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));19
this/oriented;(no ((Node . (Node <: adj)) & (Node . (~ (Node <: adj)))));1;(no ((Node <: adj) & (~ (Node <: adj))));4
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref0 -> ref0) in (Node <: adj)))));1;(all ref0:(one Node)|(! (ref0 in (ref0 . (^ (Node <: adj))))));12
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ((ref0 <: (^ (Node <: adj))) & (ref1 <: (^ (Node <: adj))))));1;(graph/weaklyConnected[(Node <: adj)]);13
this/acyclic;((Node <: adj) !in ((Node <: adj) . (^ (Node <: adj))));1;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));5
this/acyclic;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref2 -> ref1) in (Node <: adj))) => (ref1 = ref2)));1;(graph/dag[(Node <: adj)]);19
this/stonglyConnected;(all ref0:(one Node)|((Node . (Node <: adj)) in (ref0 . (^ (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 . ((^ (Node <: adj)) + iden))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some ((ref0 . (^ (Node <: adj))) & (ref1 . (^ (Node <: adj))))));1;(graph/weaklyConnected[(Node <: adj)]);13
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! (((ref0 -> ref0) in (Node <: adj)) && ((ref1 -> ref1) in (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((no (ref0 & (ref0 . (^ (Node <: adj))))) && ((ref1 -> ref0) !in (Node <: adj)))));15
this/acyclic;(all ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));1;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));3
this/acyclic;((^ (Node <: adj)) !in iden);1;(no ((^ (Node <: adj)) & iden));3
this/weaklyConnected;(all ref0:(one Node)|((ref0 + (ref0 . ((^ (Node <: adj)) + (~ (Node <: adj))))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));4
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! (((ref1 -> ref0) in (Node <: adj)) && ((ref1 -> ref1) in (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((no (ref0 & (ref0 . (^ (Node <: adj))))) && ((ref1 -> ref0) !in (Node <: adj)))));17
this/acyclic;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref2 -> ref1) in (Node <: adj))) => ((ref0 = ref2) && (ref1 = ref2))));1;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(ref2 !in (ref2 . (^ (Node <: adj))))));22
this/undirected;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (Node <: adj))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));7
this/weaklyConnected;(all ref0:(one Node)|((ref0 + (ref0 . (^ (Node <: adj)))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));5
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (~ (^ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/weaklyConnected;(all ref0:(one Node)|((one Node) || (Node in (ref0 . (^ (Node <: adj))))));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));9
this/weaklyConnected;(all ref0:(one Node)|(ref0 in (Node . (* (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));8
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((^ (ref1 -> ref0)) !in (Node <: adj))));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));13
this/complete;(Node = (Node . (Node <: adj)));1;((Node <: adj) = (Node -> Node));4
this/acyclic;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref2) in (Node <: adj))) => (! (ref0 = ref2))));1;(graph/dag[(Node <: adj)]);20
this/weaklyConnected;(all ref0:(one Node)|(((Node in ((^ (Node <: adj)) . ref0)) && (Node in (ref0 . (^ (Node <: adj))))) || (one Node)));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));12
this/oriented;(some ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 !in (ref0 . (Node <: adj))) && disj[ref0,ref1]));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj)))));9
this/weaklyConnected;((Node -> Node) in (^ ((Node <: adj) + (~ (Node <: adj)))));1;(((Node -> Node) - iden) in (^ ((Node <: adj) + (~ (Node <: adj)))));2
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((^ (ref0 -> ref1)) in (Node <: adj)) => ((^ (ref1 -> ref0)) !in (Node <: adj))));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));14
this/weaklyConnected;(((Node <: adj) + (^ (Node <: adj))) in (Node <: adj));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));7
this/complete;(all ref0:(one Node)|(ref0 in ((Node <: adj) . Node)));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));5
this/undirected;((Node . (Node <: adj)) = ((~ (Node <: adj)) . Node));1;((Node <: adj) = (~ (Node <: adj)));4
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in (ref0 . (* (Node <: adj)))));1;(all ref0:(one Node)|((Node - ref0) in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))));7
this/weaklyConnected;(all ref0:(one Node)|((((Node <: adj) in (~ (Node <: adj))) && (Node in (ref0 . (^ (Node <: adj))))) || (one Node)));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));10
this/acyclic;(all ref0:(one Node),ref1:(one Node)|(((^ (ref0 -> ref1)) in (Node <: adj)) => ((ref1 -> ref0) !in (Node <: adj))));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));13
this/undirected;(all ref0:(one Node)|(ref0 in ((Node <: adj) . (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));6
this/acyclic;(no (^ (Node <: adj)));1;(no ((^ (Node <: adj)) & iden));2
this/noLoops;(all ref0:(one Node)|(no (ref0 & (ref0 . (^ (Node <: adj))))));1;(no ((Node <: adj) & iden));6
this/weaklyConnected;((all ref0:(one Node)|((one Node) || (Node in (ref0 . (^ (Node <: adj)))))) && ((Node <: adj) in (~ (Node <: adj))));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));14
this/noLoops;(no ((Node <: adj) & (~ (Node <: adj))));1;(no (((Node <: adj) & iden) & (~ (Node <: adj))));2
this/weaklyConnected;(all ref0:(one Node)|((((^ (~ (Node <: adj))) . ref0) + (ref0 . (^ (Node <: adj)))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));9
this/acyclic;(all ref0:(one Node)|(no ((^ (Node <: adj)) . ref0)));1;(all ref0:(one Node)|(no (((^ (Node <: adj)) . ref0) & ref0)));4
this/noLoops;(all ref0:(one Node)|(no (ref0 . (~ (Node <: adj)))));1;(no ((Node <: adj) & iden));6
this/acyclic;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref2) in (Node <: adj))) => (ref0 = (ref0 & ref2))));1;(graph/dag[(Node <: adj)]);21
this/undirected;((all ref0:(one Node)|(ref0 in ((Node <: adj) . (ref0 . (Node <: adj))))) && (all ref1:(one Node),ref2:(one Node)|((! disj[ref1,ref2]) || ((ref2 in (ref1 . (Node <: adj))) => (ref1 in (ref2 . (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj))))));19
this/noLoops;(no (((Node <: adj) . Node) & (Node . (Node <: adj))));1;(no ((Node <: adj) & iden));6
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (^ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));4
this/acyclic;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref2) in (Node <: adj))) => (ref0 = (ref2 & ref2))));1;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(ref2 !in (ref2 . (^ (Node <: adj))))));20
this/noLoops;(all ref0:(one Node)|(no (ref0 . ((Node <: adj) . (~ (Node <: adj))))));1;(no (((Node <: adj) & iden) & (~ (Node <: adj))));7
this/acyclic;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) => (ref0 = (ref0 & ref1))));1;((all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))) && (all ref2:(one Node)|(ref2 !in (ref2 . (^ (Node <: adj))))));19
this/noLoops;((Node <: adj) = ((Node -> Node) - iden));1;(no ((Node <: adj) & iden));7
this/undirected;(all ref0:(one Node)|(lone ((Node <: adj) . ref0)));1;(graph/undirected[(Node <: adj)]);6
this/complete;(all ref0:(one Node)|((ref0 . (Node <: adj)) in Node));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));4
this/undirected;((all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))))) && (all ref2:(one Node)|(ref2 in ((ref2 . (Node <: adj)) . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))));13
this/noLoops;(all ref0:(one Node)|((ref0 . (Node <: adj)) !in ref0));1;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));4
this/complete;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));4
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 != ref1) && (ref1 in ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj))))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));14
this/undirected;(some ((Node <: adj) & (Node <: adj)));1;((Node <: adj) in (~ (Node <: adj)));4
this/noLoops;(all ref0:(one Node)|(! (ref0 = (ref0 . (Node <: adj)))));1;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (^ (Node <: adj)))) || (ref1 in (ref0 . (~ (^ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));15
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (^ (Node <: adj)))) || (ref1 in (ref0 . (^ (~ (Node <: adj)))))));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));15
this/oriented;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj))));1;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj)))));5
this/undirected;(no ((Node <: adj) + (Node <: adj)));1;(no ((Node <: adj) - (~ (Node <: adj))));3
this/complete;(all ref0:(one Node)|(((ref0 . (Node <: adj)) - ref0) = (Node - ref0)));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) = Node));6
this/undirected;(all ref0:(one Node)|(some ref1:(one (ref0 . (Node <: adj)))|((ref0 in (ref1 . (Node <: adj))) && ((ref1 . (Node <: adj)) in ref0))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj)))));10
this/weaklyConnected;(all ref0:(one Node)|(Node in (((* (^ (Node <: adj))) . ref0) + (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));9
this/complete;(all ref0:(one Node)|((! ((ref0 -> ref0) in (Node <: adj))) && (ref0 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) && (Node in (ref0 . (Node <: adj)))));10
this/weaklyConnected;(all ref0:(one Node)|((ref0 . ((Node <: adj) + (~ (Node <: adj)))) in Node));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));5
this/noLoops;(all ref0:(one Node)|(no (ref0 . (* (Node <: adj)))));1;(no ((Node <: adj) & iden));6
this/acyclic;(no ref0:(one Node)|(Node in (ref0 . (Node <: adj))));1;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));5
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|(ref1 in ((ref0 . (^ (Node <: adj))) - ref0)));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* (Node <: adj)))));8
this/weaklyConnected;(all ref0:(one Node)|((ref0 . ((Node <: adj) + (~ (Node <: adj)))) in (Node - ref0)));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));7
this/undirected;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|((ref0 in (ref1 . (Node <: adj))) && ((ref1 . (Node <: adj)) in ref0)));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj)))));10
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in ((ref0 . (^ (Node <: adj))) - ref0)));1;(all ref0:(one Node)|((Node - ref0) in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))));7
this/acyclic;(no ref0:(one Node)|(Node in (ref0 . (* (Node <: adj)))));1;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));6
this/noLoops;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj)))));1;(all ref0:(one Node)|(! ((ref0 -> ref0) in (Node <: adj))));12
this/undirected;(no ((Node <: adj) - (Node <: adj)));1;(no ((Node <: adj) - (~ (Node <: adj))));1
this/complete;((all ref0:(one Node)|((ref0 . (Node <: adj)) = (Node - ref0))) && (all ref1:(one Node),ref2:(one Node)|((! disj[ref1,ref2]) || (ref1 in ((Node <: adj) . ref2)))));1;((all ref0:(one Node)|((ref0 . (Node <: adj)) = Node)) && (all ref1:(one Node),ref2:(one Node)|((! disj[ref1,ref2]) || (ref1 in ((Node <: adj) . ref2)))));8
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (~ (Node <: adj))) . ref0) + (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));9
this/weaklyConnected;(all ref0:(one Node)|((ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))) in Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));6
this/complete;(all ref0:(one Node)|((# (ref0 . (Node <: adj))) = (# (Node - ref0))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) = Node));6
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . ((* (Node <: adj)) + (~ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));4
this/undirected;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|((# ((ref0 -> (ref1 . (Node <: adj))) + ((ref1 . (Node <: adj)) -> ref0))) = 2));1;((Node <: adj) = (~ (Node <: adj)));14
this/acyclic;(no ref0:(one Node)|(Node in (ref0 . (^ (Node <: adj)))));1;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));4
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (* (Node <: adj))) . ref0) + (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));9
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref1 in (ref0 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (Node <: adj))));9
this/complete;(all ref0:(one Node)|((ref0 in (ref0 . (^ (Node <: adj)))) => (ref0 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) && (Node in (ref0 . (Node <: adj)))));10
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 + ref1) in (ref0 . (^ (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ (Node <: adj))))));7
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref0 . (^ (Node <: adj)))) => ((ref0 -> ref1) in (Node <: adj))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (Node <: adj)));11
this/stonglyConnected;(all ref0:(one Node)|(((ref0 . (^ (Node <: adj))) = Node) && (some (Node <: adj))));1;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));7
this/weaklyConnected;((one Node) || (Node = ((Node . (^ (Node <: adj))) + (Node . (^ (~ (Node <: adj)))))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));12
this/stonglyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ (Node <: adj))))));6
this/stonglyConnected;(all ref0:(one Node)|(((ref0 . (^ (Node <: adj))) = Node) && (some (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));9
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (^ (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* (Node <: adj)))));6
this/oriented;((Node <: adj) !in ((Node <: adj) & (~ (Node <: adj))));1;(no ((Node <: adj) & (~ (Node <: adj))));3
this/acyclic;(all ref0:(one Node)|(no (ref0 & (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|(no (ref0 & (ref0 . (^ (Node <: adj))))));3
this/stonglyConnected;((one Node) || (Node = (Node . (^ (Node <: adj)))));1;(all ref0:(one Node)|((one Node) || (Node in (ref0 . (^ (Node <: adj))))));5
this/noLoops;(iden !in (^ (Node <: adj)));1;(graph/noSelfLoops[(Node <: adj)]);5
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((^ (~ (Node <: adj))) . ref0) + (ref0 . (^ (Node <: adj)))) + ref0)));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));11
this/undirected;(all ref0:(one Node)|(((ref0 . (Node <: adj)) . (Node <: adj)) in ref0));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));4
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ ((Node <: adj) + (~ (Node <: adj)))))) || (ref1 in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));1;((all ref0:(one Node)|(Node in (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))) || (one Node));16
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (^ (~ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));6
this/complete;(no ((Node <: adj) & (^ (Node <: adj))));1;((Node <: adj) = (Node -> Node));8
this/complete;(no ((Node <: adj) & (* (Node <: adj))));1;((Node <: adj) = (Node -> Node));8
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (((ref0 . (Node <: adj)) in ref1) <=> ((ref1 . (Node <: adj)) in ref0))));1;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))));10
this/oriented;(all ref0:(one Node)|(ref0 !in (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));4
this/noLoops;(no ((~ (Node <: adj)) . (Node <: adj)));1;(no ((Node <: adj) & iden));5
this/complete;(no ((Node <: adj) & (~ (Node <: adj))));1;((Node <: adj) = (Node -> Node));8
this/complete;(no ((Node <: adj) + (~ (Node <: adj))));1;((Node <: adj) = (Node -> Node));8
this/complete;(all ref0:(one Node)|(no (ref0 + (ref0 . (~ (Node <: adj))))));1;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));8
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 + ref1) = ((ref0 . (^ (Node <: adj))) + (ref1 . (^ (Node <: adj))))));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));15
this/undirected;(no ((Node <: adj) & (~ (* (Node <: adj)))));1;(no ((Node <: adj) - (~ (Node <: adj))));3
this/weaklyConnected;(all ref0:(one Node)|((ref0 + (ref0 . (Node <: adj))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));6
this/undirected;(iden in ((~ (Node <: adj)) . (Node <: adj)));1;((Node <: adj) in (~ (Node <: adj)));4
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (^ (Node <: adj))) + (ref1 . (^ (Node <: adj)))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));11
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));6
this/oriented;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) <=> (ref1 !in (ref0 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj)))));6
this/weaklyConnected;((Node -> Node) in (^ ((Node <: adj) & (~ (Node <: adj)))));1;(((Node -> Node) - iden) in (^ ((Node <: adj) + (~ (Node <: adj)))));4
this/undirected;(no ((Node <: adj) . (~ (Node <: adj))));1;(no ((Node <: adj) - (~ (Node <: adj))));2
this/weaklyConnected;(((Node -> Node) - iden) in (^ ((Node <: adj) & (~ (Node <: adj)))));1;(((Node -> Node) - iden) in (^ ((Node <: adj) + (~ (Node <: adj)))));2
this/complete;(all ref0:(one Node)|((ref0 . (Node <: adj)) = (ref0 . (~ (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) = Node));7
this/oriented;(((Node <: adj) . Node) != (Node . (Node <: adj)));1;(no ((Node <: adj) & (~ (Node <: adj))));8
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) in (Node <: adj))));1;(graph/weaklyConnected[(Node <: adj)]);14
this/weaklyConnected;(all ref0:(one Node)|(Node in (((^ (~ (Node <: adj))) . ref0) + (ref0 + (ref0 . (^ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));11
this/oriented;(no ((Node <: adj) . (Node <: adj)));1;(no (((Node <: adj) . (Node <: adj)) & iden));2
this/complete;((all ref0:(one Node)|((ref0 . (Node <: adj)) = Node)) && (all ref1:(one Node),ref2:(one Node)|(ref2 in (ref1 . (Node <: adj)))) && (all ref3:(one Node)|((ref3 . (Node <: adj)) = (Node - ref3))));1;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) && (Node in (ref0 . (Node <: adj)))));18
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node),ref2:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref2 -> ref1) in (Node <: adj))) => ((ref0 -> ref2) in (Node <: adj))));1;(graph/weaklyConnected[(Node <: adj)]);21
this/oriented;((Node <: adj) != ((Node <: adj) + (~ (Node <: adj))));1;((Node <: adj) = ((Node <: adj) - (~ (Node <: adj))));4
this/weaklyConnected;(all ref0:(one Node)|((ref0 + ((ref0 . (^ (Node <: adj))) & (ref0 . (^ (~ (Node <: adj)))))) = Node));1;(all ref0:(one Node)|((ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj)))))) = Node));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 . (^ (Node <: adj))) = ref1));1;(graph/weaklyConnected[(Node <: adj)]);9
this/weaklyConnected;((* ((Node <: adj) & (~ (Node <: adj)))) = (Node -> Node));1;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));7
this/acyclic;((all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj))))) && (iden != (iden - (^ (Node <: adj)))) && (no ((^ (Node <: adj)) & iden)));1;((all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj))))) && (iden = (iden - (^ (Node <: adj)))) && (no ((^ (Node <: adj)) & iden)));4
this/undirected;(all ref0:(one Node)|((no (ref0 . (Node <: adj))) || (ref0 in ((ref0 . (Node <: adj)) . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));11
this/weaklyConnected;((some (Node . (Node <: adj))) || (some (Node . (~ (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));11
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (* (Node <: adj))) + (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));8
this/oriented;(all ref0:(one Node)|(((ref0 . (Node <: adj)) -> ref0) !in (Node <: adj)));1;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));6
this/noLoops;(no ((Node <: adj) + iden));1;(no ((Node <: adj) & iden));2
this/stonglyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (Node <: adj)));1;((Node -> Node) in (* (Node <: adj)));7
this/complete;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) & (ref1 -> ref0)) in (Node <: adj)));1;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) + (ref1 -> ref0)) in (Node <: adj)));6
this/undirected;((Node <: adj) in ((~ (Node <: adj)) . (Node <: adj)));1;((Node <: adj) in (~ (Node <: adj)));2
this/undirected;(all ref0:(one Node)|((ref0 !in (ref0 . (Node <: adj))) || (ref0 in ((ref0 . (Node <: adj)) . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));12
this/noLoops;(no ((Node <: adj) - iden));1;(no ((Node <: adj) & iden));2
this/weaklyConnected;(all ref0:(one Node)|((some (Node . (Node <: adj))) || (some (Node . (~ (Node <: adj))))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));12
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))));1;(graph/weaklyConnected[(Node <: adj)]);14
this/undirected;(one Node);1;(graph/undirected[(Node <: adj)]);3
this/oriented;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (Node <: adj))) => (((ref1 !in (ref0 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))) => (ref0 !in (ref1 . (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 !in (ref0 . (Node <: adj)))));21
this/undirected;(all ref0:(one Node)|((ref0 !in (ref0 . (Node <: adj))) && (ref0 in ((ref0 . (Node <: adj)) . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));12
this/weaklyConnected;((some (Node . (Node <: adj))) && (some (Node . (~ (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));11
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(Node in ((ref0 + (ref0 . (^ (Node <: adj)))) + (ref0 . (^ (~ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/weaklyConnected;(all ref0:(one Node)|(some (ref0 . (* (Node <: adj)))));1;(graph/weaklyConnected[(Node <: adj)]);7
this/oriented;(all ref0:(one Node)|((ref0 . (Node <: adj)) !in ref0));1;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));6
this/undirected;(all ref0:(one Node)|(ref0 !in ((ref0 . (Node <: adj)) . (Node <: adj))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));8
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 + (ref0 . (^ (Node <: adj)))) + (ref0 . (^ (~ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/noLoops;(all ref0:(one Node)|(no (ref0 . (Node <: adj))));1;(no ((Node <: adj) & iden));5
this/weaklyConnected;(all ref0:(one Node)|(some (ref0 -> (ref0 . (* (Node <: adj))))));1;(graph/weaklyConnected[(Node <: adj)]);9
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (^ (Node <: adj)))) && (ref1 in (ref0 . (^ (~ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));15
this/weaklyConnected;(all ref0:(one Node)|(some (ref0 . (ref0 -> (ref0 . (* (Node <: adj)))))));1;(graph/weaklyConnected[(Node <: adj)]);11
this/stonglyConnected;((Node -> Node) in (^ (Node <: adj)));1;((Node -> Node) in (* (Node <: adj)));2
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (((ref1 -> ref0) !in (Node <: adj)) && (Node in (((^ (Node <: adj)) . ref0) + (ref0 + (ref0 . (^ (Node <: adj)))))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));23
this/noLoops;(no ((Node <: adj) . (~ (Node <: adj))));1;(no (((Node <: adj) & iden) & (~ (Node <: adj))));4
this/complete;(all ref0:(one Node)|((ref0 . (Node <: adj)) in (Node - ref0)));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));6
this/undirected;(all ref0:(one Node),ref1:(one Node)|((ref0 . (Node <: adj)) = ref1));1;((Node <: adj) = (~ (Node <: adj)));7
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (((ref0 -> ref1) + (ref1 -> ref0)) in (Node <: adj))));1;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) + (ref1 -> ref0)) in (Node <: adj)));9
this/weaklyConnected;((Node -> Node) in (* (Node <: adj)));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));3
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (^ (Node <: adj)))) && (ref1 in (ref1 . (Node <: adj)))));1;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) && (Node in (ref0 . (Node <: adj)))));10
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (((ref1 -> ref0) !in (Node <: adj)) && (Node in (ref0 + (ref0 . (^ (Node <: adj))))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));18
this/undirected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 . (Node <: adj)) = ref1)));1;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj))))));12
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 -> ref1) in (Node <: adj))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (Node <: adj)));9
this/weaklyConnected;(all ref0:(one Node)|((some (ref0 . (Node <: adj))) || (some (ref0 . (^ (Node <: adj))))));1;(graph/weaklyConnected[(Node <: adj)]);12
this/oriented;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)) && disj[ref0,ref1])));1;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)))));7
this/oriented;(no (Node . (Node <: adj)));1;(no (((Node <: adj) . (Node <: adj)) & iden));4
this/complete;(all ref0:(one Node)|(no ref1:(one Node)|(ref1 !in (ref0 . (^ (Node <: adj))))));1;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));6
this/weaklyConnected;(all ref0:(one Node)|(((some (ref0 . (Node <: adj))) || (some (ref0 . (~ (Node <: adj))))) && (ref0 != (ref0 . (Node <: adj)))));1;(graph/weaklyConnected[(Node <: adj)]);18
this/oriented;((! ((Node <: adj) = (~ (Node <: adj)))) || (no (Node <: adj)));1;((Node <: adj) = ((Node <: adj) - (~ (Node <: adj))));6
this/undirected;(((Node . (Node <: adj)) -> ((Node <: adj) . Node)) in (Node <: adj));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));7
this/weaklyConnected;(((Node <: adj) = (Node -> Node)) && ((Node <: adj) = (~ (Node <: adj))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));7
this/undirected;(all ref0:(one Node)|(((ref0 . (Node <: adj)) -> ((Node <: adj) . ref0)) in (Node <: adj)));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));4
this/undirected;(all ref0:(one Node)|(lone ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref0 = (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/oriented;(no ((Node <: adj) . (~ (Node <: adj))));1;(no ((Node <: adj) & (~ (Node <: adj))));2
this/stonglyConnected;(((Node <: adj) = (Node -> Node)) && (no ((Node <: adj) & (~ (Node <: adj)))));1;((Node -> Node) in (* (Node <: adj)));9
this/weaklyConnected;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/weaklyConnected;((((* (Node <: adj)) . Node) & (Node . (* (Node <: adj)))) = Node);1;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));11
this/undirected;(all ref0:(one Node)|((Node <: adj) = ((ref0 . (Node <: adj)) -> ((Node <: adj) . ref0))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));6
this/complete;(all ref0:(one Node)|(ref0 in (ref0 . (~ (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));5
this/weaklyConnected;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));8
this/undirected;(all ref0:(one Node)|(one ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref0 = (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/complete;(all ref0:(one Node)|(ref0 in ((ref0 . (Node <: adj)) . (Node <: adj))));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));6
this/complete;(all ref0:(one Node)|(ref0 in (Node . (^ (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));6
this/weaklyConnected;((((^ (Node <: adj)) . Node) & (Node . (^ (Node <: adj)))) = Node);1;(graph/weaklyConnected[(Node <: adj)]);12
this/undirected;(all ref0:(one Node),ref1:(one Node)|((ref0 . (Node <: adj)) = (ref1 . (Node <: adj))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));7
this/undirected;(all ref0:(one Node)|(one ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) <=> (ref0 = (ref1 . (Node <: adj))))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));11
this/complete;(all ref0:(one Node)|(ref0 in (Node . (* (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (Node <: adj))));6
this/undirected;(iden in (Node <: adj));1;((Node <: adj) in (~ (Node <: adj)));3
this/undirected;(all ref0:(one Node)|(one ref1:(one Node)|(ref0 = (ref1 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));6
this/acyclic;(no ref0:(one Node)|(ref0 !in (ref0 . (Node <: adj))));1;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));3
this/oriented;(0 = 1);1;((Node <: adj) = ((Node <: adj) - (~ (Node <: adj))));7
this/stonglyConnected;(some ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));1;(all ref0:(one Node)|((ref0 . (* (Node <: adj))) = Node));2
this/undirected;(all ref0:(one Node)|(lone ref1:(one Node)|(ref0 = (ref1 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));6
this/complete;(Node in (Node . (* (Node <: adj))));1;((Node -> Node) in (Node <: adj));3
this/undirected;((all ref0:(one Node)|(lone ref1:(one Node)|(ref0 = (ref1 . (Node <: adj))))) && (all ref2:(one Node)|(lone ref3:(one Node)|((ref2 . (Node <: adj)) = ref3))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));14
this/acyclic;(no ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));1;(all ref0:(one Node)|(ref0 !in (ref0 . (^ (Node <: adj)))));2
this/undirected;((all ref0:(one Node)|(lone ref1:(one Node)|(ref0 = (ref1 . (Node <: adj))))) && (all ref2:(one Node)|(one ref3:(one Node)|((ref2 . (Node <: adj)) = ref3))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));14
this/noLoops;(Node !in (Node . (* (Node <: adj))));1;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));6
this/complete;(Node in (Node . (Node <: adj)));1;((Node -> Node) in (Node <: adj));2
this/weaklyConnected;(all ref0:(one Node)|(Node in ((ref0 . (^ (Node <: adj))) - ref0)));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/oriented;(no (Node . (~ (Node <: adj))));1;(no ((Node <: adj) & (~ (Node <: adj))));4
this/undirected;((all ref0:(one Node)|(one ref1:(one Node)|(ref0 = (ref1 . (Node <: adj))))) && (all ref2:(one Node)|(one ref3:(one Node)|((ref2 . (Node <: adj)) = ref3))));1;(all ref0:(one Node),ref1:(one (ref0 . (Node <: adj)))|(ref0 in (ref1 . (Node <: adj))));14
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (^ (Node <: adj)))) && (ref1 in (ref0 . (^ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));11
this/undirected;((Node <: adj) = ((Node <: adj) . (Node <: adj)));1;((Node <: adj) = (~ (Node <: adj)));3
this/undirected;(all ref0:(one Node),ref1:(one Node)|(ref0 = ((ref0 . (Node <: adj)) . (Node <: adj))));1;((Node <: adj) = (~ (Node <: adj)));7
this/noLoops;(Node !in (Node . (^ (Node <: adj))));1;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));6
this/acyclic;(all ref0:(one Node)|(some ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => ((ref1 -> ref0) !in (Node <: adj)))));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));12
this/acyclic;(all ref0:(one Node)|((ref0 -> ref0) !in (Node <: adj)));1;(all ref0:(one Node)|((ref0 -> ref0) !in (^ (Node <: adj))));3
this/acyclic;(no ref0:(one Node)|(ref0 in (ref0 . (~ (Node <: adj)))));1;(no ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));4
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) <=> (ref1 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));16
this/complete;(all ref0:(one Node),ref1:(one Node)|(some (ref0 -> ref1)));1;(all ref0:(one Node),ref1:(one Node)|((ref0 -> ref1) in (Node <: adj)));7
this/noLoops;(! (iden in (^ (Node <: adj))));1;(all ref0:(one Node)|(! ((ref0 -> ref0) in (Node <: adj))));6
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) || (ref1 in (ref0 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));6
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref1 in ((* (Node <: adj)) . ref0)) || (ref1 in (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/complete;(iden in ((~ (Node <: adj)) . (Node <: adj)));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));6
this/undirected;(all ref0:(one Node)|(one ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref1 = (ref1 . (Node <: adj))))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));11
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (* (Node <: adj)))) && (ref1 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/noLoops;(all ref0:(one Node)|(ref0 !in ((^ (Node <: adj)) . ref0)));1;(all ref0:(one Node)|(ref0 !in ((Node <: adj) . ref0)));3
this/complete;(iden in ((Node <: adj) . (~ (Node <: adj))));1;(all ref0:(one Node)|(Node in (ref0 . (Node <: adj))));6
this/complete;(all ref0:(one Node)|(some (((Node <: adj) . ref0) + (ref0 . (Node <: adj)))));1;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));9
this/complete;(Node in (((Node <: adj) . Node) + (Node . (Node <: adj))));1;((Node -> Node) in (Node <: adj));6
this/noLoops;(no ((Node <: adj) & (Node -> Node)));1;(no ((Node <: adj) & iden));4
this/acyclic;(iden !in (* (Node <: adj)));1;(graph/dag[(Node <: adj)]);5
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) <=> (ref1 = (ref1 . (Node <: adj)))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));11
this/undirected;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (ref0 . (Node <: adj)))));6
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in ((ref0 . (^ (Node <: adj))) + (ref0 . (^ (~ (Node <: adj)))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));9
this/oriented;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) => (ref0 != ref1)));1;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)))));9
this/acyclic;(iden !in ((^ (Node <: adj)) - (Node <: adj)));1;(iden = (iden - (^ (Node <: adj))));4
this/oriented;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) <=> (ref0 != ref1)));1;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)))));9
this/acyclic;(! (iden in (* (Node <: adj))));1;(graph/dag[(Node <: adj)]);6
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in (((^ (Node <: adj)) . ref0) + (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/noLoops;(all ref0:(one Node)|(ref0 in (ref0 . (^ (Node <: adj)))));1;(no ref0:(one Node)|(ref0 in (ref0 . (Node <: adj))));3
this/oriented;(all ref0:(one Node),ref1:(one Node)|((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) <=> (ref0 = ref1)));1;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)))));9
this/weaklyConnected;(all ref0:(one Node)|((ref0 - ref0) in ref0));1;(graph/weaklyConnected[(Node <: adj)]);7
this/weaklyConnected;(all ref0:(one Node)|(ref0 in ((Node <: adj) . ref0)));1;(graph/weaklyConnected[(Node <: adj)]);7
this/weaklyConnected;(all ref0:(one Node)|(Node in (ref0 . (^ ((^ (Node <: adj)) + (^ (~ (Node <: adj))))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));6
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in (((* (Node <: adj)) . ref0) + (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));10
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in ((Node <: adj) . ref1)));1;(graph/weaklyConnected[(Node <: adj)]);8
this/complete;((^ (Node <: adj)) = (Node -> Node));1;((Node <: adj) = (Node -> Node));1
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((ref0 in ((Node <: adj) . ref1)) && (ref1 in ((Node <: adj) . ref0))));1;(graph/weaklyConnected[(Node <: adj)]);14
this/oriented;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) <=> (ref1 in (univ - (ref0 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (ref1 in (univ - (ref0 . (Node <: adj))))));6
this/weaklyConnected;(all ref0:(one Node)|((Node - ref0) in (((* (Node <: adj)) . ref0) + (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (* ((Node <: adj) + (~ (Node <: adj))))))));10
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(some (ref0 <: ((^ (Node <: adj)) . ref1))));1;(graph/weaklyConnected[(Node <: adj)]);10
this/oriented;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj))) => (ref0 = ref1))));1;(! (some ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) && ((ref1 -> ref0) in (Node <: adj)))));14
this/acyclic;(iden in (^ (Node <: adj)));1;(iden = (iden - (^ (Node <: adj))));4
this/oriented;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|(((ref0 -> ref1) in (Node <: adj)) => (! ((ref1 -> ref0) in (Node <: adj)))));9
this/oriented;((Node <: adj) = ((Node <: adj) & (~ (Node <: adj))));1;((Node <: adj) = ((Node <: adj) - (~ (Node <: adj))));2
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 . (* (Node <: adj)))) + ((ref0 . (~ (* (Node <: adj)))) + ((~ (* (Node <: adj))) . ref0)))));1;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/undirected;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) => (ref0 = ((ref0 . (Node <: adj)) . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));11
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((ref0 in (ref1 . (^ (Node <: adj)))) || (ref0 in (ref1 . (~ (^ (Node <: adj)))))) && ((ref1 in (ref0 . (^ (Node <: adj)))) || (ref1 in (ref0 . (~ (^ (Node <: adj))))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));30
this/undirected;(one ((Node <: adj) & (~ (Node <: adj))));1;((Node <: adj) in (~ (Node <: adj)));3
this/undirected;(all ref0:(one Node)|(some ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) => (ref0 = (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/acyclic;((iden !in (^ (Node <: adj))) || (iden in (Node <: adj)));1;(no ((^ (Node <: adj)) & iden));7
this/weaklyConnected;(((Node <: adj) + (~ (Node <: adj))) in (Node -> Node));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));7
this/undirected;(all ref0:(one Node)|(one (ref0 . (Node <: adj))));1;(graph/undirected[(Node <: adj)]);6
this/weaklyConnected;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + ((ref0 . (* (Node <: adj))) + (ref0 . (~ (* (Node <: adj)))))) + ((~ (* (Node <: adj))) . ref0))));1;(all ref0:(one Node)|(Node in ((((* (Node <: adj)) . ref0) + (ref0 + (ref0 . (* (Node <: adj))))) . (* ((Node <: adj) + (~ (Node <: adj)))))));14
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(((^ (Node <: adj)) . ref0) in (((^ (Node <: adj)) . ref1) & ref0)));1;(graph/weaklyConnected[(Node <: adj)]);14
this/undirected;(all ref0:(one Node)|(one ((ref0 . (Node <: adj)) & (ref0 . (~ (Node <: adj))))));1;(all ref0:(one Node)|((ref0 . (Node <: adj)) in ((Node <: adj) . ref0)));8
this/weaklyConnected;((^ (Node <: adj)) in (Node -> Node));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));7
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (* (Node <: adj)))) && (ref1 in (ref0 . (* (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|(ref1 in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));19
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (* (Node <: adj)))) => (ref1 in (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));8
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|(ref0 in (((^ (Node <: adj)) . ref1) & ref0)));1;(graph/weaklyConnected[(Node <: adj)]);11
this/undirected;(all ref0:(one Node)|(((ref0 . (Node <: adj)) in Node) && (ref0 in ((ref0 . (Node <: adj)) . (Node <: adj)))));1;(((Node <: adj) in (~ (Node <: adj))) && ((~ (Node <: adj)) in (Node <: adj)));11
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 . (Node <: adj)) = ref1) <=> (ref0 in (ref1 . (Node <: adj)))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));10
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (* (Node <: adj)))) <=> (ref1 in (ref0 . (* (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));8
this/complete;((Node <: adj) = (^ (Node <: adj)));1;((Node <: adj) = (Node -> Node));5
this/oriented;(all ref0:(one Node),ref1:(one Node)|((ref0 in ((^ (Node <: adj)) . ref1)) && (ref1 in ((^ (Node <: adj)) . ref0))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) => (! (ref1 in (ref0 . (Node <: adj))))));13
this/complete;((Node <: adj) = (* (Node <: adj)));1;((Node <: adj) = (Node -> Node));5
this/undirected;(all ref0:(one Node),ref1:(one Node)|(((ref0 in (ref1 . (Node <: adj))) && (ref0 in (ref1 . (Node <: adj)))) <=> ((ref0 . (Node <: adj)) in ref1)));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) <=> (ref1 in (ref0 . (Node <: adj)))));12
this/weaklyConnected;(((Node <: adj) . (^ (Node <: adj))) in (Node <: adj));1;(graph/weaklyConnected[(Node <: adj)]);7
this/weaklyConnected;((Node -> Node) in ((* (Node <: adj)) + (* (~ (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));3
this/weaklyConnected;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || (ref0 in (ref1 . (^ (Node <: adj)))) || (ref0 in (ref1 . (~ (^ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|(ref0 in (ref1 . (* ((Node <: adj) + (~ (Node <: adj)))))));19
this/undirected;(all ref0:(one Node)|(some ref1:(one Node)|(((ref0 . (Node <: adj)) in ref1) <=> (ref0 in (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));8
this/complete;(all ref0:(one Node),ref1:(one Node)|((! disj[ref0,ref1]) || ((ref0 in (ref1 . (^ (Node <: adj)))) => (ref1 in (ref0 . (^ (Node <: adj)))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));13
this/complete;((* (Node <: adj)) in (Node -> Node));1;((Node <: adj) = (Node -> Node));3
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) => (ref1 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));8
this/undirected;(all ref0:(one Node)|(lone ref1:(one Node)|(((ref0 . (Node <: adj)) in ref1) <=> (ref0 in (ref1 . (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref1 in (ref0 . (Node <: adj))) => (ref0 in (ref1 . (Node <: adj)))));8
this/complete;((* (Node <: adj)) = (Node -> Node));1;((Node <: adj) = (Node -> Node));1
this/undirected;(no Node);1;(graph/undirected[(Node <: adj)]);3
this/complete;((Node -> Node) in (* (Node <: adj)));1;((Node -> Node) in (Node <: adj));1
this/complete;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (^ (Node <: adj)))) <=> (ref1 in (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node),ref1:(one Node)|((ref0 in (ref1 . (Node <: adj))) && (ref1 in (ref0 . (Node <: adj)))));8
this/weaklyConnected;((* (Node <: adj)) = (Node -> Node));1;(graph/weaklyConnected[(Node <: adj)]);7
this/noLoops;(no iden);1;(no ((Node <: adj) & iden));2
this/weaklyConnected;(all ref0:(one Node)|((ref0 . ((Node <: adj) + (~ (Node <: adj)))) = (Node - ref0)));1;(all ref0:(one Node)|((ref0 . (* ((Node <: adj) + (~ (Node <: adj))))) = Node));5
this/complete;(all ref0:(one Node)|(some (ref0 . (^ (Node <: adj)))));1;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));6
this/complete;(all ref0:(one Node)|(some ((^ (Node <: adj)) . ref0)));1;(no ref0:(one Node)|(Node !in (ref0 . (Node <: adj))));8
this/weaklyConnected;(Node = (Node . (* ((Node <: adj) + (~ (Node <: adj))))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));4
this/weaklyConnected;(Node in (((* (Node <: adj)) . Node) + (Node . (* (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));10
this/oriented;(all ref0:(one Node)|(some ((Node <: adj) . ref0)));1;(no (((Node <: adj) . (Node <: adj)) & iden));7
this/weaklyConnected;(some ref0:(one Node)|(Node in (ref0 . (^ (Node <: adj)))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));7
this/weaklyConnected;(some ref0:(one Node)|(Node in (ref0 + (ref0 . (^ (Node <: adj))))));1;(all ref0:(one Node)|(Node in (ref0 + (ref0 . (^ ((Node <: adj) + (~ (Node <: adj))))))));5
this/undirected;((Node <: adj) in (Node <: adj));1;((Node <: adj) in (~ (Node <: adj)));1
this/weaklyConnected;(Node in (Node . (Node <: adj)));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));6
this/weaklyConnected;((some (Node <: adj)) => (Node in (((Node <: adj) . Node) + (Node . (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));11
this/weaklyConnected;((lone Node) || (Node in (((Node <: adj) . Node) + (Node . (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));11
this/weaklyConnected;(((Node <: adj) . (~ (Node <: adj))) in iden);1;(all ref0:(one Node)|(Node in (ref0 . (* ((Node <: adj) + (~ (Node <: adj)))))));6
this/weaklyConnected;((! (lone Node)) => (Node in (((Node <: adj) . Node) + (Node . (Node <: adj)))));1;((Node -> Node) in (* ((Node <: adj) + (~ (Node <: adj)))));12
