;predicate;formula;frequency;closest_solution;solution_distance
0;this/inv1;;202;(some (Entry -> Exit));5
1;this/inv3;;194;(Exit = (Track - ((Track <: succs) . Track)));8
2;this/inv2;;191;((Track <: signals) in (Track one-> Signal));6
3;this/inv4;;160;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});8
4;this/inv5;;145;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});9
5;this/inv6;;138;(Entry in ((Track <: signals) . Speed));6
6;this/inv9;;128;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));8
7;this/inv7;;125;(no ((^ (Track <: succs)) & iden));6
8;this/inv3;(all ref0:(one Exit)|(no (ref0 . (Track <: succs))));125;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
9;this/inv8;;124;((Entry -> Exit) in (* (Track <: succs)));7
10;this/inv10;;110;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));8
11;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit)));89;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));4
12;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs)))));84;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));8
13;this/inv3;(no (Exit . (Track <: succs)));81;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));6
14;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs)))));73;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
15;this/inv8;(all ref0:(one Entry)|(Exit in (ref0 . (^ (Track <: succs)))));42;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));4
16;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref2 . (Track <: succs))) => (ref1 !in (ref2 . (Track <: signals)))));34;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
17;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (^ (Track <: succs))))));27;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));8
18;this/inv1;((one Entry) && (one Exit));25;((some Entry) && (some Exit));4
19;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some ((Track <: succs) . ref0))));21;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});9
20;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|((! disj[ref1,ref2]) || (((ref2 !in (ref1 . (Track <: succs))) && (ref2 in Junction)) => (ref0 !in (ref1 . (Track <: signals))))));20;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));17
21;this/inv3;(all ref0:(one Exit)|((# (ref0 . (Track <: succs))) = 0));20;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
22;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit)));19;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));4
23;this/inv2;(all ref0:(one Signal)|(ref0 in (Track . (Track <: signals))));16;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));5
24;this/inv8;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs))))));16;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs))))));4
25;this/inv1;((one Exit) && (some Entry));15;((some Entry) && (some Exit));4
26;this/inv8;(Exit in (Entry . (* (Track <: succs))));15;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));3
27;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || (((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs))))) => (ref0 in Junction))));15;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref1,ref2]) || (((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)))) && (all ref3:(one Junction)|((# ((Track <: succs) . ref3)) > 1)));17
28;this/inv5;(all ref0:(one Track)|((some ((Track <: succs) . ref0)) => (ref0 in Junction)));14;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
29;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs)));14;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
30;this/inv8;(Exit in (Entry . (^ (Track <: succs))));14;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));5
31;this/inv6;(all ref0:(one Entry)|(Speed in (ref0 . (Track <: signals))));14;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));5
32;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals)))));13;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));8
33;this/inv3;(all ref0:(one Exit)|(no (ref0 . (^ (Track <: succs)))));12;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));6
34;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (all ref2:(one Semaphore)|(ref2 !in (ref1 . (Track <: signals))))));12;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
35;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));12;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
36;this/inv3;(all ref0:(one Track)|((Exit in ref0) => (no (ref0 . (Track <: succs)))));12;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
37;this/inv1;((lone Entry) && (lone Exit));11;((some Entry) && (some Exit));4
38;this/inv2;(all ref0:(one Signal)|(some ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));11;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));4
39;this/inv4;(all ref0:(one Entry)|(no ((Track <: succs) . ref0)));11;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});4
40;this/inv6;(all ref0:(one Entry)|(some (ref0 . (Track <: signals))));11;(all ref0:(one Entry)|(some ((ref0 . (Track <: signals)) & Speed)));4
41;this/inv6;(some ((Entry . (Track <: signals)) & Speed));11;(all ref0:(one Entry)|(some ((ref0 . (Track <: signals)) & Speed)));3
42;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))));11;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));10
43;this/inv7;(all ref0:(one Track)|(ref0 !in (ref0 . (Track <: succs))));11;(all ref0:(one Track)|(ref0 !in (ref0 . (^ (Track <: succs)))));3
44;this/inv6;(all ref0:(one Entry)|(one ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));11;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
45;this/inv4;(no ((Track <: succs) . Entry));10;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});5
46;this/inv3;(all ref0:(one Exit)|(no ((Track <: succs) . ref0)));10;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
47;this/inv4;(all ref0:(one Entry)|(ref0 !in (Track . (Track <: succs))));10;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));6
48;this/inv3;(all ref0:(one Exit),ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs))));9;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));8
49;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (no ((Track <: succs) . ref0))));9;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});6
50;this/inv1;(all ref0:(one Track)|((ref0 in Entry) && (ref0 in Exit)));9;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));5
51;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# ((Track <: succs) . ref0)) > 1)));9;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
52;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))));9;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));10
53;this/inv3;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) => (ref0 in Exit)));9;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
54;this/inv4;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) => (ref0 in Entry)));8;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) <=> (ref0 in Entry)));4
55;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (ref0 !in (Track . (Track <: succs)))));8;(Entry = (Track - (Track . (Track <: succs))));9
56;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2)));8;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2))) && (all ref3:(one Signal)|(some ref4:(one Track)|(ref3 in (ref4 . (Track <: signals))))));14
57;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in Junction)));8;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));4
58;this/inv8;(all ref0:(one Entry)|(((ref0 . (^ (Track <: succs))) & Exit) = Exit));8;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));4
59;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (some ((ref0 . (Track <: signals)) & Semaphore))));8;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));4
60;this/inv8;(all ref0:(one Entry)|((ref0 . (^ (Track <: succs))) in Exit));8;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));5
61;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => ((ref1 -> ref0) in (Track <: succs))));8;(all ref0:(one Track)|((! (ref0 in (Track . (Track <: succs)))) <=> (ref0 in Entry)));14
62;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (Track <: succs))));7;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs)))));5
63;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => ((ref0 . (Track <: signals)) !in Semaphore)));7;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));6
64;this/inv8;(all ref0:(one Entry)|(some ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs))))));7;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
65;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) <=> (ref0 in Entry)));7;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));4
66;this/inv5;(all ref0:(one Track)|(((# (ref0 & (Track . (Track <: succs)))) > 1) <=> (ref0 in Junction)));7;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
67;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref2 . (Track <: succs))) <=> (ref1 !in (ref2 . (Track <: signals)))));7;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
68;this/inv8;(all ref0:(one Exit)|(ref0 in (Entry . (^ (Track <: succs)))));7;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));6
69;this/inv9;(all ref0:(one Track)|((no ((ref0 . (^ (Track <: succs))) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));7;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));3
70;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction),ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) => (ref2 in (ref0 . (Track <: signals))))));7;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
71;this/inv4;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Entry)));7;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));4
72;this/inv3;(all ref0:(one univ)|(((no (ref0 . (Track <: succs))) && (ref0 in Track)) => (ref0 in Exit)));7;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
73;this/inv1;((some ref0:(one Track)|(ref0 = Entry)) && (some ref1:(one Track)|(ref1 = Exit)));7;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));8
74;this/inv3;(all ref0:(one (Exit & Track))|(no (ref0 . (Track <: succs))));6;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
75;this/inv5;(all ref0:(one Junction)|((# ((Track <: succs) . ref0)) > 1));6;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
76;this/inv4;(all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (^ (Track <: succs)))));6;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));9
77;this/inv6;(all ref0:(one Track)|((ref0 in Entry) => (Speed in (ref0 . (Track <: signals)))));6;(all ref0:(one Track)|((ref0 in Entry) => (some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))))));5
78;this/inv6;(all ref0:(one Speed),ref1:(one Track)|((ref1 in Entry) => (ref0 in (ref1 . (Track <: signals)))));6;(all ref0:(one Track)|(some ref1:(one Speed)|((ref0 in Entry) => ((ref0 -> ref1) in (Track <: signals)))));8
79;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|((((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction)) && disj[ref1,ref2])));6;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
80;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction)));6;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
81;this/inv1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Entry)) && (some ((ref0 . (Track <: succs)) & Exit))));6;((some (Entry & Track)) && (some (Exit & Track)));9
82;this/inv3;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) => (ref0 in Exit)));6;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));4
83;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => ((# (ref0 . (Track <: succs))) = 0)));6;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
84;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref2 . (^ (Track <: succs)))) => (ref1 !in (ref2 . (Track <: signals)))));6;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
85;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Entry) => ((ref0 -> ref1) in (Track <: succs))));6;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));13
86;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (Exit in ref0)));6;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
87;this/inv5;(all ref0:(one Junction)|(some ((Track <: succs) . ref0)));6;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});7
88;this/inv4;(all ref0:(one Entry)|(no (ref0 . (^ (Track <: succs)))));6;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});7
89;this/inv1;(all ref0:(one Track)|((some Entry) && (some Exit)));5;((some Entry) && (some Exit));1
90;this/inv1;(all ref0:(one Track)|((ref0 in Entry) || (ref0 in Exit)));5;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
91;this/inv1;(all ref0:(one Track)|((one Entry) && (one Exit)));5;((some Entry) && (some Exit));5
92;this/inv3;((no (Exit . (Track <: signals))) && (no (Exit . (Track <: succs))));5;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));7
93;this/inv3;(no (Exit & (Track . (Track <: succs))));5;(Exit = (Track - (Track . (~ (Track <: succs)))));6
94;this/inv4;(no (Entry & (Track . (Track <: succs))));5;(Entry = (Track - (Track . (Track <: succs))));5
95;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# (ref0 . (Track <: succs))) > 1)));5;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));11
96;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 = Exit)));5;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
97;this/inv6;(all ref0:(one Track)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));5;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
98;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Entry)));5;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));6
99;this/inv3;(no ((Track <: succs) . Exit));5;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
100;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(((ref1 . (Track <: succs)) !in Junction) => (ref0 !in (ref1 . (Track <: signals)))));5;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));7
101;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals)))))));5;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
102;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in ref0) && (ref2 in ref0))));5;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));9
103;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Semaphore)) <=> (no ((ref0 . (Track <: succs)) & Junction))));5;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));12
104;this/inv7;(all ref0:(one Track)|(no (ref0 & (ref0 . (Track <: succs)))));5;(all ref0:(one Track)|(no (ref0 & (ref0 . (^ (Track <: succs))))));3
105;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref1 !in (ref0 . (Track <: succs))) && (ref1 in Junction)) => (no ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));5;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
106;this/inv6;(all ref0:(one Entry),ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))));5;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
107;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals))))));5;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));9
108;this/inv10;(all ref0:(one Track)|((Junction in (ref0 . (Track <: succs))) => (Semaphore in (ref0 . (Track <: signals)))));5;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));8
109;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) && (ref1 in (ref0 . (^ (Track <: succs))))));5;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));6
110;this/inv5;(all ref0:(one Track)|(((# ((^ (Track <: succs)) . ref0)) > 1) <=> (ref0 in Junction)));5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));3
111;this/inv8;(((Entry . (^ (Track <: succs))) & Exit) = Exit);5;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));5
112;this/inv6;(all ref0:(one Track)|((ref0 in Entry) => (some (ref0 . (Track <: signals)))));5;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));4
113;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no ((Track <: succs) . ref0))));5;(Exit = (Track - ((Track <: succs) . Track)));10
114;this/inv10;(all ref0:(one Track)|((some (((Track <: succs) . ref0) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));5;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));4
115;this/inv3;(all ref0:(one univ)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 in Track)) => (ref0 in Exit)));5;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));8
116;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ((Track <: succs) . ref0))));5;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});9
117;this/inv3;(all ref0:(one Exit)|((ref0 in Track) => (no (ref0 . (Track <: succs)))));5;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
118;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry)|((ref1 -> ref0) in (Track <: succs)))) && (all ref2:(one Track)|(one ref3:(one Exit)|((ref2 -> ref3) in (Track <: succs)))));5;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));16
119;this/inv3;(all ref0:(one Track)|((ref0 = Exit) => (no (ref0 . (Track <: succs)))));5;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));8
120;this/inv9;(all ref0:(one Track)|(some ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (all ref2:(one Semaphore)|((ref0 -> ref2) !in (Track <: signals))))));5;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
121;this/inv5;(all ref0:(one Track)|((1 < (# ((^ (Track <: succs)) . ref0))) <=> (ref0 in Junction)));5;(all ref0:(one Track)|((2 < (# ((Track <: succs) . ref0))) <=> (ref0 in Junction)));3
122;this/inv1;((some (Entry & Junction)) && (some (Exit & Junction)));5;((some (Entry & Track)) && (some (Exit & Track)));4
123;this/inv5;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) > 1) <=> (ref0 in Junction)));5;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));3
124;this/inv8;((all ref0:(one Entry)|(Exit in (ref0 . (^ (Track <: succs))))) && (no Semaphore) && (no Signal) && (no Speed));5;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));11
125;this/inv10;(all ref0:(one Track)|(some ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (Semaphore in (ref0 . (Track <: signals))))));5;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));7
126;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (ref0 !in (ref2 . (Track <: signals)))));4;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));11
127;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit)));4;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));6
128;this/inv3;(all ref0:(one Track)|((ref0 !in (ref0 . (Track <: succs))) => (ref0 in Exit)));4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
129;this/inv2;(all ref0:(one Signal)|(lone ((Track <: signals) . ref0)));4;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));4
130;this/inv1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Entry),ref3:(one Track)|((ref3 -> ref2) !in (Track <: succs))) && (all ref4:(one Junction)|(some ref5:(one Track),ref6:(one Track)|(((ref4 -> ref6) in (Track <: succs)) && ((ref5 -> ref4) in (Track <: succs))))) && (some ref7:(one Track),ref8:(one Track)|((((ref8 -> ref7) in (Track <: succs)) && (ref8 in Entry)) => (some ref9:(one Track)|(((ref7 -> ref9) in (Track <: succs)) && (ref9 in Exit))))));4;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));50
131;this/inv7;(all ref0:(one Track)|(no (ref0 . (^ (Track <: succs)))));4;(all ref0:(one Track)|(no (ref0 & (ref0 . (^ (Track <: succs))))));4
132;this/inv6;((Track <: signals) in (Entry ->some Speed));4;(Entry in ((Track <: signals) . Speed));4
133;this/inv2;(Signal = (Track . (Track <: signals)));4;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));6
134;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) <=> (ref0 in Junction))));4;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));6
135;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction)));4;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));9
136;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (ref0 in (Track . (Track <: succs)))));4;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));12
137;this/inv6;(all ref0:(one Entry)|(some ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals)))));4;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
138;this/inv5;(all ref0:(one Track)|(some ref1:(one (Track - ref0)),ref2:(one ((Track - ref0) - ref1))|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction))));4;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));11
139;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 !in Exit)));4;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));10
140;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((Junction in (ref0 . (Track <: succs))) => (ref1 in (ref0 . (Track <: signals))))));4;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));9
141;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || (((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction))));4;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
142;this/inv1;(all ref0:(one Track)|((Entry in ref0) && (Exit in ref0)));4;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
143;this/inv1;(some Entry);4;(some (Entry -> Exit));2
144;this/inv2;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in ref1)));4;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));6
145;this/inv5;(all ref0:(one Junction)|(! (lone ((Track <: succs) . ref0))));4;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});4
146;this/inv8;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (Track <: succs))))));4;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs)))))));5
147;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (ref0 !in (Track . (^ (Track <: succs))))));4;(Entry = (Track - (Track . (^ (Track <: succs)))));9
148;this/inv5;(some ref0:(one Track),ref1:(one Track)|(all ref2:(one Track)|((ref2 in Junction) => ((ref0 != ref1) && ((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref2) in (Track <: succs))))));4;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));20
149;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => (ref0 !in (ref1 . (Track <: succs)))));4;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));12
150;this/inv4;((all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (^ (Track <: succs))))) && (all ref2:(one Track),ref3:(one Track)|((ref2 !in (ref3 . (Track <: succs))) => (ref2 in Entry))));4;((all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (^ (Track <: succs))))) && (all ref2:(one Track)|((ref2 !in (Track . (^ (Track <: succs)))) => (ref2 in Entry))));10
151;this/inv10;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (one ((ref0 . (Track <: signals)) & Semaphore))));4;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));4
152;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit)));4;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));6
153;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref0 !in Junction) && (ref1 in (ref0 . (Track <: succs)))) => (some ((ref1 . (Track <: signals)) & Semaphore))));4;(all ref0:(one Track)|((! (some ((ref0 . (Track <: succs)) & Junction))) => (! (some ((ref0 . (Track <: signals)) & Semaphore)))));16
154;this/inv2;(all ref0:(one Signal)|(one (ref0 . (Track <: signals))));4;(all ref0:(one Signal)|(one (ref0 . (~ (Track <: signals)))));3
155;this/inv3;(all ref0:(one ((Track - Junction) - Entry))|(no (ref0 . (Track <: succs))));4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
156;this/inv4;(all ref0:(one Entry),ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs)));4;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));8
157;this/inv3;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) <=> (ref0 in Exit)));4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));4
158;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => (no ((ref0 . (Track <: signals)) & Semaphore))));4;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));5
159;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (ref0 !in (ref0 . (Track <: succs)))));4;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));9
160;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (no (ref0 . (^ (Track <: succs))))));4;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));8
161;this/inv1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));4;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));4
162;this/inv6;(Speed in (Entry . (Track <: signals)));4;(Entry in ((Track <: signals) . Speed));4
163;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|(((ref0 -> ref1) in (Track <: succs)) => (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));4;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => ((ref1 -> ref2) in (Track <: signals)))));10
164;this/inv10;(all ref0:(one Track)|((Junction in ((Track <: succs) . ref0)) => (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals))))));4;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));11
165;this/inv6;((Track <: signals) in (Entry ->one Speed));4;(Entry in ((Track <: signals) . Speed));4
166;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref0) in (Track <: signals)) && ((ref2 -> ref0) in (Track <: signals))) => (ref1 = ref2)));4;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref0) in (Track <: signals)) && ((ref2 -> ref0) in (Track <: signals))) => (ref1 = ref2))) && (all ref3:(one Signal)|(some ref4:(one Track)|((ref4 -> ref3) in (Track <: signals)))));14
167;this/inv2;(all ref0:(one Signal),ref1:(one Track)|(ref0 in (ref1 . (Track <: signals))));4;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));4
168;this/inv3;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) => (ref0 in Exit)));4;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));4
169;this/inv3;(all ref0:(one Track)|(no (ref0 . (Track <: succs))));4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
170;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 2) <=> (ref0 in Junction)));4;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));2
171;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))));4;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
172;this/inv1;(some ref0:(one Track)|((some (((Track <: succs) . ref0) & Entry)) && (some ((ref0 . (Track <: succs)) & Exit))));4;((some (Entry & Track)) && (some (Exit & Track)));9
173;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no (ref0 . (Track <: signals)))));4;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
174;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (Entry !in ((Track <: succs) . ref0))));4;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});9
175;this/inv3;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) || (ref0 in (ref0 . (Track <: succs)))) => (ref0 in Exit)));4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
176;this/inv5;((all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 !in Junction))) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|(((ref1 != ref2) && (ref1 !in (ref3 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))) && (ref2 != ref3)) => (ref1 !in Junction))));4;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));32
177;this/inv10;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => ((ref0 . (Track <: signals)) in Semaphore)));4;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));4
178;this/inv2;(all ref0:(one Signal)|(one ref1:(one Track)|((ref0 -> ref1) in (Track <: signals))));3;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));6
179;this/inv2;(all ref0:(one Track),ref1:(one Track)|(no ((ref0 . (Track <: signals)) & (ref1 . (Track <: signals)))));3;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));9
180;this/inv2;(no (Signal - (Track . (Track <: signals))));3;((all ref0:(one Signal)|(lone ((Track <: signals) . ref0))) && (no (Signal - (Track . (Track <: signals)))));6
181;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((ref0 !in (Entry + Junction)) && (ref0 in Exit))));3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
182;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref1 !in (ref0 . (Track <: succs))) => (ref0 in Exit)));3;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));6
183;this/inv5;(all ref0:(one Junction)|(ref0 in ((Track . (Track <: succs)) . (^ (Track <: succs)))));3;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});13
184;this/inv9;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref1 !in Junction) && ((ref1 -> ref2) in (Track <: succs))) => ((ref0 !in Semaphore) && ((ref2 -> ref0) in (Track <: signals)))));3;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));20
185;this/inv8;((Entry -> Exit) in (^ (Track <: succs)));3;((Entry -> Exit) in (* (Track <: succs)));2
186;this/inv8;(all ref0:(one Exit),ref1:(one Track)|((ref1 in Entry) => (ref0 in (ref1 . (Track <: succs)))));3;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (* (Track <: succs))))));9
187;this/inv5;(all ref0:(one Track)|(((some ((Track <: succs) . ref0)) && (some (ref0 . (Track <: succs)))) <=> (ref0 in Junction)));3;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
188;this/inv7;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Entry) && (ref1 in Exit)) => ((ref1 -> ref0) !in (Track <: succs))));3;(all ref0:(one Track)|((ref0 -> ref0) !in (^ (Track <: succs))));14
189;this/inv5;(all ref0:(one Junction)|((# (ref0 & (Track . (Track <: succs)))) > 1));3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
190;this/inv7;(all ref0:(one Track)|(ref0 in (ref0 . (^ (Track <: succs)))));3;(no ref0:(one Track)|(ref0 in (ref0 . (^ (Track <: succs)))));2
191;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((ref0 !in Entry) && (ref0 in Exit))));3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
192;this/inv4;((all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) => (ref0 in Entry))) && (Entry !in (Track . (^ (Track <: succs)))));3;((all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) => (ref0 in Entry))) && (all ref1:(one Entry)|(ref1 !in (Track . (^ (Track <: succs))))));5
193;this/inv2;(some ref0:(one Signal)|(ref0 in Track));3;((Track <: signals) in (Track one-> Signal));5
194;this/inv5;(all ref0:(one Track)|(((# (ref0 & (Track . (Track <: succs)))) > 1) => (ref0 in Junction)));3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));8
195;this/inv2;(one ((Track <: signals) . Signal));3;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));3
196;this/inv3;(all ref0:(one Exit)|(lone (ref0 . (Track <: succs))));3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
197;this/inv5;(all ref0:(one (Track - Junction))|(lone ((Track <: succs) . ref0)));3;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});5
198;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) <=> (ref0 in Junction)));3;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));12
199;this/inv10;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (some (ref1 . (Track <: signals)))));3;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (some ((ref1 . (Track <: signals)) & Semaphore))));6
200;this/inv10;(all ref0:(one Junction)|(some ref1:(one Semaphore)|(all ref2:(one ((Track <: succs) . ref0))|(ref1 in (ref2 . (Track <: signals))))));3;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));9
201;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 in Exit) || (ref1 in (ref0 . (^ (Track <: succs))))));3;(all ref0:(one Entry),ref1:(one Exit)|((ref0 = ref1) || (ref1 in (ref0 . (^ (Track <: succs))))));8
202;this/inv5;(all ref0:(one Track)|(((# ((ref0 & Track) - (ref0 . (Track <: succs)))) > 1) <=> (ref0 in Junction)));3;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
203;this/inv8;(all ref0:(one Exit)|(some ref1:(one Entry)|(ref0 in (ref1 . (^ (Track <: succs))))));3;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));7
204;this/inv6;(one ((Entry . (Track <: signals)) & Speed));3;(Entry in ((Track <: signals) . Speed));5
205;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (Semaphore in (ref0 . (Track <: signals)))));3;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));8
206;this/inv8;(all ref0:(one Entry)|(some ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs))))));3;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs)))));4
207;this/inv10;(all ref0:(one Track)|((Junction in (ref0 . (Track <: succs))) => (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals))))));3;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));9
208;this/inv2;(Signal in (Track . (Track <: signals)));3;((Track <: signals) in (Track one-> Signal));6
209;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# ((^ (Track <: succs)) . ref0)) > 1)));3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));11
210;this/inv3;(all ref0:(one Exit)|(none = (ref0 . (Track <: succs))));3;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
211;this/inv4;((all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (^ (Track <: succs))))) && (all ref2:(one Track),ref3:(one Track)|((ref2 !in (ref3 . (^ (Track <: succs)))) => (ref2 in Entry))));3;((all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (^ (Track <: succs))))) && (all ref2:(one Track)|((ref2 !in (Track . (^ (Track <: succs)))) => (ref2 in Entry))));9
212;this/inv4;(all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs))));3;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));8
213;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref0 !in Junction) && (ref1 in (ref0 . (Track <: succs)))) => (no ((ref0 . (Track <: signals)) & Semaphore))));3;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));12
214;this/inv9;((all ref0:(one Track),ref1:(one Track)|(((ref0 !in Junction) && (ref1 in (ref0 . (Track <: succs)))) => (no ((ref0 . (Track <: signals)) & Semaphore)))) && (all ref2:(one Track)|((no (ref2 . (Track <: succs))) => (no ((ref2 . (Track <: signals)) & Semaphore)))));3;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (no ((ref0 . (Track <: signals)) & Semaphore)))) && (all ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (no ((ref1 . (Track <: signals)) & Semaphore)))));18
215;this/inv9;(all ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) !in (Track <: succs)) && (ref1 in Junction)) => (all ref2:(one Semaphore)|((ref0 -> ref2) !in (Track <: signals)))));3;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));16
216;this/inv3;(all ref0:(one Track)|((some (ref0 & Exit)) => ((no (ref0 . (Track <: signals))) && (no (ref0 . (Track <: succs))))));3;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));13
217;this/inv8;(all ref0:(one Track)|(Exit in (ref0 . (^ (Track <: succs)))));3;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));4
218;this/inv1;(some ref0:(one Track)|((ref0 in Entry) || (ref0 in Exit)));3;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
219;this/inv1;((Entry in Track) && (Exit in Track));3;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));6
220;this/inv6;(all ref0:(one Track)|(some ((ref0 . (Track <: signals)) & Speed)));3;(all ref0:(one Entry)|(some ((ref0 . (Track <: signals)) & Speed)));2
221;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (no (ref0 . (Track <: succs)))));3;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));8
222;this/inv10;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (one ((ref0 . (Track <: signals)) & Semaphore))));3;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));4
223;this/inv2;(all ref0:(one Signal)|(one Track));3;((Track <: signals) in (Track one-> Signal));6
224;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (! (lone ((Track <: succs) . ref0)))));3;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});6
225;this/inv9;(all ref0:(one Signal),ref1:(one Track)|(((ref0 in Semaphore) && ((ref1 -> ref0) in (Track <: signals))) => (ref1 in Junction)));3;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));15
226;this/inv1;(one ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));3;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));4
227;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (all ref1:(one Track)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in Exit)))));3;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));12
228;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (^ (Track <: succs)))) => (no ref1:(one Semaphore)|(ref1 in (ref0 . (* (Track <: signals)))))));3;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));12
229;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (^ (Track <: succs)))) => (ref2 in (ref1 . (Track <: signals))))));3;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));7
230;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 !in (ref1 . (Track <: succs))) => (ref2 !in (ref1 . (Track <: signals))))));3;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
231;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (ref0 . (Track <: succs)))));3;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));11
232;this/inv3;(all ref0:(one Track)|((Exit in ref0) => (no ((Track <: succs) . ref0))));3;(Exit = (Track - ((Track <: succs) . Track)));10
233;this/inv1;(all ref0:(one Junction)|(some ref1:(one Entry),ref2:(one Exit)|(((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs)))));3;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
234;this/inv5;(all ref0:(one Junction)|(! (lone (((Track <: succs) . ref0) & (Track - ref0)))));3;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});8
235;this/inv2;(all ref0:(one Signal),ref1:(one Signal),ref2:(one Track)|((((ref2 -> ref0) in (Track <: signals)) && ((ref2 -> ref1) in (Track <: signals))) => (ref0 = ref1)));3;(all ref0:(one univ)|((ref0 in Signal) => (one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals)))));15
236;this/inv5;(all ref0:(one Track)|((! (lone ((^ (Track <: succs)) . ref0))) <=> (ref0 in Junction)));3;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));3
237;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref0 in (ref1 . (^ (Track <: succs)))));3;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));7
238;this/inv3;(Exit = (Track - (Track . (Track <: succs))));3;(Exit = (Track - (Track . (~ (Track <: succs)))));1
239;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(some ref2:(one Track)|(((ref0 -> ref2) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs)))));3;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));14
240;this/inv1;((all ref0:(one Track)|(some (ref0 & Entry))) && (all ref1:(one Track)|(some (ref1 & Exit))));3;((some (Entry & Track)) && (some (Exit & Track)));6
241;this/inv1;(some ref0:(one Track)|(((# (ref0 . (Track <: succs))) > 1) && (ref0 in ((Entry + Junction) + Exit))));3;((some Entry) && (some Exit));14
242;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Signal),ref2:(one Track)|((ref0 != ref2) && ((ref0 -> ref1) !in (Track <: signals)) && ((ref0 -> ref2) !in (Track <: succs))))));3;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));22
243;this/inv10;(all ref0:(one Track)|((some ((ref0 . (~ (Track <: succs))) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));3;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));3
244;this/inv1;(all ref0:(one Track)|((some ref1:(one Entry)|(ref1 in (ref0 . (Track <: succs)))) && (some ref2:(one Exit)|(ref2 in (ref0 . (Track <: succs))))));3;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
245;this/inv3;(all ref0:(one ((Track - Entry) - Junction))|(no (ref0 . (Track <: succs))));3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
246;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (no (ref1 . (Track <: signals)))));3;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
247;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))))));3;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
248;this/inv2;(all ref0:(one Signal)|((ref0 in (Track . (Track <: signals))) || (ref0 in ((Track . (^ (Track <: succs))) . (Track <: signals)))));3;((all ref0:(one Signal)|(lone ((Track <: signals) . ref0))) && (Signal in (Track . (Track <: signals))));14
249;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((Junction in ((Track <: succs) . ref0)) => (ref1 in (ref0 . (Track <: signals))))));3;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));11
250;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (Exit in ref0)));3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
251;this/inv3;(all ref0:(one Exit),ref1:(one Exit)|((ref0 -> ref1) !in (Track <: succs)));3;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
252;this/inv3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) => (Exit in ref0)));3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));8
253;this/inv3;(all ref0:(one Exit),ref1:(one Exit)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 != ref1)));3;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));10
254;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) => (ref0 in Entry)));3;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));7
255;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (ref0 in (Track . (^ (Track <: succs))))));3;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));13
256;this/inv5;(all ref0:(one Junction)|((# ((Track <: succs) . ref0)) > 2));3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
257;this/inv1;((some (Entry & (Track . (Track <: succs)))) && (some (Exit & (Track . (Track <: succs)))));3;((some (Entry & Track)) && (some (Exit & Track)));4
258;this/inv9;((all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))))) || (no Junction));3;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));13
259;this/inv4;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 !in (ref1 . (^ (Track <: succs)))) <=> (ref0 in Entry)));3;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));5
260;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)));3;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));11
261;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (one ((ref0 . (^ (Track <: succs))) & Exit))));3;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));11
262;this/inv3;(all ref0:(one Track)|((Exit in ref0) => ((# (ref0 . (Track <: succs))) = 0)));3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));10
263;this/inv5;(all ref0:(one Track)|((one ref1:(one Track)|((one ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) && (ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Junction)));3;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
264;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => ((ref0 !in Entry) && (ref0 !in Junction) && (ref0 in Exit))));3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));11
265;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Entry)));3;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));13
266;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 !in Entry)));3;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));11
267;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => ((ref0 . (^ (Track <: succs))) in Exit)));3;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));9
268;this/inv4;(all ref0:(one (Track - Entry))|(no ((ref0 . (^ (Track <: succs))) & Entry)));3;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});9
269;this/inv5;(all ref0:(one Track)|((all ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));3;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));6
270;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (no (ref1 . (Track <: succs)))));3;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));14
271;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((no ((Track <: succs) . ref1)) <=> (ref0 in (ref1 . (Track <: signals)))));3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
272;this/inv4;(all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) => (Entry in ref0)));3;(all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) <=> (ref0 in Entry)));6
273;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 2) => (ref0 in Junction)));3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
274;this/inv4;(Exit = (Track - (Track . (Track <: succs))));2;(Entry = (Track - (Track . (Track <: succs))));2
275;this/inv1;(((Track <: succs) in (Track ->one Exit)) && ((Track <: succs) in (Track ->some Entry)));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));10
276;this/inv3;(some ((Track <: succs) . none));2;(Exit = (Track - ((Track <: succs) . Track)));7
277;this/inv2;(all ref0:(one Signal)|(one (ref0 & (Track . (Track <: signals)))));2;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));6
278;this/inv3;(all ref0:(one Track)|((ref0 !in (ref0 . (^ (Track <: succs)))) => (ref0 in Exit)));2;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));7
279;this/inv3;(all ref0:(one Exit)|(none in (ref0 . (Track <: succs))));2;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));8
280;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# (ref0 . (^ (Track <: succs)))) > 1)));2;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));12
281;this/inv5;(Junction in (Track . (^ (Track <: succs))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});8
282;this/inv3;(all ref0:(one Track)|((ref0 in (ref0 . (Track <: succs))) => (ref0 in Exit)));2;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));6
283;this/inv5;(Junction in (Track . (* (Track <: succs))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});8
284;this/inv1;(some ref0:(one Entry),ref1:(one Junction)|((ref0 in Track) || (ref1 in Track)));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));4
285;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (ref0 in ((Track . (Track <: succs)) . (^ (Track <: succs))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));15
286;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref1 in ((Track <: succs) . ref0)) && (ref2 in ((Track <: succs) . ref0))) => (ref0 in Junction)));2;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));13
287;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (ref0 in (((Track . (Track <: succs)) . (Track <: succs)) . (* (Track <: succs))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));17
288;this/inv5;(all ref0:(one Junction)|((# (ref0 & (Track . (Track <: succs)))) > 2));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
289;this/inv3;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Exit)|(no (ref2 . (Track <: succs)))));2;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));11
290;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));2;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));8
291;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((ref0 !in (Track - Exit)) && (ref0 in Exit))));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
292;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) => (ref0 in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));8
293;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in ((Junction - Entry) - Exit))));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));8
294;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => ((ref0 !in (Track - Junction)) && (ref0 in Junction))));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
295;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Speed)) <=> (no ((ref0 . (Track <: succs)) & Junction))));2;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));12
296;this/inv1;((Entry + Exit) = Track);2;(some (Entry -> Exit));5
297;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref1 !in (ref0 . (Track <: succs))) => (all ref2:(one Semaphore)|(ref2 !in (ref1 . (Track <: signals))))));2;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));8
298;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Speed))));2;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
299;this/inv6;(all ref0:(one Entry)|(some Speed));2;(Entry in ((Track <: signals) . Speed));6
300;this/inv3;(one (Exit . (Track <: succs)));2;(Exit = (Track - ((Track <: succs) . Track)));7
301;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref1 . (Track <: signals))))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
302;this/inv5;(all ref0:(one Track),ref1:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in ((Track - ref1) . (Track <: succs)))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));12
303;this/inv1;((all ref0:(one Track)|(some Entry)) && (all ref1:(one Track)|(some Exit)));2;((some Entry) && (some Exit));2
304;this/inv2;(all ref0:(one Signal)|(ref0 in Track));2;((Track <: signals) in (Track one-> Signal));5
305;this/inv1;((all ref0:(one Track)|(ref0 in Entry)) && (all ref1:(one Track)|(ref1 in Exit)));2;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));4
306;this/inv8;(all ref0:(one Track),ref1:(one Track)|((ref1 in Exit) => ((ref0 in ((Track <: succs) . ref1)) && (ref0 in Entry))));2;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));16
307;this/inv5;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) > 1) => (ref0 in Junction)));2;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));5
308;this/inv3;(all ref0:(one Track)|(ref0 !in (Exit . (Track <: succs))));2;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));8
309;this/inv3;(some ref0:(one Exit),ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref0 in ref1)));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
310;this/inv5;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) > 1) => ((ref0 !in (Track - Junction)) && (ref0 in Junction))));2;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));11
311;this/inv3;(all ref0:(one Exit)|(ref0 !in (ref0 . (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));7
312;this/inv8;(all ref0:(one Entry)|((ref0 in Exit) || (Exit in (ref0 . (^ (Track <: succs))))));2;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));8
313;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) <=> (ref0 in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));12
314;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (((Entry + Junction) + Exit) = Track));2;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));16
315;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));16
316;this/inv2;(one ref0:(one Track)|(all ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals)))));2;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));6
317;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));6
318;this/inv9;(all ref0:(one Track)|((some ((ref0 . (Track <: signals)) & Semaphore)) <=> (some ((ref0 . (Track <: succs)) & Junction))));2;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));13
319;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));9
320;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no ((Track <: succs) . Track))));2;(Exit = (Track - ((Track <: succs) . Track)));8
321;this/inv4;(all ref0:(one Track)|((no (Track . (Track <: succs))) <=> (ref0 in Entry)));2;(all ref0:(one Track)|((no (ref0 & (Track . (Track <: succs)))) <=> (ref0 in Entry)));4
322;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
323;this/inv5;(Junction = (Track . {ref0:(one Track),ref1:(one Track)|((lone ((Track <: succs) . ref0)) && ((ref0 -> ref1) in (Track <: succs)))}));2;(Junction = (Track . {ref0:(one Track),ref1:(one Track)|((! (lone ((Track <: succs) . ref1))) && ((ref0 -> ref1) in (Track <: succs)))}));7
324;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 != ref1) && (ref0 != ref2) && (ref0 !in (ref0 . (Track <: succs))) && (ref1 != ref2) && (ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));2;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));27
325;this/inv3;(none = (Exit . (Track <: succs)));2;(Exit = (Track - ((Track <: succs) . Track)));6
326;this/inv8;(all ref0:(one Entry)|(some ((ref0 . (Track <: succs)) & Exit)));2;(all ref0:(one Entry)|(((ref0 . (* (Track <: succs))) & Exit) = Exit));6
327;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));11
328;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (ref0 & (Track . (Track <: succs))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));13
329;this/inv3;(Exit !in (Track . (Track <: succs)));2;(Exit = (Track - (Track . (~ (Track <: succs)))));5
330;this/inv8;(all ref0:(one Entry)|(some ((ref0 . (^ (Track <: succs))) & Exit)));2;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));7
331;this/inv8;(all ref0:(one Entry),ref1:(one (ref0 . (Track <: succs)))|(some ((ref1 . (Track <: succs)) & Exit)));2;(all ref0:(one Entry)|(((ref0 . (* (Track <: succs))) & Exit) = Exit));9
332;this/inv3;(one ref0:(one Track)|(all ref1:(one (Track - ref0))|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Exit))));2;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));8
333;this/inv5;(some ref0:(one Track),ref1:(one Track)|(all ref2:(one Track)|(((ref0 != ref1) && ((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));16
334;this/inv5;(some ref0:(one Track),ref1:(one Track)|(all ref2:(one Track)|(((ref0 != ref2) && ((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));16
335;this/inv10;(all ref0:(one Track)|((Semaphore in (ref0 . (Track <: signals))) => (Junction in (ref0 . (Track <: succs)))));2;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));11
336;this/inv9;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));2;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));2
337;this/inv6;(((Track <: signals) . Speed) = Entry);2;(Entry in ((Track <: signals) . Speed));4
338;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) => (one ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals)))))));2;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));6
339;this/inv3;(all ref0:(one Track)|((none in (ref0 . (Track <: succs))) <=> (ref0 in Exit)));2;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));4
340;this/inv1;(one ref0:(one Track)|((ref0 in Entry) && (ref0 in Exit)));2;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));5
341;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => (Semaphore !in (ref0 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));8
342;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 in Exit) => ((ref0 -> ref1) !in (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));12
343;this/inv1;(all ref0:(one Track)|(some ref1:(one Track)|((((ref1 -> ref0) in (Track <: succs)) && (ref1 in Entry)) => (some ref2:(one Track)|(((ref0 -> ref2) in (Track <: succs)) && (ref2 in Exit))))));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));21
344;this/inv10;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|(((ref2 in (ref1 . (Track <: succs))) && (ref2 in Junction)) => (ref0 in (ref1 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));14
345;this/inv3;(all ref0:(one (Track - (Entry + Junction)))|(no (ref0 . (Track <: succs))));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
346;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs)))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));9
347;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (Semaphore in (ref0 . (Track <: signals))))));2;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));7
348;this/inv1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Entry),ref3:(one Track)|((ref3 -> ref2) !in (Track <: succs))) && (all ref4:(one Track)|(some ref5:(one Track)|((((ref5 -> ref4) in (Track <: succs)) && (ref5 in Entry)) => (some ref6:(one Track)|(((ref4 -> ref6) in (Track <: succs)) && (ref6 in Exit)))))));2;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));36
349;this/inv9;(no ((((Track <: succs) . (Track - Junction)) . (Track <: signals)) :> Semaphore));2;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));4
350;this/inv6;(all ref0:(one Track)|((ref0 in Entry) => ((ref0 . (Track <: signals)) in Speed)));2;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));5
351;this/inv3;(some ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit)));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));4
352;this/inv3;(all ref0:(one (Exit - (Entry + Junction)))|(no (ref0 . (Track <: succs))));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
353;this/inv9;(no (((Track <: signals) . Semaphore) & ((Track <: succs) . (Track - Junction))));2;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));5
354;this/inv4;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Exit) => ((ref1 -> ref0) !in (Track <: succs))));2;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));12
355;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (no ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals))))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
356;this/inv2;(all ref0:(one Signal)|(some ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));2;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));4
357;this/inv3;(no ((Exit :> Track) . (Track <: succs)));2;(Exit = (Track - ((Track <: succs) . Track)));7
358;this/inv3;(all ref0:(one univ)|(ref0 in Exit));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
359;this/inv3;(all ref0:(one Exit)|(some ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))));2;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
360;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((! ((ref0 -> ref1) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals)))))));2;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));6
361;this/inv10;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Semaphore)|(all ref2:(one Track)|((ref2 in ((Track <: succs) . ref0)) => (ref1 in (ref2 . (Track <: signals))))))));2;(all ref0:(one Junction),ref1:(one Track)|((ref1 in ((Track <: succs) . ref0)) => (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))));14
362;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (none in (ref0 . (Track <: succs)))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));9
363;this/inv8;(all ref0:(one Exit)|(ref0 in (Entry . (* (Track <: succs)))));2;((Entry -> Exit) in (* (Track <: succs)));5
364;this/inv3;(all ref0:(one Track)|((some (ref0 & Exit)) => (no (ref0 . (Track <: succs)))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));9
365;this/inv1;(one ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));2;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
366;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (none in (ref0 . (* (Track <: succs))))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
367;this/inv10;(all ref0:(one Track),ref1:(one (Track - ref0))|(one ref2:(one Semaphore)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction)) => ((ref0 -> ref2) in (Track <: signals)))));2;(all ref0:(one Track)|((some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction))) => (some ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) && (ref2 in Semaphore)))));10
368;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (all ref1:(one Track)|(ref1 in (ref0 . (* (Track <: succs)))))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));11
369;this/inv3;(all ref0:(one Exit)|(no ref1:(one Track)|((ref0 -> ref1) in (Track <: succs))));2;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));10
370;this/inv3;(all ref0:(one Exit),ref1:(one Signal),ref2:(one Track)|(((ref0 -> ref1) !in (Track <: signals)) && ((ref0 -> ref2) !in (Track <: succs))));2;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));15
371;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (Exit in (ref0 . (^ (Track <: succs))))));2;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));7
372;this/inv10;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (Semaphore in (ref0 . (Track <: signals)))));2;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));7
373;this/inv8;(all ref0:(one Entry)|(some ref1:(one Track)|((some ref2:(one Track)|(((ref1 -> ref2) in (Track <: succs)) && (ref2 in Exit))) && ((ref0 -> ref1) in (Track <: succs)))));2;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));16
374;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref0 !in Junction) && (ref1 in (ref0 . (Track <: succs)))) => (no ((ref1 . (Track <: signals)) & Semaphore))));2;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));14
375;this/inv6;(all ref0:(one Track)|(some ref1:(one Speed)|((ref0 in Track) => (ref1 in (ref0 . (Track <: signals))))));2;(all ref0:(one Track)|((ref0 in Entry) => (some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))))));6
376;this/inv5;(all ref0:(one univ)|((ref0 in Junction) => ((# (ref0 . (^ (Track <: succs)))) > 1)));2;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));12
377;this/inv5;((# (Junction . (Track <: succs))) > 1);2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));7
378;this/inv2;(all ref0:(one Signal),ref1:(one Track)|(ref0 !in ((Track . (Track <: signals)) - (ref1 . (Track <: signals)))));2;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));10
379;this/inv6;(all ref0:(one Speed)|(ref0 in (Entry . (Track <: signals))));2;(Entry in ((Track <: signals) . Speed));5
380;this/inv5;(all ref0:(one Track)|(((# (Track . (Track <: succs))) > 1) <=> (ref0 in Junction)));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));4
381;this/inv4;(all ref0:(one univ)|((ref0 in Entry) => (no ((Track <: succs) . ref0))));2;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});6
382;this/inv6;(all ref0:(one Track)|((ref0 in Entry) <=> (some (ref0 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));6
383;this/inv3;(all ref0:(one Track)|(no ((ref0 . (Track <: succs)) & Exit)));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
384;this/inv1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in (Track . (Track <: succs))) && (ref1 in (Track . (Track <: succs)))));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));8
385;this/inv6;(some ref0:(one Speed)|(ref0 in (Entry . (Track <: signals))));2;(Entry in ((Track <: signals) . Speed));5
386;this/inv1;(all ref0:(one Track)|(one ref1:(one Entry),ref2:(one Exit)|((ref1 in Track) && (ref2 in Track))));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));9
387;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs)))));2;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));12
388;this/inv1;(all ref0:(one Entry)|(some ref0));2;(some (Entry -> Exit));5
389;this/inv1;(all ref0:(one Track)|(one ref1:(one Entry),ref2:(one Exit)|((ref1 in ref0) && (ref2 in ref0))));2;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));9
390;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|(((ref2 -> ref0) !in (Track <: succs)) => ((ref2 -> ref1) !in (Track <: signals))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));14
391;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 = Exit)));2;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
392;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|(((ref0 -> ref1) in (Track <: succs)) && ((ref0 -> ref2) in (Track <: succs)))));2;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
393;this/inv10;(all ref0:(one Track)|((ref0 in Junction) => (all ref1:(one ((* (Track <: succs)) . ref0))|(some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals)))))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
394;this/inv5;(all ref0:(one Track)|((some ref1:(one Track)|(((Track <: succs) in (ref1 -> ref0)) && (ref0 != ref1))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));13
395;this/inv1;(some (Entry & Exit));2;(some (Entry -> Exit));2
396;this/inv10;(all ref0:(one Track)|((ref0 in Junction) => (all ref1:(one ((^ (Track <: succs)) . ref0))|(some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals)))))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
397;this/inv6;(all ref0:(one ((Entry & Track) - Exit))|(some ref1:(one Speed)|(ref0 in (ref0 . (Track <: signals)))));2;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));6
398;this/inv6;(all ref0:(one Track)|(one ((ref0 . (Track <: signals)) & Speed)));2;(all ref0:(one Entry)|(some ((ref0 . (Track <: signals)) & Speed)));4
399;this/inv9;(all ref0:(one Track)|(((ref0 . (* (Track <: succs))) !in Junction) => ((ref0 . (Track <: signals)) !in Semaphore)));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));7
400;this/inv1;((some Entry) && (some Junction));2;((some Entry) && (some Exit));2
401;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(((ref1 -> ref0) !in (Track <: succs)) => (all ref2:(one Semaphore)|((ref1 -> ref2) !in (Track <: signals)))));2;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
402;this/inv6;(all ref0:(one Track)|(one ref1:(one Signal)|((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed))));2;(all ref0:(one Entry)|(some ref1:(one Signal)|((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed))));4
403;this/inv8;(all ref0:(one univ)|((ref0 in Entry) => (all ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs)))))));2;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));8
404;this/inv4;(all ref0:(one Entry)|(no (ref0 . (integer/prev[]))));2;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});6
405;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (ref0 . (^ (Track <: succs))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));12
406;this/inv4;(all ref0:(one Entry)|(no ((ref0 . (Track <: succs)) . (integer/prev[]))));2;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});8
407;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some ((^ (Track <: succs)) . ref0))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});10
408;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (((* (Track <: succs)) . (Track <: succs)) . ref0))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});12
409;this/inv5;(all ref0:(one Junction)|(some ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|(((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));13
410;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 + ref2) in (ref0 . (* (Track <: succs))))));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));12
411;this/inv3;(some ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs)))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));12
412;this/inv3;(some ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 != ref1) && ((ref0 -> ref1) !in (Track <: succs))))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));16
413;this/inv5;(all ref0:(one Track)|(((# ((~ (Track <: succs)) . ref0)) > 1) => (ref0 in Junction)));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));5
414;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Exit)));2;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));8
415;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 + ref2) in (ref0 . (^ (Track <: succs))))));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));12
416;this/inv5;(all ref0:(one Track)|((! (lone (ref0 . (Track <: succs)))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));4
417;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (Track <: succs)));2;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));5
418;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in ((^ (Track <: succs)) . ref0)) && (ref2 in (ref0 . (^ (Track <: succs)))))));2;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));15
419;this/inv1;((Entry in (Track . (^ (Track <: succs)))) && (Exit in (Track . (^ (Track <: succs)))));2;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));12
420;this/inv3;(all ref0:(one Exit)|((Entry !in (ref0 . (Track <: succs))) && (Exit !in (ref0 . (Track <: succs))) && (Junction !in (ref0 . (Track <: succs)))));2;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));15
421;this/inv3;(no (Exit . (^ (Track <: succs))));2;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));7
422;this/inv3;(all ref0:(one Exit),ref1:(one Signal),ref2:(one Track)|((ref0 != ref2) && ((ref0 -> ref1) !in (Track <: signals)) && ((ref0 -> ref2) !in (Track <: succs))));2;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));18
423;this/inv3;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) => ((ref0 !in Entry) && (ref0 !in Junction) && (ref0 in Exit))));2;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));11
424;this/inv1;(all ref0:(one Track)|((ref0 in (Entry + Junction)) => (((# ((ref0 . (Track <: succs)) & Entry)) > 0) && ((# ((ref0 . (Track <: succs)) & Exit)) > 0))));2;(((# Entry) > 0) && ((# Exit) > 0));15
425;this/inv1;((Entry = (Track . (^ (Track <: succs)))) && (Exit = (Track . (^ (Track <: succs)))));2;((some (Entry & Track)) && (some (Exit & Track)));12
426;this/inv3;(all ref0:(one Track)|(ref0 !in (ref0 . (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));7
427;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((ref0 !in Entry) && (ref0 !in Junction) && (ref0 in Exit))));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));11
428;this/inv3;(all ref0:(one Exit)|((no (ref0 . (^ (Track <: succs)))) && (ref0 !in (ref0 . (^ (Track <: succs))))));2;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (no (Exit . (Track <: succs))));11
429;this/inv3;(all ref0:(one Exit)|(ref0 !in (Track . (Track <: succs))));2;(Exit = (Track - (Track . (~ (Track <: succs)))));8
430;this/inv3;(all ref0:(one Exit),ref1:(one Semaphore),ref2:(one Signal),ref3:(one Speed),ref4:(one Track)|((ref0 != ref4) && ((ref0 -> ref1) !in (Track <: signals)) && ((ref0 -> ref2) !in (Track <: signals)) && ((ref0 -> ref3) !in (Track <: signals)) && ((ref0 -> ref4) !in (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));30
431;this/inv1;(all ref0:(one Track)|(((ref0 . (^ (Track <: succs))) = Entry) && ((ref0 . (^ (Track <: succs))) = Exit)));2;((some Entry) && (some Exit));13
432;this/inv3;(all ref0:(one Exit),ref1:(one Track)|(ref0 !in ((Track <: succs) . ref1)));2;(Exit = (Track - ((Track <: succs) . Track)));10
433;this/inv10;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));2;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
434;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(one ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));2;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));6
435;this/inv10;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));2;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
436;this/inv4;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 in Entry)));2;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));4
437;this/inv4;(all ref0:(one Track)|(((ref0 !in Exit) || (ref0 in Exit)) && ((ref0 !in Junction) || (ref0 in Junction)) && (no ((Track <: succs) . ref0))));2;(all ref0:(one Track)|(((no ((Track <: succs) . ref0)) => (ref0 in Entry)) && ((ref0 in Entry) => (no ((Track <: succs) . ref0)))));18
438;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 !in Exit) => (some (ref0 . (Track <: succs)))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));5
439;this/inv4;(all ref0:(one Entry)|(no (ref0 . (~ (Track <: succs)))));2;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));6
440;this/inv4;(all ref0:(one Entry)|(no (ref0 . (~ (^ (Track <: succs))))));2;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));7
441;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref1 -> ref0) in (Track <: signals)));2;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));4
442;this/inv3;(all ref0:(one Exit)|((no (ref0 . (Track <: succs))) && (ref0 !in Entry)));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
443;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals))) && (ref1 = ref2)));2;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));14
444;this/inv9;(all ref0:(one Track),ref1:(one (Junction - ref0))|((ref1 !in (ref0 . (^ (Track <: succs)))) => (Semaphore !in (ref0 . (^ (Track <: signals))))));2;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
445;this/inv5;(all ref0:(one Track)|((some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
446;this/inv9;(all ref0:(one Track)|(! (some ref1:(one Junction)|(((ref0 -> ref1) in (Track <: succs)) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))))));2;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));8
447;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((Junction in ((^ (Track <: succs)) . ref0)) => (ref1 in (ref0 . (Track <: signals))))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));12
448;this/inv3;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) => (Exit in ref0)));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
449;this/inv5;(all ref0:(one Track)|((! (lone (((^ (Track <: succs)) . Track) & ref0))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
450;this/inv8;(all ref0:(one Entry),ref1:(one Entry)|(ref1 in (ref0 . (^ (Track <: succs)))));2;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
451;this/inv10;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|(((ref0 . (^ (Track <: succs))) in Junction) => (ref1 in Semaphore))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
452;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (ref0 in (Track . (^ (Track <: succs))))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});13
453;this/inv2;(all ref0:(one Track)|(lone (ref0 . (Track <: signals))));2;(all ref0:(one Signal)|(one (ref0 . (~ (Track <: signals)))));5
454;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) <=> (ref0 !in (ref1 . (Track <: signals)))));2;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));6
455;this/inv10;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|(((ref0 . (Track <: succs)) in Junction) => (ref1 in Semaphore))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));9
456;this/inv3;(all ref0:(one (Track - ((Track <: succs) . Track)))|(ref0 in Exit));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
457;this/inv3;(all ref0:(one Entry)|((ref0 !in Exit) && (ref0 !in Junction)));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));9
458;this/inv3;(all ref0:(one (Track - ((Track <: succs) . Track)))|(Exit in ref0));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
459;this/inv6;(all ref0:(one Track)|((ref0 in Entry) => (one (ref0 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));6
460;this/inv5;(all ref0:(one Track)|(((no ((Track <: succs) . ref0)) && (one ((Track <: succs) . ref0))) <=> (ref0 !in Junction)));2;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
461;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (no ((ref1 . (Track <: signals)) & Semaphore))));2;(all ref0:(one Track)|((ref0 in (Track - ((Track <: succs) . Junction))) => (no ((ref0 . (Track <: signals)) & Semaphore))));11
462;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || ((one (ref1 . (Track <: succs))) && (one (ref2 . (Track <: succs))) && (ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) || ((ref0 in Junction) <=> (ref0 in (Track . (^ (Track <: succs)))))));2;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref1,ref2]) || (((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)))) && (all ref3:(one Junction)|((# ((Track <: succs) . ref3)) > 1)));35
463;this/inv9;((some Junction) implies (all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))))) else (all ref3:(one Track)|(! (some ref4:(one Semaphore)|((ref3 -> ref4) in (Track <: signals))))));2;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));19
464;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (Entry . (^ (Track <: succs)))));2;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));6
465;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => ((ref0 . (Track <: signals)) in Semaphore)));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));6
466;this/inv5;(all ref0:(one Track)|((all ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));6
467;this/inv3;(all ref0:(one Exit)|(! (some ref1:(one Track)|((ref0 -> ref1) in (Track <: succs)))));2;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));11
468;this/inv3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) && (ref0 in Exit)));2;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
469;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in ((Track <: succs) . ref2)) => (ref1 !in (ref2 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
470;this/inv3;(all ref0:(one Exit)|((# ((Track <: succs) . ref0)) = 0));2;(Exit = (Track - ((Track <: succs) . Track)));8
471;this/inv3;(all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));6
472;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track)|((2 < (# ref1)) && (ref0 in (ref1 . (Track <: succs))))));2;(all ref0:(one Track)|((2 < (# ((Track <: succs) . ref0))) <=> (ref0 in Junction)));13
473;this/inv10;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) => (ref1 in (ref2 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
474;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|(((ref0 -> ref1) in (Track <: succs)) => ((ref1 -> ref2) in (Track <: signals)))));2;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => ((ref1 -> ref2) in (Track <: signals)))));8
475;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs)) && disj[ref1,ref2])));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));20
476;this/inv5;(! (some ref0:(one Junction)|((ref0 -> ref0) in (Track <: succs))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
477;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => ((# ((ref1 . (Track <: signals)) & Semaphore)) = 0)));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));14
478;this/inv3;(no (((Track <: succs) . Track) & Exit));2;(Exit = (Track - ((Track <: succs) . Track)));7
479;this/inv3;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Exit)|(ref1 !in Junction)));2;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));9
480;this/inv3;(Exit !in ((Track <: succs) . Track));2;(Exit = (Track - ((Track <: succs) . Track)));4
481;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) <=> (ref0 in Entry)));2;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));5
482;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => ((ref0 . (^ (Track <: succs))) = Exit)));2;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));10
483;this/inv8;(all ref0:(one Entry)|(some ref1:(one Exit)|((ref0 -> ref1) in (Track <: succs))));2;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));5
484;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 in Entry)));2;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));11
485;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs))))) => (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
486;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));16
487;this/inv9;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (Semaphore !in (ref0 . (Track <: signals)))) || ((ref0 -> ref1) !in (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));25
488;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) || ((ref0 in Exit) => (one (ref0 . (Track <: succs))))));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
489;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (ref0 in (ref0 . (Track <: succs)))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));9
490;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs)));2;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));10
491;this/inv3;((all ref0:(one Track)|(ref0 !in (ref0 . (Track <: succs)))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));2;(all ref0:(one Exit),ref1:(one Track)|((no (ref0 . (Track <: succs))) && ((no (ref1 . (Track <: succs))) => (ref1 in Exit))));7
492;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => (some ((ref0 . (^ (Track <: succs))) & Entry))));2;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));9
493;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => (some ((ref0 . (^ (Track <: succs))) & Exit))));2;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));9
494;this/inv3;(all ref0:(one Exit)|((no (ref0 . (Track <: succs))) && (ref0 !in Entry) && (ref0 !in Junction)));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));11
495;this/inv10;(all ref0:(one Track)|((one (((Track <: succs) . ref0) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));2;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));6
496;this/inv5;(all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref1 in (ref1 . (Track <: succs)))));2;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
497;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 in Exit) => ((ref1 -> ref0) !in (Track <: succs))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));12
498;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no ((ref0 . (Track <: succs)) & Track))));2;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
499;this/inv9;(all ref0:(one Track)|((Junction in ((Track <: succs) . ref0)) => (Semaphore !in (ref0 . (Track <: signals)))));2;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));11
500;this/inv9;(all ref0:(one Track)|((Junction in (ref0 . (Track <: succs))) => (no ((ref0 . (Track <: signals)) & Semaphore))));2;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));7
501;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 & ref2) in (ref0 . (~ (Track <: succs)))))) <=> (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));11
502;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (no (ref0 . (Track <: succs)))));2;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));8
503;this/inv3;(all ref0:(one Exit)|((# (ref0 . (Track <: succs))) < 1));2;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));8
504;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (Track . (^ (Track <: succs))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));12
505;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) => (ref0 in Junction)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
506;this/inv5;(all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|((ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs)))) && (ref1 != ref2)));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
507;this/inv5;(all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|((ref1 != ref2) => (ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));16
508;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in ((ref0 . (^ (Track <: succs))) - ref0)));2;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));6
509;this/inv3;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (Exit in ref0))) && (all ref1:(one Track)|((Exit in ref1) => (no (ref1 . (Track <: succs))))));2;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));9
510;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (ref0 & (Track . (^ (Track <: succs)))))));2;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));14
511;this/inv5;(all ref0:(one Track)|(((# (ref0 & (Track . (^ (Track <: succs))))) > 1) <=> (ref0 in Junction)));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));7
512;this/inv5;((all ref0:(one Track)|(ref0 !in (ref0 . (Track <: succs)))) && (all ref1:(one Track)|(((# (ref1 & (Track . (^ (Track <: succs))))) > 1) <=> (ref1 in Junction))));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));16
513;this/inv5;(all ref0:(one Junction)|((# (Track . (^ (Track <: succs)))) > int[((# ((Track . (^ (Track <: succs))) - ref0)) + 1)]));2;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));18
514;this/inv5;((all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) => ((ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track)|((ref3 !in (Track . (Track <: succs))) => (ref3 !in Junction))));2;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));22
515;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((no (ref1 . (Track <: succs))) <=> (ref0 in (ref1 . (Track <: signals)))));2;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
516;this/inv8;(all ref0:(one Track)|((ref0 in Exit) => (ref0 in (Entry . (* (Track <: succs))))));2;((Entry -> Exit) in (* (Track <: succs)));9
517;this/inv5;((all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 !in Junction))) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|(((ref1 !in (ref3 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))) && (ref2 != ref3)) => (ref1 !in Junction))));2;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));31
518;this/inv10;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|((some ((ref0 . (Track <: succs)) & Junction)) => (ref1 in Semaphore))));2;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));10
519;this/inv5;((all ref0:(one Track)|((ref0 !in Junction) <=> (ref0 !in (Track . (Track <: succs))))) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|(((ref1 != ref2) && (ref1 != ref3) && (ref1 !in (ref3 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))) && (ref2 != ref3)) <=> (ref1 !in Junction))));2;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));35
520;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((Junction !in ((Track <: succs) . ref1)) => (ref0 !in (ref1 . (Track <: signals)))));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));9
521;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! (ref0 in (ref1 . (Track <: succs)))) => (no ((ref1 . (Track <: signals)) & Semaphore))));2;(all ref0:(one Track)|((ref0 in (Track - ((Track <: succs) . Junction))) => (no ((ref0 . (Track <: signals)) & Semaphore))));10
522;this/inv10;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (Semaphore in (ref1 . (Track <: signals)))));2;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));7
523;this/inv9;(all ref0:(one Track)|(((ref0 . (^ (Track <: succs))) !in Junction) => ((ref0 . (Track <: signals)) !in Semaphore)));2;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));7
524;this/inv10;(all ref0:(one Track)|((some (((Track <: succs) . ref0) & Junction)) => (some ((((Track <: succs) . ref0) . (Track <: signals)) & Semaphore))));2;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));6
525;this/inv10;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref2 in (ref1 . (Track <: succs))) && (Junction in ref2)) => ((ref0 in (ref1 . (Track <: signals))) && (ref0 in Semaphore))));2;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));18
526;this/inv5;((all ref0:(one Track)|((ref0 in (Track . (Track <: succs))) => (ref0 in Junction))) && (all ref1:(one Junction)|(ref1 in (Track . (Track <: succs)))));2;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));17
527;this/inv10;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((no (ref0 . (Track <: signals))) && (ref1 in (ref2 . (Track <: signals)))));2;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));14
528;this/inv8;((all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs))))) && (no Semaphore) && (no Signal) && (no Speed));2;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));11
529;this/inv10;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (Semaphore in (ref0 . (Track <: signals)))));2;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));7
530;this/inv8;(all ref0:(one Track)|((one (ref0 & Exit)) => (ref0 in (Track . (^ (Track <: succs))))));2;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));11
531;this/inv8;(all ref0:(one Track)|((one (ref0 & Entry)) || ((one (ref0 & Exit)) => (ref0 in (Track . (^ (Track <: succs)))))));2;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit)) && (ref0 != ref1)) => (ref1 in (ref0 . (^ (Track <: succs))))));16
532;this/inv1;((some Entry) || (some Exit));1;((some Entry) && (some Exit));2
533;this/inv1;(all ref0:(one Track)|(some ((Track <: succs) . ref0)));1;(some (Entry -> Exit));7
534;this/inv2;((~ (Track <: signals)) in (Signal one->lone Track));1;((Track <: signals) in (Track one-> Signal));5
535;this/inv5;(all ref0:(one Junction)|((! (one (ref0 . (Track <: succs)))) && (some (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|(((! (one (ref0 . (~ (Track <: succs))))) && (some (ref0 . (~ (Track <: succs))))) <=> (ref0 in Junction)));8
536;this/inv2;(all ref0:(one Track),ref1:(one Track)|((ref0 != ref1) => (no ((ref0 . (Track <: signals)) & (ref1 . (Track <: signals))))));1;((all ref0:(one Track),ref1:(one Track)|((ref0 != ref1) => (no ((ref0 . (Track <: signals)) & (ref1 . (Track <: signals)))))) && (no (Signal - (Track . (Track <: signals)))));11
537;this/inv2;(all ref0:(one Track),ref1:(one Track)|(some ref2:(one Signal)|(((ref2 in (ref0 . (Track <: signals))) && (ref2 in (ref1 . (Track <: signals)))) => (ref0 = ref1))));1;((all ref0:(one Signal)|(lone ((Track <: signals) . ref0))) && (Signal in (Track . (Track <: signals))));17
538;this/inv3;(((Track <: succs) . none) = Exit);1;(Exit = (Track - ((Track <: succs) . Track)));6
539;this/inv5;(all ref0:(one Track)|(((! (one (ref0 . (Track <: succs)))) && (some (ref0 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((! (one (ref0 . (~ (Track <: succs))))) && (some (ref0 . (~ (Track <: succs))))) <=> (ref0 in Junction)));4
540;this/inv7;(all ref0:(one Exit)|(no ref1:(one Entry)|(ref1 in (ref0 . (^ (Track <: succs))))));1;(no ref0:(one Track)|(ref0 in (ref0 . (^ (Track <: succs)))));5
541;this/inv2;(one Track);1;((Track <: signals) in (Track one-> Signal));5
542;this/inv5;(all ref0:(one Junction),ref1:(one Track)|(some ((ref1 . (Track <: succs)) & Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));12
543;this/inv5;(all ref0:(one Junction),ref1:(one Track)|(some (ref0 & (ref1 . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});12
544;this/inv7;(no (Entry & (Exit . (^ (Track <: succs)))));1;(no ((^ (Track <: succs)) & iden));4
545;this/inv3;(all ref0:(one Exit),ref1:(one Track)|(ref1 !in ((Track <: succs) . ref0)));1;(Exit = (Track - ((Track <: succs) . Track)));10
546;this/inv4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));3
547;this/inv7;(no (Entry & (Exit . (* (Track <: succs)))));1;(no ((^ (Track <: succs)) & iden));6
548;this/inv6;(all ref0:(one Signal),ref1:(one Track)|((ref1 in Entry) => ((ref0 in Speed) && ((ref1 -> ref0) in (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))))));12
549;this/inv3;(all ref0:(one Track)|((ref0 in (ref0 . (^ (Track <: succs)))) => (ref0 !in Exit)));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));9
550;this/inv5;(all ref0:(one Junction),ref1:(one Track)|((! (one (ref0 & (ref1 . (Track <: succs))))) && (some (ref0 & (ref1 . (Track <: succs))))));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));15
551;this/inv2;(all ref0:(one Signal)|(some (ref0 & (Track . (Track <: signals)))));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));8
552;this/inv5;(some (Junction & (Track . (Track <: succs))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});8
553;this/inv6;(all ref0:(one Track)|(one ref1:(one Signal)|((ref0 in Entry) => (((ref0 -> ref1) in (Track <: signals)) && (ref1 in Speed)))));1;(all ref0:(one Track)|(some ref1:(one Signal)|((ref0 in Entry) => (((ref0 -> ref1) in (Track <: signals)) && (ref1 in Speed)))));4
554;this/inv5;(Junction in (Track . (Track <: succs)));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});7
555;this/inv5;(Junction in ((Track . (Track <: succs)) . (Track <: succs)));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});9
556;this/inv6;(all ref0:(one Track)|(one ref1:(one Signal)|((((ref0 -> ref1) in (Track <: signals)) && (ref0 in Entry)) => (ref1 in Speed))));1;(all ref0:(one Entry)|(some ref1:(one Signal)|(((ref0 -> ref1) in (Track <: signals)) && (ref1 in Speed))));10
557;this/inv1;(some ref0:(one Entry),ref1:(one Junction)|((ref0 in Track) && (ref1 in Track)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));4
558;this/inv5;(Junction = (Track - ((Track . (Track <: succs)) . (Track <: succs))));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));6
559;this/inv2;(all ref0:(one Track),ref1:(one Track)|((no ((ref0 . (Track <: signals)) & (ref1 . (Track <: signals)))) && (ref0 != ref1)));1;(all ref0:(one Signal)|(some ref1:(one Track)|((no (ref0 & ((Track - ref1) . (Track <: signals)))) && (ref0 in (ref1 . (Track <: signals))))));12
560;this/inv4;(Track in (Entry . (* (Track <: succs))));1;(Entry = (Track - (Track . (Track <: succs))));7
561;this/inv1;(some ref0:(one Entry),ref1:(one Junction)|((ref0 in Entry) || (ref1 in Track)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));6
562;this/inv4;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));5
563;this/inv5;(Junction = (Track - ((Track . (Track <: succs)) . (^ (Track <: succs)))));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));7
564;this/inv9;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref2) in (Track <: succs)) && (ref2 in Junction)) => ((ref0 !in Semaphore) && ((ref1 -> ref0) in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));20
565;this/inv4;(Track in (Entry . (^ (Track <: succs))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));6
566;this/inv2;(all ref0:(one Signal)|(lone (ref0 . (Track <: signals))));1;(all ref0:(one Signal)|(one (ref0 . (~ (Track <: signals)))));5
567;this/inv4;((one Entry) && (Track in (Entry . (* (Track <: succs)))));1;(Entry = (Track - (Track . (Track <: succs))));8
568;this/inv9;(all ref0:(one Track),ref1:(one Track)|(some ref2:(one Signal)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction)) => (((ref0 -> ref2) in (Track <: signals)) && (ref2 !in Semaphore)))));1;(all ref0:(one Track)|((all ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Junction))) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore)))));12
569;this/inv5;(Junction in (Track . (^ ((Track <: succs) . (Track <: succs)))));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));9
570;this/inv6;(all ref0:(one Track)|(some ref1:(one Signal)|(((ref0 in Entry) && (ref1 in (ref0 . (Track <: signals)))) => (ref1 in Speed))));1;(all ref0:(one Track)|(some ref1:(one Signal)|((ref0 in Entry) => ((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed)))));6
571;this/inv4;(all ref0:(one Entry)|(no (ref0 . (Track <: succs))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});6
572;this/inv9;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref0) in (Track <: signals)) && ((ref1 -> ref2) in (Track <: succs)) && (ref2 in Junction)) => (ref0 !in Semaphore)));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));19
573;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref1 in ((Track <: succs) . ref0)) && (ref2 in ((Track <: succs) . ref0))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));11
574;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 in (ref1 . (Track <: succs))) && (ref1 in (ref0 . (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
575;this/inv4;((no (Entry -> Entry)) && (Track in (Entry . (* (Track <: succs)))));1;(Entry = (Track - (Track . (Track <: succs))));10
576;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (ref0 in (((Track . (Track <: succs)) . (Track <: succs)) . (^ (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));17
577;this/inv3;(all ref0:(one Track),ref1:(one Track)|((no (Track <: succs)) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
578;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 in (ref2 . (Track <: succs))) && (ref1 in (ref0 . (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
579;this/inv6;(all ref0:(one Track)|(some ref1:(one Speed)|((ref0 in Entry) && (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))))));6
580;this/inv9;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref2) in (Track <: succs)) && (ref1 in Junction) && ((ref2 -> ref0) in (Track <: signals))) => (ref0 !in Semaphore)));1;(all ref0:(one Track)|((all ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Junction))) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore)))));17
581;this/inv3;(all ref0:(one Track)|((no (Track <: succs)) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
582;this/inv5;(Junction in ((Track . (Track <: succs)) . (^ (Track <: succs))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});10
583;this/inv8;(Exit in (Track . (* (Track <: succs))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));3
584;this/inv9;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref2) in (Track <: succs)) && (ref1 in Junction)) => ((ref0 !in Semaphore) && ((ref2 -> ref0) in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));20
585;this/inv3;(no ((Exit . (Track <: succs)) & (Track . (Track <: succs))));1;(Exit = (Track - (Track . (~ (Track <: succs)))));8
586;this/inv5;(Junction in (((Track . (Track <: succs)) . (^ (Track <: succs))) - Junction));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));11
587;this/inv6;((Track <: signals) in (Entry ->some Signal));1;(Entry in ((Track <: signals) . Speed));6
588;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no (Track <: succs))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
589;this/inv5;(all ref0:(one Junction)|((# ((Track <: succs) . ref0)) = 2));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});7
590;this/inv9;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((((ref1 -> ref2) in (Track <: succs)) && (ref2 !in Junction)) => ((ref0 !in Semaphore) && ((ref1 -> ref0) in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));20
591;this/inv8;((Track -> Exit) in (^ (Track <: succs)));1;((Entry -> Exit) in (* (Track <: succs)));4
592;this/inv5;(all ref0:(one Track)|((lone ((Track <: succs) . ref0)) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));3
593;this/inv6;(all ref0:(one Signal),ref1:(one Track)|((((ref1 -> ref0) in (Track <: signals)) && (ref1 = Entry)) => (Speed in ref0)));1;(all ref0:(one Entry)|(some ref1:(one Signal)|(((ref0 -> ref1) in (Track <: signals)) && (ref1 in Speed))));14
594;this/inv8;((Track -> Exit) in (* (Track <: succs)));1;((Entry -> Exit) in (* (Track <: succs)));2
595;this/inv3;(all ref0:(one Exit)|(no ((ref0 . (Track <: succs)) & Track)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
596;this/inv3;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (Track !in (Track . (^ (Track <: succs)))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (no (Exit . (Track <: succs))));8
597;this/inv8;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Entry) && (ref1 in Exit)) => (ref0 in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Entry) && (ref1 in Exit)) => ((ref0 -> ref1) in (* (Track <: succs)))));8
598;this/inv5;(all ref0:(one Junction)|(ref0 in (((Track . (Track <: succs)) . (^ (Track <: succs))) - ref0)));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));12
599;this/inv5;(all ref0:(one Track)|(some ref1:(one Track)|(((ref1 in ((Track <: succs) . ref0)) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
600;this/inv5;(all ref0:(one Junction)|(ref0 in ((Track . (^ (Track <: succs))) - ref0)));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));10
601;this/inv3;(some (Track - Exit));1;(Exit = (Track - ((Track <: succs) . Track)));7
602;this/inv4;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));6
603;this/inv9;(no ((((Track <: succs) . (Track - Junction)) . (Track <: signals)) & Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));6
604;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref0 != ref1) && ((ref0 -> ref1) !in (Track <: succs))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
605;this/inv3;(some ((Track - Exit) . (Track <: succs)));1;(Exit = (Track - (Track . (~ (Track <: succs)))));8
606;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 = Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
607;this/inv9;(all ref0:(one Track)|(! (some ((ref0 . (^ (Track <: succs))) & Junction))));1;(all ref0:(one Track)|((! (some ((ref0 . (Track <: succs)) & Junction))) => (! (some ((ref0 . (Track <: signals)) & Semaphore)))));11
608;this/inv7;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref1 . (Track <: succs)))) => ((ref0 != ref1) && (ref1 != ref2))));1;(all ref0:(one Track),ref1:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) => (ref0 != ref1)));18
609;this/inv2;((Track . (Track <: signals)) in Signal);1;((Track <: signals) in (Track one-> Signal));4
610;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 0) => (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));4
611;this/inv7;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref1 . (Track <: succs)))) => ((ref0 != ref1) && (ref0 != ref2) && (ref1 != ref2))));1;(all ref0:(one Track),ref1:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) => (ref0 != ref1)));21
612;this/inv3;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) && (ref0 !in (ref0 . (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
613;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((some ((Track <: succs) . ref0)) && (some (ref0 . (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});14
614;this/inv7;(all ref0:(one Track),ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => ((ref0 != ref1) && (ref0 !in (ref0 . (Track <: succs))))));1;(all ref0:(one univ)|((ref0 in Track) => (ref0 !in (ref0 . (^ (Track <: succs))))));12
615;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 2) => (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));4
616;this/inv1;((lone Exit) && (some Entry));1;((some Entry) && (some Exit));4
617;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in ((Track - Exit) - Entry))));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
618;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) => (! (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));10
619;this/inv7;((all ref0:(one Track),ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (ref0 != ref1))) && (all ref2:(one Track)|(ref2 !in (ref2 . (Track <: succs)))));1;(all ref0:(one Track),ref1:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) => (ref0 != ref1)));16
620;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in (Junction & Track))));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
621;this/inv6;(all ref0:(one Entry)|(one ((Track <: signals) . Speed)));1;(Entry in ((Track <: signals) . Speed));4
622;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((no ((ref0 . (Track <: signals)) & Speed)) <=> (no ((ref0 . (Track <: succs)) & Junction)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));13
623;this/inv5;(all ref0:(one Junction)|((ref0 !in (ref0 . (Track <: succs))) && (ref0 in ((Track . (Track <: succs)) . (^ (Track <: succs))))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));17
624;this/inv7;((all ref0:(one Track),ref1:(one Track)|((ref0 != ref1) => (ref1 in (ref0 . (Track <: succs))))) && (all ref2:(one Track)|(ref2 !in (ref2 . (Track <: succs)))));1;(all ref0:(one Track)|(ref0 !in (ref0 . (^ (Track <: succs)))));17
625;this/inv6;(all ref0:(one Entry)|(one Speed));1;(Entry in ((Track <: signals) . Speed));6
626;this/inv7;((all ref0:(one Track),ref1:(one Track)|((ref0 != ref1) => ((ref0 in (ref1 . (Track <: succs))) && (ref1 in (ref0 . (Track <: succs)))))) && (all ref2:(one Track)|(ref2 !in (ref2 . (Track <: succs)))));1;(all ref0:(one Track),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (ref1 !in (ref0 . (^ (Track <: succs))))));18
627;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (lone (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));8
628;this/inv4;(all ref0:(one Entry),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) && (ref1 !in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));11
629;this/inv3;(some (Exit . (Track <: succs)));1;(Exit = (Track - ((Track <: succs) . Track)));7
630;this/inv5;(all ref0:(one Track)|(Junction in ((ref0 . (Track <: succs)) . (^ (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
631;this/inv5;(all ref0:(one Track)|(some ref1:(one (Track - ref0)),ref2:(one ((Track - ref0) - ref1))|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
632;this/inv9;(all ref0:(one Track),ref1:(one (ref0 . (Track <: succs)))|((ref1 !in Junction) => (no ((ref0 . (Track <: signals)) & Speed))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));12
633;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => ((no (ref0 . (Track <: succs))) && (ref0 !in Junction))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
634;this/inv4;(all ref0:(one Track)|(some ref1:(one Entry)|(ref1 !in (ref0 . (^ (Track <: succs))))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));10
635;this/inv9;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref1 !in (ref0 . (^ (Track <: succs)))) && (ref1 in Junction)) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));16
636;this/inv3;((all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Exit))) && (no (Exit . (Track <: succs))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (no (Exit . (Track <: succs))));12
637;this/inv8;(all ref0:(one Exit),ref1:(one Track)|((ref1 in Entry) => (ref0 in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (* (Track <: succs))))));10
638;this/inv9;(all ref0:(one Track)|((Junction in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
639;this/inv6;(all ref0:(one Speed),ref1:(one Track)|((ref1 in Entry) => (Speed in (ref1 . (Track <: signals)))));1;(Entry in ((Track <: signals) . Speed));10
640;this/inv3;((all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 !in Exit))) && (no (Exit . (Track <: succs))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (no (Exit . (Track <: succs))));10
641;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => ((no (ref0 . (Track <: succs))) && (ref0 !in (Entry + Junction)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));14
642;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) <=> (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));10
643;this/inv5;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in (ref1 . (Track <: succs))) && (ref0 in ((Track - ref1) . (Track <: succs)))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
644;this/inv6;(all ref0:(one Speed),ref1:(one Track)|((ref1 in Entry) => (some ((Track <: signals) . ref0))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));9
645;this/inv3;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((ref0 !in (Entry + Junction)) && (ref0 in Exit)))) && (all ref1:(one Track)|(ref1 !in (ref1 . (Track <: succs)))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))));13
646;this/inv10;(all ref0:(one Track)|(((Track <: succs) . ref0) !in Junction));1;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));9
647;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((ref1 !in Junction) => (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));9
648;this/inv6;(all ref0:(one Speed),ref1:(one Track)|((ref1 in Entry) => (one ((Track <: signals) . ref0))));1;(Entry in ((Track <: signals) . Speed));9
649;this/inv5;(all ref0:(one Track),ref1:(one Track)|(((ref0 != ref1) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in ((Track - ref1) . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
650;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals)))) <=> (ref1 in (ref0 . (Track <: succs))))));1;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));13
651;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((ref0 !in (ref1 . (Track <: signals))) => (ref1 !in Junction)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));12
652;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && (((ref1 + ref2) in ((Track <: succs) . ref0)) => (ref0 in Junction)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));10
653;this/inv3;((Exit . (Track <: succs)) = (Track . (Track <: succs)));1;(Exit = (Track - (Track . (~ (Track <: succs)))));5
654;this/inv3;(no ref0:(one Exit)|(some (ref0 . (Track <: succs))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));6
655;this/inv10;(all ref0:(one Track)|((((Track <: succs) . ref0) in Junction) => (some (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));8
656;this/inv10;(all ref0:(one Semaphore),ref1:(one Track)|((Junction in (ref1 . (Track <: succs))) => (ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));9
657;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: signals)) !in Semaphore) <=> ((ref0 . (Track <: succs)) !in Junction)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));11
658;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (some (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));8
659;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (some (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));6
660;this/inv1;(all ref0:(one Track)|((Entry in Track) && (Exit in Track)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));7
661;this/inv2;((all ref0:(one Signal)|(one ((Track <: signals) . ref0))) && (one ((Track <: signals) . Signal)));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));7
662;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((ref1 in Exit) => (ref1 !in Junction))) && (all ref2:(one Track)|((ref2 in Exit) => (ref2 !in Entry))));1;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));19
663;this/inv3;(all ref0:(one (Track - Exit))|(ref0 !in (Exit . (Track <: succs))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));8
664;this/inv2;(lone ((Track <: signals) . Signal));1;((Track <: signals) in (Track one-> Signal));5
665;this/inv5;(all ref0:(one Junction)|((# (ref0 . (Track <: succs))) > 1));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
666;this/inv3;(some ref0:(one Exit),ref1:(one Track)|((ref0 in ref1) => (no (ref1 . (Track <: succs)))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));12
667;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Speed)) <=> (no ((ref0 . (^ (Track <: succs))) & Junction))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));13
668;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (! (lone (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));9
669;this/inv9;(all ref0:(one Track)|(ref0 in (((Track <: succs) . Junction) - ((Track <: signals) . Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));8
670;this/inv3;((all ref2:(one Track)|(ref2 != (ref2 . (Track <: succs)))) && (some ref0:(one Exit),ref1:(one Track)|((ref0 in ref1) => (no (ref1 . (Track <: succs))))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))));14
671;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (no ((Entry & Junction) & Exit)));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (no (Exit . (Track <: succs))));14
672;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref1 in ((Track <: succs) . ref0)) => (ref1 !in ((Track <: signals) . Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
673;this/inv10;(all ref0:(one Track)|((! (lone (ref0 . (Track <: signals)))) <=> ((ref0 . (Track <: succs)) in Junction)));1;(all ref0:(one Track)|((some ((ref0 . (Track <: signals)) & Semaphore)) <=> (some ((ref0 . (Track <: succs)) & Junction))));10
674;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((no (ref0 & (ref1 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));9
675;this/inv2;(all ref0:(one Signal)|(ref0 in (one (Track . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));6
676;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref1 !in ((Track <: succs) . ref0)) => (ref1 !in ((Track <: signals) . Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));9
677;this/inv2;(one ref0:(one Track)|(all ref1:(one Signal)|((ref0 . (Track <: signals)) = ref1)));1;(all ref0:(one Signal)|(one (ref0 . (~ (Track <: signals)))));7
678;this/inv5;(all ref0:(one (Track - Junction))|(! ((# ((Track <: succs) . ref0)) > 1)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));7
679;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (ref1 !in ((Track <: signals) . Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));9
680;this/inv8;(all ref0:(one Entry)|((ref0 !in Exit) && (Exit in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));8
681;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) <=> (some (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));8
682;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (ref1 !in ((Track <: signals) . Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));7
683;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction))) && (all ref3:(one Junction)|(ref3 !in (ref3 & (Track . (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));25
684;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (no (Entry & Exit)) && (no (Entry & Junction)) && (no (Exit & Junction)) && (((Entry + Junction) + Exit) = Track));1;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));26
685;this/inv2;(one (Signal & (Track . (Track <: signals))));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));5
686;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction))) && (all ref3:(one Junction)|(ref3 !in (ref3 . (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));23
687;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction))) && (all ref3:(one Track)|(ref3 !in (ref3 . (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));23
688;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 != ref1) && (ref0 != ref2) && (ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));19
689;this/inv3;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit))) && (((Entry + Junction) + Exit) = Track));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
690;this/inv4;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((none = (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));5
691;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in ((Junction - Exit) - Entry))));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));8
692;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 != ref1) && (ref0 != ref2) && (ref1 != ref2) && (ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));22
693;this/inv5;(Junction = (Track . {ref0:(one Track),ref1:(one Track)|((ref0 -> ref1) in (Track <: succs))}));1;(Junction = (Track . {ref0:(one Track),ref1:(one Track)|((! (lone ((Track <: succs) . ref1))) && ((ref0 -> ref1) in (Track <: succs)))}));10
694;this/inv5;(all ref0:(one Track)|(ref0 !in (ref0 . (Track <: succs))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});10
695;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in (Junction - ((Entry & Junction) & Exit)))));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
696;this/inv4;(all ref0:(one Track)|((none = (ref0 . (^ (~ (Track <: succs))))) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((none = (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));5
697;this/inv8;(all ref0:(one Entry)|(some ref1:(one Exit)|(ref1 in (ref0 . (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs)))));5
698;this/inv1;(all ref0:(one Track)|((((Track <: succs) . ref0) in Entry) && ((ref0 . (Track <: succs)) in Exit)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));9
699;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && (((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) || (((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs)))) <=> (ref0 in Junction))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));25
700;this/inv4;(all ref0:(one Track)|((none = (ref0 . (~ (Track <: succs)))) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((none = (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));4
701;this/inv5;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => ((ref0 !in ((Entry + Exit) - Junction)) && (ref0 in Junction))));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));12
702;this/inv9;(all ref0:(one Track)|(ref0 !in (((Track <: signals) . Semaphore) + ((Track <: succs) . Junction))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));5
703;this/inv4;(all ref0:(one Track)|((no (Track . (^ (Track <: succs)))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no ((^ (Track <: succs)) . ref0)) <=> (ref0 in Entry)));4
704;this/inv5;(some ((Track <: succs) . Junction));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});8
705;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|((((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)) && disj[ref1,ref2])));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
706;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one (Track - ref0))|((((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
707;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => (all ref1:(one Semaphore)|(ref1 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (all ref1:(one Semaphore)|(ref1 !in (ref0 . (Track <: signals))))));7
708;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
709;this/inv5;(some ref0:(one Track),ref1:(one Track)|(all ref2:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
710;this/inv5;(Junction = (Track . {ref0:(one Track),ref1:(one Track)|((! (lone ((Track <: succs) . ref0))) && ((ref0 -> ref1) in (Track <: succs)))}));1;(Junction = (Track . {ref0:(one Track),ref1:(one Track)|((! (lone ((Track <: succs) . ref1))) && ((ref0 -> ref1) in (Track <: succs)))}));6
711;this/inv5;(some ref0:(one Track),ref1:(one (Track - ref0))|(all ref2:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
712;this/inv6;(all ref0:(one Track)|(one ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
713;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref1,ref2]) || (((ref1 + ref2) in ((Track <: succs) . ref0)) => (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));11
714;this/inv5;(all ref0:(one Track)|(((# (ref0 & (Track . (Track <: succs)))) > 2) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));6
715;this/inv3;(one ref0:(one Track)|(all ref1:(one (Track - ref0))|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));6
716;this/inv3;(all ref0:(one Track)|((none = (ref0 . (^ (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));5
717;this/inv9;(all ref0:(one Track)|(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));3
718;this/inv5;(some ref0:(one Track),ref1:(one (Track - Exit))|(all ref2:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
719;this/inv8;(all ref0:(one Exit)|(some ref1:(one Entry)|(ref1 in ((Track <: succs) . ref0))));1;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs)))));7
720;this/inv1;(all ref0:(one Track)|((Int[(# (ref0 . (Track <: succs)))] in Entry) && (Int[(# (ref0 . (Track <: succs)))] in Exit)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));13
721;this/inv4;(one ref0:(one Track)|(all ref1:(one (Track - ref0))|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Entry))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));6
722;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (((Track <: succs) . ref0) = none)));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});9
723;this/inv8;(all ref0:(one Exit)|(some ref1:(one Entry)|(ref1 in ((^ (Track <: succs)) . ref0))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));6
724;this/inv4;((all ref0:(one Track)|((ref0 in Entry) => ((# (ref0 . (Track <: succs))) = 0))) && (all ref1:(one Track)|(((# (ref1 . (Track <: succs))) = 0) => (ref1 in Entry))));1;((all ref0:(one Track)|((ref0 in Entry) => ((# ((Track <: succs) . ref0)) = 0))) && (all ref1:(one Track)|(((# ((Track <: succs) . ref1)) = 0) => (ref1 in Entry))));8
725;this/inv1;(all ref0:(one Track)|((some (Entry & Track)) && (some (Exit & Track))));1;((some (Entry & Track)) && (some (Exit & Track)));1
726;this/inv4;(one ref0:(one Track)|(all ref1:(one (Track - ref0))|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Entry))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));8
727;this/inv1;(all ref0:(one Track)|(((# ((ref0 . (Track <: succs)) & Entry)) > 1) && ((# ((ref0 . (Track <: succs)) & Exit)) > 1)));1;(((# Entry) > 0) && ((# Exit) > 0));9
728;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction))) && (no (Track . (Track <: succs))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));18
729;this/inv4;(one ref0:(one Track)|(all ref1:(one (Track - ref0))|(((ref0 -> ref1) in (Track <: succs)) => (ref0 in Entry))));1;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));9
730;this/inv4;(some ref0:(one Track)|(all ref1:(one (Track - ref0))|((((ref0 -> ref1) !in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs))) => (ref0 in Entry))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));14
731;this/inv5;(some ref0:(one (Track - Exit)),ref1:(one (Track - Exit))|(all ref2:(one Track)|(((ref0 != ref2) && ((ref0 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));16
732;this/inv1;(all ref0:(one Track)|((some (ref0 & Entry)) && (some ((ref0 . (Track <: succs)) & Exit))));1;((some (Entry & Track)) && (some (Exit & Track)));7
733;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) <=> (ref0 in Junction))) && (one (Track . (Track <: succs))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));18
734;this/inv1;(all ref0:(one Track)|((some (((Track <: succs) . ref0) & Entry)) && (some ((ref0 . (Track <: succs)) & Exit))));1;((some (Entry & Track)) && (some (Exit & Track)));9
735;this/inv3;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Track) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
736;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs)))) && (ref1 != ref2))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
737;this/inv5;(all ref0:(one Track)|((lone (ref0 & (Track . (Track <: succs)))) <=> (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
738;this/inv1;(all ref0:(one Track)|((1 < (# (((Track <: succs) . ref0) & Entry))) && (1 < (# ((ref0 . (Track <: succs)) & Exit)))));1;((1 < (# Entry)) && (1 < (# Exit)));9
739;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref1 -> ref1) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));20
740;this/inv5;(all ref0:(one Track)|((lone ((ref0 & Track) - (ref0 . (Track <: succs)))) <=> (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));11
741;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref1 -> ref1) !in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))) => (ref1 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));22
742;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (((no (ref0 . (Track <: succs))) && (no (ref0 . (Track <: succs)))) => (ref0 in Exit))));1;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));13
743;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (((# (ref0 . (Track <: succs))) > 1) && (ref0 !in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));15
744;this/inv6;(Entry = (Track . ((Track <: signals) :> Speed)));1;(Entry in ((Track <: signals) . Speed));4
745;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));7
746;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) <=> (Semaphore !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
747;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref2 !in (ref0 . (Track <: succs))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
748;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => ((ref1 . (Track <: succs)) in (Track - ref0))));1;(Entry = (Track - {ref0:(one Track)|(some ((Track <: succs) . ref0))}));14
749;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|(all ref2:(one Semaphore)|((ref1 in ((Track <: succs) . ref0)) => (ref2 !in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
750;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 + ref2) in ref0)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));9
751;this/inv5;(some ref0:(one Track),ref1:(one Track)|(all ref2:(one Track)|(((ref0 != ref1) && ((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref2) in (Track <: succs))) => (ref2 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));16
752;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((no (ref1 . (Track <: succs))) => ((no (ref0 . (Track <: succs))) && (ref1 in Exit))));1;((all ref0:(one Exit)|(no (ref0 . (Track <: succs)))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) <=> (ref1 in Exit))));12
753;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|(all ref2:(one Semaphore)|(((ref0 != ref1) && (ref1 in ((Track <: succs) . ref0))) => (ref2 !in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));13
754;this/inv4;((all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => ((ref1 . (Track <: succs)) in (Track - ref0)))) && (all ref2:(one Track),ref3:(one Track)|(((ref3 . (Track <: succs)) in (Track - ref2)) => (ref2 in Entry))));1;((all ref0:(one Track)|((ref0 in Entry) => (ref0 !in (Track . (Track <: succs))))) && (all ref1:(one Track)|((ref1 !in (Track . (Track <: succs))) => (ref1 in Entry))));24
755;this/inv8;(all ref0:(one Entry)|((# ((ref0 . (Track <: succs)) & Exit)) = (# Exit)));1;(all ref0:(one Entry)|(((ref0 . (* (Track <: succs))) & Exit) = Exit));5
756;this/inv5;(all ref0:(one Track)|(((# (ref0 & ((Track - ref0) . (Track <: succs)))) > 1) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
757;this/inv8;(all ref0:(one Entry)|((# ((ref0 . (^ (Track <: succs))) & Exit)) = (# Exit)));1;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));6
758;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|(all ref2:(one Semaphore)|(((ref0 != ref1) && (ref0 in (ref1 . (^ (Track <: succs))))) => (ref2 !in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));15
759;this/inv4;(some ref0:(one Track)|(no ((Track <: succs) . ref0)));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});4
760;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(some ref2:(one Junction)|(((ref1 != ref2) && (ref1 in (ref2 . (^ (Track <: succs))))) => (ref0 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no (((Track <: succs) . Junction) & ref1)) => (ref0 !in (ref1 . (Track <: signals)))));17
761;this/inv5;(all ref0:(one Track)|((lone (ref0 & ((Track - ref0) . (Track <: succs)))) <=> (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));11
762;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(some ref2:(one Junction)|(((ref1 != ref2) && (ref1 in (ref2 . (Track <: succs)))) => (ref0 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no (((Track <: succs) . Junction) & ref1)) => (ref0 !in (ref1 . (Track <: signals)))));16
763;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => (ref0 !in (ref1 . (^ (Track <: succs))))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));12
764;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
765;this/inv8;(Entry in ((^ (Track <: succs)) . Exit));1;((Entry -> Exit) in (* (Track <: succs)));6
766;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(some ref2:(one Junction)|(((ref1 != ref2) && (ref1 !in (ref2 . (Track <: succs)))) => (ref0 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));14
767;this/inv5;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((ref0 in Junction) => (ref1 in ((^ (Track <: succs)) . ref0)))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));17
768;this/inv8;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in Entry) && (ref1 in Exit)) => (ref0 in (ref1 . (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs)))))));9
769;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));6
770;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 in (ref1 . (^ (Track <: succs)))) && (ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 = ref1) || (ref1 in (ref0 . (^ (Track <: succs))))));11
771;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|(((ref0 != ref2) && (ref2 !in (ref0 . (Track <: succs)))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));16
772;this/inv8;(Entry in ((* (Track <: succs)) . Exit));1;((Entry -> Exit) in (* (Track <: succs)));4
773;this/inv4;((all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => (ref0 !in (ref1 . (^ (Track <: succs)))))) && (all ref2:(one Track),ref3:(one Track)|((ref2 !in (ref3 . (^ (Track <: succs)))) => (ref2 in Entry))));1;((all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (^ (Track <: succs))))) && (all ref2:(one Track)|((ref2 !in (Track . (^ (Track <: succs)))) => (ref2 in Entry))));13
774;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));10
775;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref0 in ref1) => (none = (ref1 . (Track <: succs)))));1;(Exit = (Track - ((Track <: succs) . Track)));12
776;this/inv8;(all ref0:(one Entry)|((ref0 . ((^ (Track <: succs)) :> Exit)) = Exit));1;(all ref0:(one Entry)|((ref0 . ((* (Track <: succs)) :> Exit)) = Exit));4
777;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) <=> ((ref0 in Junction) && (ref1 !in (ref1 . (Track <: succs))) && (ref2 !in (ref2 . (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));23
778;this/inv3;(all ref0:(one Track)|(some ref1:(one Track)|((ref0 in Exit) => ((ref0 -> ref1) !in (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));12
779;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((((ref0 -> ref0) !in (Track <: succs)) && ((ref1 -> ref0) !in (Track <: succs))) => (ref0 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));16
780;this/inv3;(all ref0:(one Track)|(one ref1:(one Track)|((ref0 in Exit) => ((ref0 -> ref1) !in (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));12
781;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) => ((ref0 in Junction) && (ref1 !in (ref1 . (Track <: succs))) && (ref2 !in (ref2 . (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));25
782;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Semaphore)) <=> (no ((ref0 . (* (Track <: succs))) & Junction))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));13
783;this/inv9;(all ref0:(one Track)|(one ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));7
784;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2) && (ref1 !in (ref1 . (Track <: succs))) && (ref2 !in (ref2 . (Track <: succs)))) => (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));24
785;this/inv9;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (ref1 in Junction))) => (no ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));13
786;this/inv3;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in univ) <=> (ref0 in Exit)));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));4
787;this/inv1;(all ref0:(one Track)|(((some ref1:(one Track)|((ref0 -> ref1) in (Track <: succs))) && (ref0 in Junction)) || (ref0 in Entry) || (ref0 in Exit)));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));17
788;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (none = (ref0 . (Track <: succs)))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});11
789;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((((ref0 -> ref0) !in (Track <: succs)) && ((ref0 -> ref1) !in (Track <: succs))) => (ref0 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));14
790;this/inv3;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) - ref0)) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
791;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|(((ref1 != ref2) && (ref1 !in Junction) && (ref2 in (ref1 . (Track <: succs)))) => (ref0 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));19
792;this/inv5;(all ref0:(one Track),ref1:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (some (ref0 & ((Track - ref1) . (Track <: succs))))) => (ref0 in Junction)));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));17
793;this/inv1;(all ref0:(one Track)|((Entry in (ref0 . (Track <: succs))) && (Exit in (ref0 . (Track <: succs)))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));11
794;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));10
795;this/inv5;(all ref0:(one Track),ref1:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (some (ref0 & (((Track - ref1) - ref0) . (Track <: succs))))) => (ref0 in Junction)));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));19
796;this/inv3;(no ((Track <: succs) . Track));1;(Exit = (Track - ((Track <: succs) . Track)));5
797;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|(((ref1 !in Junction) && (ref2 in (ref1 . (Track <: succs)))) => (ref0 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));16
798;this/inv8;(((Entry - Exit) -> (Exit - Entry)) in (^ (Track <: succs)));1;((Entry -> Exit) in (* (Track <: succs)));6
799;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Entry) => ((ref0 -> ref1) !in (Track <: succs))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
800;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (0 = (ref0 . (Track <: succs)))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});11
801;this/inv1;(all ref0:(one Track)|((Entry in ref0) || (Exit in ref0)));1;(some (Entry -> Exit));8
802;this/inv1;(all ref0:(one Track)|(some ref1:(one Track)|((((ref1 -> ref0) in (Track <: succs)) && (ref1 in Entry)) => (some ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) && ((ref0 -> ref2) in (Track <: succs)) && (ref2 in Exit))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));27
803;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Semaphore)) <=> (no ((ref0 . (^ (Track <: succs))) & Junction))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));13
804;this/inv1;(all ref0:(one Track)|(one ref1:(one Entry),ref2:(one Exit)|((ref0 in Entry) && (ref0 in Exit))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
805;this/inv9;(all ref0:(one Track)|(some ref1:(one Semaphore)|(all ref2:(one Junction)|((ref1 in (ref0 . (Track <: signals))) => (ref0 !in (ref2 . (^ (Track <: succs))))))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));13
806;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# (ref0 & (Track . (Track <: succs)))) > 1)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));14
807;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref0 != ref1) && (ref0 in Entry)) => (ref0 !in (ref1 . (Track <: succs)))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));16
808;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Entry) => ((ref1 -> ref0) !in (Track <: succs))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));14
809;this/inv2;(all ref0:(one Signal),ref1:(one Signal),ref2:(one Track),ref3:(one Track)|(((ref0 in ((Track <: signals) . ref2)) && (ref1 in ((Track <: signals) . ref3))) => (ref0 != ref3)));1;((all ref0:(one Signal)|(lone ((Track <: signals) . ref0))) && (Signal in (Track . (Track <: signals))));18
810;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (^ (Track <: succs)))) => (Semaphore !in ((ref0 . (^ (Track <: succs))) . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));11
811;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref2 in (ref1 . (Track <: signals))) => (ref1 !in (ref0 . (^ (Track <: succs)))))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));14
812;this/inv1;(one ref0:(one Signal),ref1:(one Track)|(((ref1 -> ref0) in (Track <: signals)) => ((ref1 in Entry) && (ref1 in Exit))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));12
813;this/inv2;(all ref0:(one Signal),ref1:(one Signal),ref2:(one Track),ref3:(one Track)|(((ref0 in (ref2 . (Track <: signals))) && (ref1 in (ref3 . (Track <: signals)))) => (ref0 != ref3)));1;((all ref0:(one Signal)|(lone ((Track <: signals) . ref0))) && (Signal in (Track . (Track <: signals))));18
814;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (ref0 in (Track . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});12
815;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Entry) => ((ref1 -> ref0) in (Track <: succs))));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));13
816;this/inv10;(all ref0:(one Track)|((Junction in (ref0 . (^ (Track <: succs)))) => (Semaphore in ((ref0 . (^ (Track <: succs))) . (Track <: signals)))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));12
817;this/inv9;(all ref0:(one univ)|((ref0 in (Track <: (Junction . (Track <: succs)))) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((ref0 in (Track - ((Track <: succs) . Junction))) => (no ((ref0 . (Track <: signals)) & Semaphore))));8
818;this/inv1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track)|(some ref3:(one Track)|((((ref3 -> ref2) in (Track <: succs)) && (ref3 in Entry)) => (some ref4:(one Track)|(((ref2 -> ref4) in (Track <: succs)) && (ref4 in Exit)))))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));29
819;this/inv9;(no ((((Track <: succs) . Junction) . (Track <: signals)) :> Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));2
820;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) || (ref2 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));11
821;this/inv9;(no ((((Track <: succs) :> Junction) . (Track <: signals)) . Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));6
822;this/inv1;(all ref0:(one Exit),ref1:(one Track)|((all ref2:(one Track)|(some ref3:(one Track)|((((ref3 -> ref2) in (Track <: succs)) && (ref3 in Entry)) => (some ref4:(one Track)|(((ref2 -> ref4) in (Track <: succs)) && (ref4 in Exit)))))) && ((ref0 -> ref1) !in (Track <: succs))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));29
823;this/inv9;(all ref0:(one (Track <: (Junction . (Track <: succs))))|(some ((ref0 . (Track <: signals)) & Semaphore)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));10
824;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((ref0 in Junction) => ((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));20
825;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref0 != ref0)));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));15
826;this/inv9;(no ((((Track <: succs) :> (Track - Junction)) . (Track <: signals)) . Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));6
827;this/inv5;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));1;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));15
828;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref1 in ((Track <: succs) . ref0)) || (ref2 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));13
829;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((ref0 in Junction) => ((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 != ref4) && (ref3 != ref5) && (ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));1;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));28
830;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref1 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
831;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref0 !in Junction) && (ref1 in (ref0 . (Track <: succs)))) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((! (some ((ref0 . (Track <: succs)) & Junction))) => (! (some ((ref0 . (Track <: signals)) & Semaphore)))));14
832;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (ref0 !in ((Track - ref0) . (Track <: succs)))));1;(Entry = (Track - (Track . (Track <: succs))));11
833;this/inv4;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) => (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));4
834;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => (no ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));8
835;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref1 in (ref0 . (^ (Track <: succs)))) || (ref2 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
836;this/inv4;(all ref0:(one Entry),ref1:(one Track)|(ref0 !in ((Track <: succs) . ref1)));1;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));9
837;this/inv10;(all ref0:(one Junction)|(some ref1:(one Semaphore)|(all ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) => (ref1 in (ref2 . (Track <: signals)))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
838;this/inv1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Entry),ref3:(one Track)|((ref3 -> ref2) !in (Track <: succs))) && (all ref4:(one Junction)|(some ref5:(one Track),ref6:(one Track)|(((ref4 -> ref6) in (Track <: succs)) && ((ref5 -> ref4) in (Track <: succs))))) && (all ref7:(one Track)|(some ref8:(one Track)|((((ref8 -> ref7) in (Track <: succs)) && (ref8 in Entry)) => (some ref9:(one Track)|(((ref7 -> ref9) in (Track <: succs)) && (ref9 in Exit)))))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));50
839;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
840;this/inv3;((all ref0:(one (Track - Exit))|(some ((Track <: succs) . ref0))) && (no (Exit . (Track <: succs))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));4
841;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
842;this/inv1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Entry),ref3:(one Track)|((ref3 -> ref2) !in (Track <: succs))) && (all ref4:(one Junction)|(some ref5:(one Track),ref6:(one Track)|(((ref4 -> ref6) in (Track <: succs)) && ((ref5 -> ref4) in (Track <: succs))))));1;(some (Entry -> Exit));31
843;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (ref0 . (~ (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));12
844;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (((ref0 in Exit) && (ref0 in Exit)) => (no (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));8
845;this/inv4;(all ref0:(one Track)|((ref0 in Exit) => (some ref1:(one (Track - ref0))|((ref1 -> ref0) !in (Track <: succs)))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));12
846;this/inv5;(all ref0:(one Track),ref1:(one Track)|(((# ((Track <: succs) . ref1)) > 1) => (ref1 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));9
847;this/inv10;(all ref0:(one Junction),ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));8
848;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals)))) <=> (ref0 in (ref1 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));12
849;this/inv8;((Entry != Exit) && (((Entry . (^ (Track <: succs))) & Exit) = Exit));1;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));9
850;this/inv1;(all ref0:(one Entry),ref1:(one Exit),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2) && (ref1 in (ref2 . (Track <: succs))) && (ref2 !in (ref2 . (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));27
851;this/inv9;(all ref0:(one Track),ref1:(one Track)|((((ref1 -> ref0) in (Track <: succs)) && (ref1 in Junction)) => (all ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
852;this/inv4;(all ref0:(one Track)|((no ((ref0 . (* (Track <: succs))) & Entry)) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));6
853;this/inv5;((all ref0:(one (Track - Junction))|(one ((Track <: succs) . ref0))) && (some ((Track <: succs) . Junction)));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
854;this/inv9;(no (((((Track <: succs) . Track) - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));2
855;this/inv5;((all ref0:(one (Track - Junction))|(one ((Track <: succs) . ref0))) && (some ref1:(one Track),ref2:(one Track)|(all ref3:(one Track)|((ref3 in Junction) => ((ref1 != ref2) && ((ref1 -> ref3) in (Track <: succs)) && ((ref2 -> ref3) in (Track <: succs)))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));24
856;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 !in Entry) <=> (ref0 in (ref1 . (Track <: succs)))));1;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));11
857;this/inv4;(all ref0:(one Track)|((ref0 !in (Track . (* (Track <: succs)))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));3
858;this/inv9;(all ref0:(one Track),ref1:(one Track)|((((ref1 -> ref0) !in (Track <: succs)) && (ref1 in Junction)) => (all ref2:(one Semaphore)|((ref0 -> ref2) !in (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));16
859;this/inv10;(all ref0:(one Track),ref1:(one Track)|((ref0 in Junction) => (some ref2:(one Semaphore)|(ref2 in (((Track <: succs) . ref0) . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));12
860;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 !in Entry) <=> (ref1 in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));11
861;this/inv3;(no ((Exit <: Track) . (Track <: succs)));1;(Exit = (Track - ((Track <: succs) . Track)));7
862;this/inv10;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Semaphore)|(ref1 in (((Track <: succs) . ref0) . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));11
863;this/inv9;(no (((Junction . (~ (Track <: succs))) . (Track <: signals)) & Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));7
864;this/inv3;(no ((Exit <: Track) . (^ (Track <: succs))));1;(Exit = (Track - ((Track <: succs) . Track)));8
865;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref1 !in Entry) <=> (ref1 in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));12
866;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (all ref1:(one Track)|(ref1 in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
867;this/inv3;(all ref0:(one Exit)|(one ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
868;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
869;this/inv9;(Semaphore !in ((Junction . (~ (Track <: succs))) . (Track <: signals)));1;(no (Semaphore & ((Track - ((Track <: succs) . Junction)) . (Track <: signals))));8
870;this/inv10;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Semaphore),ref2:(one Track)|((ref1 in (ref2 . (Track <: signals))) && (ref2 in ((Track <: succs) . ref0))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));16
871;this/inv10;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|((((ref2 -> ref1) in (Track <: succs)) && (ref2 in Junction)) => ((ref1 -> ref0) in (Track <: signals))));1;(all ref0:(one Junction),ref1:(one Track)|(((ref1 -> ref0) in (Track <: succs)) => (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))));14
872;this/inv10;(Semaphore in ((Junction . (~ (Track <: succs))) . (Track <: signals)));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));7
873;this/inv10;(some ((((Track <: succs) . Junction) . (Track <: signals)) :> Semaphore));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));5
874;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
875;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref1 !in (ref0 . (Track <: succs))) <=> (ref1 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));8
876;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no ref1:(one Track)|(ref1 in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
877;this/inv10;(all ref0:(one Track),ref1:(one Track)|(one ref2:(one Semaphore)|((((ref1 -> ref0) in (Track <: succs)) && (ref1 in Junction)) => ((ref0 -> ref2) in (Track <: signals)))));1;(all ref0:(one Track)|((some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction))) => (some ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) && (ref2 in Semaphore)))));12
878;this/inv3;(all ref0:(one Exit),ref1:(one Track)|(((# (ref1 . (Track <: succs))) = 0) => (ref1 in ref0)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));9
879;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref1 in Entry) => (ref1 !in (ref0 . (Track <: succs)))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});12
880;this/inv10;(all ref0:(one Track)|(((ref0 !in Entry) && (ref0 !in Exit) && (ref0 in Junction)) => (some ref1:(one Semaphore)|(all ref2:(one Track)|((ref2 in ((Track <: succs) . ref0)) => (ref1 in (ref2 . (Track <: signals))))))));1;(all ref0:(one Junction),ref1:(one Track)|((ref1 in ((Track <: succs) . ref0)) => (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))));21
881;this/inv9;(some ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));10
882;this/inv10;(all ref0:(one Track),ref1:(one Track)|(one ref2:(one Semaphore)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction)) => ((ref0 -> ref2) in (Track <: signals)))));1;(all ref0:(one Track)|((some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction))) => (some ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) && (ref2 in Semaphore)))));10
883;this/inv4;(all ref0:(one Track),ref1:(one Track)|((! (ref0 in (ref0 . (Track <: succs)))) <=> (ref1 in Entry)));1;(all ref0:(one Track)|((! (ref0 in (Track . (Track <: succs)))) <=> (ref0 in Entry)));7
884;this/inv9;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (no ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
885;this/inv9;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (no ((ref0 . (Track <: signals)) & Semaphore)))) && (all ref1:(one Track),ref2:(one Track)|(((ref2 !in Junction) && (ref2 in (ref1 . (Track <: succs)))) => (no ((ref1 . (Track <: signals)) & Semaphore)))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (no ((ref0 . (Track <: signals)) & Semaphore)))) && (all ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (no ((ref1 . (Track <: signals)) & Semaphore)))));14
886;this/inv4;(all ref0:(one Entry),ref1:(one Signal),ref2:(one Track)|(((ref0 -> ref1) !in (Track <: signals)) && ((ref2 -> ref0) !in (Track <: succs))));1;((all ref0:(one Entry),ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) && (all ref2:(one (Track - Entry))|(ref2 in (Track . (Track <: succs)))));16
887;this/inv4;(all ref0:(one Track),ref1:(one Track)|((! (ref1 in (ref0 . (Track <: succs)))) <=> (ref1 in Entry)));1;(all ref0:(one Track)|((! (ref0 in (Track . (Track <: succs)))) <=> (ref0 in Entry)));9
888;this/inv10;(all ref0:(one Junction)|((((Track <: succs) . ref0) . (Track <: signals)) in Semaphore));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));5
889;this/inv10;(all ref0:(one Junction)|(some ref1:(one Semaphore)|(all ref2:(one Track)|((ref2 in ((Track <: succs) . ref0)) => (ref1 in (ref2 . (Track <: signals)))))));1;(all ref0:(one Junction),ref1:(one Track)|((ref1 in ((Track <: succs) . ref0)) => (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))));10
890;this/inv8;(all ref0:(one Track)|((ref0 in (Track - Exit)) => (Exit in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));10
891;this/inv10;(some ref0:(one Track),ref1:(one (Track - ref0))|(one ref2:(one Semaphore)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction)) => ((ref0 -> ref2) in (Track <: signals)))));1;(all ref0:(one Track)|((some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction))) => (some ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) && (ref2 in Semaphore)))));10
892;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((1 < (# ref1)) && (1 < (# ref2)))));1;((1 < (# Entry)) && (1 < (# Exit)));7
893;this/inv3;((all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) => (ref0 in Entry))) && (all ref1:(one Track)|((ref1 in Entry) => ((# ((Track <: succs) . ref1)) = 0))));1;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Track)|((ref1 in Exit) => ((# (ref1 . (Track <: succs))) = 0))));12
894;this/inv1;(some ref0:(one Track)|((Entry in Track) && (Exit in Track)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));7
895;this/inv8;(all ref0:(one Track)|((ref0 in (Track - Exit)) <=> (Exit in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));10
896;this/inv3;(no ref0:(one Track)|(ref0 in (Exit . (Track <: succs))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));8
897;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 in (ref0 . (Track <: succs))) && (ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));18
898;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Semaphore)) <=> ((ref0 . (Track <: succs)) !in Junction)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));12
899;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((ref0 in (ref1 . (Track <: succs))) => (some ((ref0 . (Track <: signals)) & Semaphore)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));5
900;this/inv3;(no (Track . (Track <: succs)));1;(Exit = (Track - (Track . (~ (Track <: succs)))));6
901;this/inv6;(all ref0:(one Entry)|(one ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
902;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref2 in (ref0 . (^ (Track <: succs)))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));15
903;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|(((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));13
904;this/inv1;((Track in Entry) && (Track in Exit));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));6
905;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => (none in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));9
906;this/inv8;(all ref0:(one Track)|((ref0 in Entry) <=> (Exit in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));8
907;this/inv6;(all ref0:(one Entry)|(lone ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
908;this/inv1;(all ref0:(one Track)|((some (ref0 . (Track <: succs))) => (some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref2 in (ref0 . (^ (Track <: succs))))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));20
909;this/inv9;((no (Junction & (Track . (Track <: succs)))) => (no (Semaphore & (Track . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));9
910;this/inv4;(all ref0:(one Entry)|(no ref1:(one (Track - ref0))|(ref0 in (ref1 . (Track <: succs)))));1;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));9
911;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => ((# (ref0 . (Track <: succs))) = 0)));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
912;this/inv5;((all ref0:(one Track)|((ref0 in Junction) => ((# ((Track <: succs) . ref0)) > 0))) && (all ref1:(one Track)|(((# ((Track <: succs) . ref1)) > 0) => (ref1 in Junction))));1;((all ref0:(one Track)|((ref0 in Junction) => ((# ((Track <: succs) . ref0)) > 1))) && (all ref1:(one Track)|(((# ((Track <: succs) . ref1)) > 1) => (ref1 in Junction))));4
913;this/inv8;(all ref0:(one Entry)|((ref0 !in Exit) => (Exit in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));8
914;this/inv1;(all ref0:(one (Track . (Track <: succs)))|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref2 in (ref0 . (^ (Track <: succs)))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));15
915;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|((ref0 in Junction) => (((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));17
916;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (Track <: succs))) || (ref2 in (ref0 . (Track <: succs))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));15
917;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref1 !in Exit) && ((ref1 -> ref0) in (Track <: succs)) && (ref2 !in Exit) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));17
918;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# (ref0 . (~ (Track <: succs)))) > 1)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));10
919;this/inv10;(all ref0:(one ((Track . (Track <: succs)) <: Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));2
920;this/inv6;(all ref0:(one Entry),ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
921;this/inv10;(all ref0:(one ((Track <: Junction) . (Track <: succs)))|(some ((ref0 . (Track <: signals)) & Semaphore)));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));2
922;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# ((~ (Track <: succs)) . ref0)) > 1)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));11
923;this/inv10;(all ref0:(one (Junction . (Track <: succs)))|(some ((ref0 . (Track <: signals)) & Semaphore)));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));2
924;this/inv3;(all ref0:(one univ),ref1:(one univ),ref2:(one univ)|(((ref0 in Exit) && (ref1 in Entry) && (ref2 in Junction)) => ((ref1 !in (ref0 . (Track <: succs))) && (ref2 !in (ref0 . (Track <: succs))))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));23
925;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs)))))) && (all ref3:(one Entry),ref4:(one Exit)|(some ref5:(one Track)|((ref3 in (ref5 . (Track <: succs))) && (ref4 in (ref5 . (Track <: succs)))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));28
926;this/inv6;(all ref0:(one Track)|((ref0 in Entry) => (one ref1:(one Speed)|((ref0 -> ref1) in (Track <: signals)))));1;(all ref0:(one Track)|(some ref1:(one Speed)|((ref0 in Entry) => ((ref0 -> ref1) in (Track <: signals)))));4
927;this/inv4;(all ref0:(one Entry),ref1:(one Track)|((ref0 in ref1) => (ref0 !in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));13
928;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! (some ref2:(one Junction)|(ref2 in (ref1 . (Track <: succs))))) => (all ref3:(one Semaphore)|(ref3 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));14
929;this/inv1;(all ref0:(one Entry),ref1:(one Exit)|(some ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
930;this/inv4;(all ref0:(one Entry),ref1:(one Track)|((ref0 in Track) => (ref0 !in (Track . (^ (Track <: succs))))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));10
931;this/inv4;(all ref0:(one Entry)|((ref0 in Track) => (ref0 !in (Track . (^ (Track <: succs))))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));9
932;this/inv5;(all ref0:(one univ)|((ref0 in Junction) => ((# (ref0 . (Track <: succs))) > 1)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));11
933;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref0 != ref2)));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));15
934;this/inv4;(all ref0:(one Entry)|(ref0 !in (Track . (^ (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) <=> (ref0 in Entry)));6
935;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(((ref1 -> ref0) in (Track <: signals)) => (ref1 in Junction)));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));11
936;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (ref0 !in ((Track . (Track <: signals)) - ref1))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));12
937;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (ref1 in Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((! (some ((ref0 . (Track <: succs)) & Junction))) => (! (some ((ref0 . (Track <: signals)) & Semaphore)))));12
938;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 != ref2)));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));15
939;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 !in ((Track . (Track <: signals)) - ref1)) && (ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref0 !in ((Track - ref1) . (Track <: signals))) && (ref0 in (ref1 . (Track <: signals))))));8
940;this/inv5;((# (Junction . (~ (Track <: succs)))) > 1);1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
941;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 !in ((Track . (Track <: signals)) - (ref1 . (Track <: signals)))) && (ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref0 !in ((Track - ref1) . (Track <: signals))) && (ref0 in (ref1 . (Track <: signals))))));10
942;this/inv2;(all ref0:(one Signal),ref1:(one Signal),ref2:(one Track),ref3:(one Track)|(((ref0 in (ref2 . (Track <: signals))) && (ref1 in (ref3 . (Track <: signals)))) => (ref0 != ref1)));1;((all ref0:(one Signal)|(lone ((Track <: signals) . ref0))) && (Signal in (Track . (Track <: signals))));18
943;this/inv3;(no ((Exit & Track) . (Track <: succs)));1;(Exit = (Track - ((Track <: succs) . Track)));7
944;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (ref0 !in ((Track . (Track <: signals)) - (ref1 . (Track <: signals))))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));14
945;this/inv9;(all ref0:(one Track)|(some ref1:(one Signal)|((((ref0 -> ref1) in (Track <: signals)) && (ref1 in Semaphore)) => (ref0 in Junction))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));13
946;this/inv5;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) => (ref0 in Junction)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));4
947;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => ((# (ref0 . (^ (Track <: succs)))) = 0)));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));10
948;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|(((ref2 !in Junction) && (ref2 in (ref1 . (^ (Track <: succs))))) => (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));15
949;this/inv6;(all ref0:(one Entry)|(some ref1:(one Track)|((ref0 in ref1) => (Signal in (ref1 . (Track <: signals))))));1;(Entry in ((Track <: signals) . Speed));10
950;this/inv6;(all ref0:(one Entry)|(some ref1:(one Track)|((ref0 in ref1) => (Speed in (ref1 . (Track <: signals))))));1;(Entry in ((Track <: signals) . Speed));10
951;this/inv5;(all ref0:(one Track)|((((# (ref0 . (~ (Track <: succs)))) > 1) => (ref0 in Junction)) || (no ref0)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
952;this/inv10;((all ref0:(one Track)|(some ref1:(one Junction),ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) => (ref2 in (ref0 . (Track <: signals)))))) && (all ref3:(one Track)|((some ((ref3 . (Track <: signals)) & Semaphore)) => (some ((ref3 . (Track <: succs)) & Junction)))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));21
953;this/inv9;(all ref0:(one Track)|(one ref1:(one Signal)|((((ref0 -> ref1) in (Track <: signals)) && (ref1 in Semaphore)) => (ref0 in Junction))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));13
954;this/inv6;(all ref0:(one Entry),ref1:(one Track)|((ref0 in ref1) => (Speed in (ref1 . (Track <: signals)))));1;(Entry in ((Track <: signals) . Speed));10
955;this/inv1;(all ref0:(one Signal),ref1:(one Track)|((ref1 -> ref0) in (Track <: signals)));1;(some (Entry -> Exit));9
956;this/inv2;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 !in ((Track . (Track <: signals)) - (ref1 . (Track <: signals))))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));10
957;this/inv8;(all ref0:(one Entry)|(one ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
958;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && (ref1 in ((Track <: succs) . ref0)) && (ref2 in ((Track <: succs) . ref0))))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));21
959;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|((ref1 != ref2) && (ref1 in ((Track <: succs) . ref0)) && (ref2 in ((Track <: succs) . ref0))))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));21
960;this/inv5;(all ref0:(one Track)|(((# (Track . (Track <: succs))) > 0) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));4
961;this/inv5;(all ref0:(one univ)|((((# (ref0 . (^ (Track <: succs)))) > 1) && (ref0 in Track)) => (ref0 in Junction)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));10
962;this/inv2;(all ref0:(one Track),ref1:(one Track)|(no ((ref0 . (Track <: succs)) & (ref1 . (Track <: succs)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(one (((Track <: signals) . ref0) & ref1))));10
963;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|(((ref0 -> ref1) in (Track <: succs)) => (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));8
964;this/inv4;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Track)) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));4
965;this/inv5;(all ref0:(one univ)|((((# (ref0 . (^ (Track <: succs)))) > 1) && (ref0 in Track)) => ((ref0 !in Entry) && (ref0 !in Exit) && (ref0 in Junction))));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));17
966;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && (ref1 != ref2) && (ref1 in ((Track <: succs) . ref0)) && (ref2 in ((Track <: succs) . ref0))))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));27
967;this/inv3;(all ref0:(one Track)|(((ref0 !in Entry) && (ref0 !in Junction) && (ref0 in Exit)) => (no (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));15
968;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (ref0 !in ((Track <: succs) . Track))));1;(Entry = (Track - ((~ (Track <: succs)) . Track)));10
969;this/inv6;(some (Entry . (Track <: signals)));1;(Entry in ((Track <: signals) . Speed));5
970;this/inv2;(all ref0:(one Track)|(one (ref0 . (Track <: signals))));1;(all ref0:(one Signal)|(one (ref0 . (~ (Track <: signals)))));3
971;this/inv4;(no (((Track <: succs) . Track) & Entry));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});7
972;this/inv3;(all ref0:(one Exit)|(one (ref0 . (Track <: succs))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
973;this/inv3;(all ref0:(one Track)|(((none = (ref0 . (Track <: signals))) && (none = (ref0 . (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
974;this/inv2;(all ref0:(one Track)|(one ((Track <: signals) . ref0)));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));2
975;this/inv8;(all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) && (ref1 in Entry)))));1;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (* (Track <: succs))))));14
976;this/inv9;(all ref0:(one Track)|((Junction in (ref0 . (Track <: succs))) => (Semaphore in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));11
977;this/inv1;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in Entry) && (ref1 in Exit)) => ((ref0 in (ref2 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));17
978;this/inv9;(all ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref0 in Junction)) => (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
979;this/inv1;(all ref0:(one Track)|(some (Entry & Exit)));1;(some (Entry -> Exit));3
980;this/inv9;(all ref0:(one Track)|(some ref1:(one Semaphore)|((Junction in (ref0 . (Track <: succs))) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));10
981;this/inv8;(all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref1 in Entry) => (ref0 in (ref1 . (^ (Track <: succs))))))));1;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (* (Track <: succs))))));8
982;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (all ref1:(one Track)|((ref1 in Exit) => (ref1 in (ref0 . (Track <: succs)))))));1;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs))))));7
983;this/inv9;(all ref0:(one Track)|(some ref1:(one Semaphore)|((Junction in (ref0 . (Track <: succs))) => (ref1 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (all ref1:(one Semaphore)|(ref1 !in (ref0 . (Track <: signals))))));9
984;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|(all ref2:(one Semaphore)|(((ref0 -> ref1) !in (Track <: succs)) => ((ref0 -> ref2) !in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));12
985;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry)|((ref1 -> ref0) in (Track <: succs)))) && (one ref2:(one Exit)|(all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs)))));1;(some (Entry -> Exit));17
986;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction),ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) => (ref2 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));7
987;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (all ref1:(one Track)|((ref1 in Exit) => (ref1 in (ref0 . (^ (Track <: succs))))))));1;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs))))));6
988;this/inv4;(no (none & (Track . (Track <: succs))));1;(all ref0:(one Track)|((no (ref0 & (Track . (Track <: succs)))) <=> (ref0 in Entry)));7
989;this/inv8;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (* (Track <: succs))))));6
990;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction),ref2:(one Semaphore)|((ref1 !in (ref0 . (Track <: succs))) => (ref2 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));6
991;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry)|((ref1 -> ref0) in (Track <: succs)))) && (all ref2:(one Track)|(one ref3:(one Exit)|((ref3 -> ref2) !in (Track <: succs)))));1;(some (Entry -> Exit));17
992;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry)|((ref1 -> ref0) in (Track <: succs)))) && (all ref2:(one Track)|(one ref3:(one Exit)|((ref2 != ref3) && ((ref3 -> ref2) !in (Track <: succs))))));1;(some (Entry -> Exit));21
993;this/inv10;(all ref0:(one Track)|(one ref1:(one Junction)|(some ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) => (ref2 in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
994;this/inv2;(all ref0:(one Signal)|(one ref0));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));4
995;this/inv4;(no (Track . (Track <: succs)));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});5
996;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|((ref2 !in (ref1 . (Track <: succs))) => (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));10
997;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry)|((ref0 != ref1) && ((ref1 -> ref0) in (Track <: succs))))) && (all ref2:(one Track)|(one ref3:(one Exit)|((ref2 != ref3) && ((ref3 -> ref2) !in (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));24
998;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref0 & (ref2 . (Track <: succs)))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
999;this/inv9;(all ref0:(one Track)|(one ref1:(one Junction)|(all ref2:(one Semaphore)|(((ref0 -> ref1) !in (Track <: succs)) => ((ref0 -> ref2) !in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));12
1000;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((no (ref0 & (ref2 . (Track <: succs)))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (all ref1:(one Semaphore)|(ref1 !in (ref0 . (Track <: signals))))));11
1001;this/inv9;(all ref0:(one Track),ref1:(one (ref0 . (Track <: succs)))|((ref1 !in Junction) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));10
1002;this/inv2;(all ref0:(one Track)|(one ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));6
1003;this/inv3;(one ref0:(one Track)|(all ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Entry))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
1004;this/inv5;(all ref0:(one Track)|(((ref0 !in ((Track <: succs) . ref0)) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));6
1005;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((((ref1 . (Track <: succs)) . (integer/next[])) !in Junction) => (((ref1 . (Track <: signals)) . (integer/next[])) !in Semaphore)));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));13
1006;this/inv3;(one ref0:(one Track)|(all ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));6
1007;this/inv9;(all ref0:(one Track),ref1:(one (ref0 . (Track <: succs)))|((ref1 !in Junction) => (all ref2:(one (ref0 . (Track <: signals)))|(ref2 !in Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
1008;this/inv9;(all ref0:(one Track)|(one ref1:(one Junction),ref2:(one Semaphore)|(((ref0 -> ref1) !in (Track <: succs)) => ((ref0 -> ref2) !in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));12
1009;this/inv3;(all ref0:(one univ)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 in Track)) => ((ref0 !in Entry) && (ref0 !in Junction) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));15
1010;this/inv5;(all ref0:(one Track)|(((ref0 !in ((^ (Track <: succs)) . ref0)) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((! (one ((Track <: succs) . ref0))) && (some ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
1011;this/inv3;(some ref0:(one Track)|(all ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));6
1012;this/inv8;(all ref0:(one Exit)|(ref0 in (Entry . (Track <: succs))));1;((Entry -> Exit) in (* (Track <: succs)));6
1013;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction),ref2:(one Semaphore)|(((ref0 -> ref1) !in (Track <: succs)) => ((ref0 -> ref2) !in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));12
1014;this/inv6;((Track <: signals) in (Entry one->some Signal));1;(Entry in ((Track <: signals) . Speed));6
1015;this/inv10;(all ref0:(one Semaphore),ref1:(one Track)|((Junction in ((Track <: succs) . ref1)) => (ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));9
1016;this/inv1;((no (Entry & Exit)) && (one Exit) && (some Entry));1;((some Entry) && (some Exit));8
1017;this/inv6;((Track <: signals) in (Entry one->one Signal));1;(Entry in ((Track <: signals) . Speed));6
1018;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => ((some ref1:(one Junction)|(ref0 in (ref1 . (Track <: succs)))) && (no (ref0 . (Track <: succs))))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));14
1019;this/inv1;(one ref0:(one Track),ref1:(one Track)|((ref0 in Entry) && (ref1 in Exit)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));4
1020;this/inv6;(all ref0:(one (Entry & Track))|(some ref1:(one Speed)|(ref0 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));6
1021;this/inv6;(all ref0:(one Entry)|(one ref1:(one Speed)|((ref0 -> ref1) in (Track <: signals))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|((ref0 -> ref1) in (Track <: signals))));4
1022;this/inv3;(all ref0:(one Exit)|(no (Track . (Track <: succs))));1;(Exit = (Track - (Track . (~ (Track <: succs)))));7
1023;this/inv10;(all ref0:(one Semaphore),ref1:(one Track)|((ref1 in ((Track <: succs) . Junction)) => (ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));7
1024;this/inv1;(one ref0:(one Track),ref1:(one Track)|((ref0 = Entry) && (ref1 = Junction)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));10
1025;this/inv1;((one Exit) || (some Entry));1;(some (Entry -> Exit));5
1026;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => (all ref1:(one (ref0 . (Track <: signals)))|(ref1 !in Semaphore))));1;(all ref0:(one Track),ref1:(one (ref0 . (Track <: signals)))|((no ((ref0 . (Track <: succs)) & Junction)) => (ref1 !in Semaphore)));7
1027;this/inv6;((Track <: signals) in (Entry ->one Signal));1;(Entry in ((Track <: signals) . Speed));6
1028;this/inv9;(all ref0:(one Track)|(((none != (ref0 . (Track <: succs))) && ((ref0 . (Track <: succs)) !in Junction)) => ((ref0 . (Track <: signals)) !in Semaphore)));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
1029;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((ref0 in ((Track <: succs) . Junction)) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));7
1030;this/inv1;(some ref0:(one Track)|(one ref1:(one Track)|((ref0 !in Exit) && (ref0 in Entry) && (ref1 !in Entry) && (ref1 in Exit))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));10
1031;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => ((some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))) && (no (ref0 . (Track <: succs))))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));14
1032;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(some ref2:(one Junction)|((ref0 in (ref1 . (Track <: signals))) => (ref2 in (ref1 . (^ (Track <: succs)))))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));11
1033;this/inv6;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref0 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));6
1034;this/inv10;(all ref0:(one Junction)|(one ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));8
1035;this/inv1;((one Entry) && (one Junction));1;((some Entry) && (some Exit));6
1036;this/inv1;(all ref0:(one Junction)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 != ref1) && (ref0 != ref2) && ((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));19
1037;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (one ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
1038;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(some ref2:(one Junction)|((ref2 !in (ref1 . (^ (Track <: succs)))) => (ref0 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));11
1039;this/inv3;(all ref0:(one univ)|((ref0 in Exit) => ((some ref1:(one Track)|((ref1 -> ref0) in (Track <: succs))) && (no (ref0 . (Track <: succs))))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));14
1040;this/inv6;(all ref0:(one (Track - Entry))|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
1041;this/inv10;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (one ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals))))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));6
1042;this/inv3;(all ref0:(one univ)|((ref0 in Track) => (no (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
1043;this/inv1;(all ref0:(one Junction)|(some ref1:(one Entry),ref2:(one Exit)|(((ref0 != ref1) && (ref0 != ref2)) => (((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));21
1044;this/inv6;(all ref0:(one Track)|(some ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
1045;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(((ref1 -> ref0) !in (Track <: succs)) => (some ref2:(one Semaphore)|((ref1 -> ref2) !in (Track <: signals)))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
1046;this/inv8;(no Exit);1;((Entry -> Exit) in (* (Track <: succs)));6
1047;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Junction)|((ref0 = ref1) || (ref0 = ref2))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));13
1048;this/inv9;(all ref0:(one Track)|(((ref0 . (* (Track <: succs))) !in Junction) => ((ref0 . (* (Track <: signals))) !in Semaphore)));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));8
1049;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|(((ref0 !in (ref2 . (^ (Track <: succs)))) && (ref2 !in Exit)) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));15
1050;this/inv6;(all ref0:(one Track)|(Speed in (ref0 . (Track <: signals))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));5
1051;this/inv6;(all ref0:(one Track)|(one ref1:(one Signal)|(ref1 in (ref0 . (Track <: signals)))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));4
1052;this/inv3;(all ref0:(one Exit)|((ref0 in Track) => ((# (ref0 . (Track <: succs))) = 0)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));10
1053;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => ((ref0 . (* (Track <: signals))) !in Semaphore)));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));7
1054;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 = ref1) || (ref0 = ref2))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));13
1055;this/inv8;(all ref0:(one Track)|((ref0 in (Entry . (^ (Track <: succs)))) <=> (ref0 in Exit)));1;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));10
1056;this/inv1;(all ref0:(one Junction)|((ref0 in Track) => (some ref1:(one Entry),ref2:(one Exit)|(((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));17
1057;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|(((ref0 -> ref1) !in (Track <: succs)) => (all ref2:(one Semaphore)|((ref0 -> ref2) !in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));12
1058;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => ((ref0 . (Track <: succs)) in Exit)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));8
1059;this/inv9;(all ref0:(one Track)|((((ref0 . (Track <: signals)) !in Semaphore) => ((ref0 . (Track <: succs)) !in Junction)) && (((ref0 . (Track <: succs)) !in Junction) => ((ref0 . (Track <: signals)) !in Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));18
1060;this/inv6;(all ref0:(one Track)|(some ref1:(one Signal)|((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed))));1;(all ref0:(one Entry)|(some ref1:(one Signal)|((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed))));4
1061;this/inv1;(all ref0:(one Junction)|((ref0 in Track) => (some ref1:(one Entry),ref2:(one Exit)|(((ref0 != ref1) && (ref0 != ref2)) => (((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs)))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));25
1062;this/inv9;(all ref0:(one Track),ref1:(one (Track - Junction))|((ref1 in (ref0 . (Track <: succs))) => (no ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
1063;this/inv8;(Exit in (Entry + (Entry . (^ (Track <: succs)))));1;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));5
1064;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (Exit in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));6
1065;this/inv5;((all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|((((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)) && disj[ref1,ref2]))) && (all ref3:(one Junction)|((# ((Track <: succs) . ref3)) > 1)));1;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref1,ref2]) || (((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)))) && (all ref3:(one Junction)|((# ((Track <: succs) . ref3)) > 1)));17
1066;this/inv8;(all ref0:(one Track)|((Entry in ref0) => (Exit in (ref0 . (Track <: succs)))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));7
1067;this/inv4;(((Track <: succs) . Track) = Entry);1;(Entry = (Track - ((~ (Track <: succs)) . Track)));5
1068;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (Exit in ref0)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));4
1069;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (all ref1:(one Track)|((ref0 != ref1) => ((ref1 -> ref0) !in (Track <: succs))))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));16
1070;this/inv6;(all ref0:(one Entry)|(one ref1:(one Signal)|((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed))));1;(all ref0:(one Entry)|(some ref1:(one Signal)|((ref1 in (ref0 . (Track <: signals))) && (ref1 in Speed))));4
1071;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some ((ref0 . (Track <: succs)) . (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));13
1072;this/inv2;(one (Track . (Track <: signals)));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));3
1073;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (all ref1:(one Track)|((ref0 != ref1) && ((ref1 -> ref0) !in (Track <: succs))))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));16
1074;this/inv1;((some ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit))) && (some ref2:(one Track),ref3:(one Track)|(((ref2 -> ref3) in (Track <: succs)) => (ref2 in Exit))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));22
1075;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (ref0 !in ((ref1 . (Track <: succs)) . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));12
1076;this/inv4;((no ((Track <: succs) . Entry)) && (some (Entry . (Track <: succs))));1;((all ref0:(one (Track - Entry))|(some ((Track <: succs) . ref0))) && (no ((Track <: succs) . Entry)));9
1077;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref1 in (ref0 . (Track <: succs))) || (ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 = ref1) || (ref1 in (ref0 . (^ (Track <: succs))))));10
1078;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (no ((Track <: signals) . Semaphore))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));8
1079;this/inv1;(some ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => ((((ref0 -> ref1) in (Track <: succs)) && (ref0 in Exit)) => (ref0 in Exit))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));20
1080;this/inv3;(all ref0:(one Exit)|(no (Track <: succs)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1081;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (~ (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs)))));6
1082;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (ref0 !in ((ref1 . (^ (Track <: succs))) . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));13
1083;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref1 !in Junction) && (ref1 in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));11
1084;this/inv1;(some ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit)) || (((ref0 -> ref1) in (Track <: succs)) => (ref0 in Exit))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));20
1085;this/inv5;(all ref0:(one Track)|((ref0 in Junction) <=> (some (((^ (Track <: succs)) . (Track <: succs)) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});12
1086;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (ref0 !in ((ref1 . (* (Track <: succs))) . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));13
1087;this/inv8;(all ref0:(one Entry)|(Exit !in (ref0 . (* (Track <: succs)))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));4
1088;this/inv1;(((Track <: succs) in (Track ->some Entry)) && ((Track <: succs) in (Track ->some Exit)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));10
1089;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((ref1 !in Junction) && (ref1 in (ref0 . (^ (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
1090;this/inv4;(Entry = (Track - ((^ (Track <: succs)) . Track)));1;(Entry = (Track - ((~ (Track <: succs)) . Track)));2
1091;this/inv5;(! (some ref0:(one Junction)|(lone ((Track <: succs) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});4
1092;this/inv3;(all ref0:(one Track)|(some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 !in Exit))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));10
1093;this/inv2;(some ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));4
1094;this/inv4;(all ref0:(one Entry)|((# (ref0 . (integer/prev[]))) = 0));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) <=> (ref0 in Entry)));8
1095;this/inv4;(all ref0:(one Entry),ref1:(one (Track - Entry))|(ref0 !in (ref1 . (Track <: succs))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));8
1096;this/inv4;(Entry = (Track - ((Track <: succs) . Entry)));1;(Entry = (Track - (Track . (Track <: succs))));2
1097;this/inv1;(((Track <: signals) in (Track ->some Signal)) && ((Track <: succs) in (Track ->some Entry)) && ((Track <: succs) in (Track ->some Exit)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));15
1098;this/inv3;(all ref0:(one univ)|((((no (ref0 . (Track <: succs))) && (ref0 in Track)) => (ref0 in Exit)) || (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1099;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) => (Semaphore !in ((ref0 + Exit) . (Track <: signals)))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));10
1100;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(((ref1 . (Track <: succs)) !in Junction) => (ref0 !in ref1)));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));9
1101;this/inv5;(all ref0:(one Junction)|(some ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));10
1102;this/inv5;((all ref0:(one Track)|((ref0 in Junction) <=> (some (((^ (Track <: succs)) . (Track <: succs)) . ref0)))) && (all ref1:(one Junction)|((ref1 in Junction) <=> (some ((Track <: succs) . ref1)))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));22
1103;this/inv1;(all ref0:(one Track)|(((ref0 . (^ (Track <: succs))) = Entry) || ((ref0 . (^ (Track <: succs))) = Exit)));1;(some (Entry -> Exit));14
1104;this/inv8;((all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs))))) && (no (Entry & Exit)));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));9
1105;this/inv3;(all ref0:(one univ)|(((no (ref0 . (Track <: succs))) && (ref0 in Track)) => ((ref0 in Entry) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1106;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry)|(ref1 in (ref0 . (* (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));11
1107;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry)|(one ref2:(one Exit)|(((ref0 -> ref2) in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
1108;this/inv5;((# ((~ (Track <: succs)) . Junction)) > 1);1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
1109;this/inv2;(all ref0:(one Signal),ref1:(one Signal),ref2:(one (ref0 . (Track <: signals)))|((ref2 in (ref1 . (Track <: signals))) => (ref0 = ref1)));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));11
1110;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));10
1111;this/inv4;(all ref0:(one Track)|((ref0 in Entry) <=> (some (ref0 . (Track <: succs)))));1;(Entry = (Track - {ref0:(one Track)|(some ((Track <: succs) . ref0))}));10
1112;this/inv3;(some ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));6
1113;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) => ((Semaphore !in (ref0 . (Track <: signals))) && (Semaphore !in Exit))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
1114;this/inv3;(all ref0:(one univ)|(((no (ref0 . (Track <: succs))) && (ref0 in Track)) => ((ref0 in Entry) && (ref0 in Exit) && (ref0 in Junction))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));15
1115;this/inv1;(all ref0:(one (Track . (^ (Track <: succs))))|((Entry in ref0) || (Exit in ref0)));1;(some (Entry -> Exit));8
1116;this/inv3;(all ref0:(one Exit)|(no (ref0 . (integer/next[]))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1117;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && (ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));16
1118;this/inv5;(((# ((~ (Track <: succs)) . Track)) > 1) => (Track in Junction));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
1119;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry)|(ref1 in ref0)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));8
1120;this/inv3;(all ref0:(one Exit)|(no ((ref0 . (Track <: succs)) . (integer/next[]))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1121;this/inv1;(all ref0:(one (Track . (^ (Track <: succs))))|((Entry in ref0) && (Exit in ref0)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
1122;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 + ref2) in (ref0 . (* (Track <: succs)))))) && (all ref3:(one Track)|(some ref4:(one Signal)|(ref4 in ref3))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));18
1123;this/inv3;(all ref0:(one Track)|((ref0 = Exit) => (no (Track <: succs))));1;(Exit = (Track - ((Track <: succs) . Track)));10
1124;this/inv5;(((# ((~ (Track <: succs)) . Track)) > 2) => (Track in Junction));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
1125;this/inv9;(all ref0:(one Track)|((no ((ref0 . (^ (Track <: succs))) & Junction)) => (no ((ref0 . (^ (Track <: signals))) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
1126;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(some ref2:(one Track)|((ref1 in (ref2 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));13
1127;this/inv1;((all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref1 + ref2) in (ref0 . (* (Track <: succs)))))) && (all ref3:(one Track)|(some ref4:(one Signal)|((ref3 -> ref4) in (Track <: signals)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));20
1128;this/inv5;(all ref0:(one Track)|((some ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|(((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));9
1129;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((some ((ref0 . (Track <: succs)) & Junction)) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));8
1130;this/inv1;((one ref0:(one Track)|(ref0 in Entry)) && (one ref1:(one Track)|(ref1 in Exit)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));4
1131;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 -> ref1) !in (Track <: succs)) => (ref1 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
1132;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));9
1133;this/inv3;(all ref0:(one univ)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 in Track)) => ((ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));15
1134;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(some ref2:(one Track)|((ref1 in (ref2 . (^ (Track <: succs)))) && (ref2 in (ref0 . (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));13
1135;this/inv1;(all ref0:(one (Track . (* (Track <: succs))))|((ref0 = Entry) || (Exit in ref0)));1;(some (Entry -> Exit));8
1136;this/inv1;(some ref0:(one Entry),ref1:(one Exit),ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
1137;this/inv1;((one ref0:(one Track)|((ref0 in Entry) && (ref0 in Track))) && (one ref1:(one Track)|((ref1 in Exit) && (ref1 in Track))));1;((some ref0:(one Track)|((ref0 in Entry) && (ref0 in Track))) && (some ref1:(one Track)|((ref1 in Exit) && (ref1 in Track))));4
1138;this/inv1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Entry) && ((ref0 . (Track <: succs)) in Exit)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));9
1139;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(some ref2:(one Track)|((ref1 in (ref2 . (^ (Track <: succs)))) && (ref2 in (ref0 . (^ (Track <: succs)))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));14
1140;this/inv3;(all ref0:(one Exit)|(Track !in (ref0 . (Track <: succs))));1;(Exit = (Track - ((Track <: succs) . Track)));7
1141;this/inv6;((Track <: signals) in (Entry one-> Speed));1;(Entry in ((Track <: signals) . Speed));4
1142;this/inv1;(all ref0:(one (Track . (* (Track <: succs))))|((ref0 = Entry) || (ref0 = Exit)));1;(some (Entry -> Exit));8
1143;this/inv1;(all ref0:(one Track)|(some ref1:(one Entry),ref2:(one Exit)|((ref0 in Entry) && (ref0 in Exit))));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
1144;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(some ref2:(one Track)|((ref1 in (ref2 . (Track <: succs))) && (ref2 in (ref0 . (^ (Track <: succs)))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));13
1145;this/inv3;(all ref0:(one Exit)|((ref0 !in (ref0 . (Track <: succs))) && (Track !in (ref0 . (Track <: succs)))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));10
1146;this/inv3;((some ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 != ref1) && ((ref0 -> ref1) !in (Track <: succs)))))) && (some ref2:(one Track)|((ref2 in Exit) => (all ref3:(one Signal)|((ref2 -> ref3) !in (Track <: signals))))));1;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));20
1147;this/inv1;(all ref0:(one (Track . (* (Track <: succs))))|((Entry in ref0) && (Exit in ref0)));1;((some ref0:(one Track)|(ref0 in Entry)) && (some ref1:(one Track)|(ref1 in Exit)));7
1148;this/inv3;(all ref0:(one Track)|((ref0 = Exit) => (no (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));8
1149;this/inv1;(some (Entry & Track));1;(some (Entry -> Exit));4
1150;this/inv6;((Track <: signals) in (Entry some-> Speed));1;(Entry in ((Track <: signals) . Speed));4
1151;this/inv1;(all ref0:(one ((Track - Entry) - Exit))|(no (ref0 . (Track <: succs))));1;(some (Entry -> Exit));9
1152;this/inv3;(all ref0:(one Exit)|((ref0 !in (ref0 . (Track <: succs))) && (Entry !in (ref0 . (Track <: succs))) && (Junction !in (ref0 . (Track <: succs))) && (Track !in (ref0 . (Track <: succs)))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));20
1153;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 != ref1) && ((ref0 -> ref1) !in (Track <: succs)))))) && (all ref2:(one Track)|((ref2 in Exit) => (all ref3:(one Signal)|((ref2 -> ref3) !in (Track <: signals))))));1;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));20
1154;this/inv3;(all ref0:(one univ)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in Track)) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));14
1155;this/inv4;(all ref0:(one Track)|((ref0 = Entry) => (no ((Track <: succs) . ref0))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});6
1156;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (^ (Track <: succs))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));6
1157;this/inv1;((Entry in (Track . (* (Track <: succs)))) && (Exit in (Track . (* (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));12
1158;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 != ref1) && ((ref0 -> ref1) !in (Track <: succs)))))) && (all ref2:(one Track)|((ref2 in Exit) => (all ref3:(one Semaphore),ref4:(one Signal),ref5:(one Speed)|(((ref2 -> ref3) !in (Track <: signals)) && ((ref2 -> ref4) !in (Track <: signals)) && ((ref2 -> ref5) !in (Track <: signals)))))));1;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));31
1159;this/inv5;(all ref0:(one Track)|((! (lone ((~ (Track <: succs)) . Track))) => (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
1160;this/inv3;(all ref0:(one Exit)|((ref0 !in (ref0 . (Track <: succs))) && (Entry !in (ref0 . (Track <: succs))) && (Junction !in (ref0 . (Track <: succs)))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));15
1161;this/inv1;(some ref0:(one Track)|(((# (ref0 . (Track <: succs))) > 0) && (ref0 in ((Entry + Junction) + Exit))));1;((some Entry) && (some Exit));14
1162;this/inv1;(some (Exit & Track));1;(some (Entry -> Exit));4
1163;this/inv3;(all ref0:(one univ)|((ref0 in Entry) || ((ref0 in Exit) => (no (ref0 . (Track <: succs)))) || (ref0 in Junction)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));13
1164;this/inv6;(all ref0:(one Track)|((ref0 in Entry) <=> (Speed in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|(some ref1:(one Speed)|((ref0 in Entry) <=> (ref1 in (ref0 . (Track <: signals))))));5
1165;this/inv5;(all ref0:(one Track)|((! (lone ((~ (Track <: succs)) . ref0))) => (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));5
1166;this/inv2;(some ref0:(one Signal)|(ref0 in (Track . (Track <: signals))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));5
1167;this/inv3;(all ref0:(one Track)|((ref0 = Exit) => ((# (ref0 . (^ (Track <: succs)))) = 0)));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));10
1168;this/inv3;(some ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Signal),ref2:(one Track)|((ref0 != ref2) && ((ref0 -> ref1) !in (Track <: signals)) && ((ref0 -> ref2) !in (Track <: succs))))));1;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));22
1169;this/inv6;((Track <: signals) in (Entry some->one Speed));1;(Entry in ((Track <: signals) . Speed));4
1170;this/inv1;(all ref0:(one Entry),ref1:(one Exit)|((some (ref0 & ref1)) && (some (ref0 & ref1))));1;((some (Entry & Track)) && (some (Exit & Track)));10
1171;this/inv3;(all ref0:(one univ)|((ref0 in Entry) || ((ref0 in Exit) => (no (ref0 . (^ (Track <: succs))))) || (ref0 in Junction)));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));13
1172;this/inv3;(all ref0:(one Track)|((ref0 = Exit) => ((# (ref0 . (Track <: succs))) = 0)));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
1173;this/inv1;(all ref0:(one Track)|(one ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
1174;this/inv1;((Entry in (Track . (^ (Track <: succs)))) || (Exit in (Track . (^ (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));12
1175;this/inv1;(all ref0:(one Entry),ref1:(one Exit)|((some ref0) && (some ref1)));1;((some Entry) && (some Exit));6
1176;this/inv2;(all ref0:(one Track)|((ref0 . (Track <: signals)) in (Track . (Track <: signals))));1;((Track <: signals) in (Track one-> Signal));7
1177;this/inv2;(one ref0:(one Track)|(some (ref0 . (Track <: signals))));1;(all ref0:(one Signal)|(one (ref0 . (~ (Track <: signals)))));5
1178;this/inv1;(((Entry in Track) && (Entry in (Track . (^ (Track <: succs)))) && (Exit in Track)) || (Exit in (Track . (^ (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));19
1179;this/inv3;(all ref0:(one Track)|(one ref1:(one Track)|((ref0 = Exit) => (ref1 !in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
1180;this/inv3;((Exit . (Track <: succs)) !in Track);1;(Exit = (Track - ((Track <: succs) . Track)));6
1181;this/inv1;(((Entry in (Track . (^ (Track <: succs)))) && (Exit in Track)) || (Entry in Track) || (Exit in (Track . (^ (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));19
1182;this/inv3;(all ref0:(one Exit),ref1:(one Signal),ref2:(one Track)|((ref0 != ref2) => (((ref0 -> ref1) !in (Track <: signals)) && ((ref0 -> ref2) !in (Track <: succs)))));1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));19
1183;this/inv6;(all ref0:(one Speed),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) <=> (ref1 in Entry)));1;(all ref0:(one Entry)|(some ref1:(one Signal)|(((ref0 -> ref1) in (Track <: signals)) && (ref1 in Speed))));10
1184;this/inv1;(some ref0:(one Entry),ref1:(one Exit)|(all ref2:(one Track)|((ref0 in ref2) && (ref1 in ref2))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));9
1185;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 = Exit) => (ref1 !in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
1186;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 = Exit) => (no ((ref0 . (Track <: succs)) & ref1))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));11
1187;this/inv1;(all ref0:(one Entry),ref1:(one Exit),ref2:(one Track)|((ref0 in ref2) && (ref1 in ref2)));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));9
1188;this/inv3;(all ref0:(one Track)|(ref0 in Entry));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
1189;this/inv3;((Exit . (Track <: succs)) in Track);1;(Exit = (Track - ((Track <: succs) . Track)));6
1190;this/inv1;((Entry in Track) || (Entry in (Track . (^ (Track <: succs)))) || (Exit in Track) || (Exit in (Track . (^ (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));18
1191;this/inv4;(all ref0:(one Track),ref1:(one (Track - ref0))|((no (ref0 & (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 & (Track . (Track <: succs)))) <=> (ref0 in Entry)));5
1192;this/inv1;((Entry in Track) && (Entry in (Track . (^ (Track <: succs)))) && (Exit in Track) && (Exit in (Track . (^ (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));18
1193;this/inv3;(all ref0:(one Exit),ref1:(one Signal),ref2:(one Track)|((ref0 -> ref2) !in (Track <: succs)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));11
1194;this/inv3;(all ref0:(one ((Track - Junction) - Entry))|(no ((Track <: succs) . ref0)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1195;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));11
1196;this/inv8;(all ref0:(one Entry)|(some ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));4
1197;this/inv3;(all ref0:(one ((Track - Junction) - Entry))|(ref0 !in (ref0 . (Track <: succs))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));7
1198;this/inv3;(all ref0:(one ((Track - Entry) - Junction))|((no (ref0 . (Track <: succs))) && (ref0 !in (ref0 . (Track <: succs)))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (no (Exit . (Track <: succs))));9
1199;this/inv1;(all ref0:(one Track)|((ref0 in (Entry + Junction)) => (((# ((ref0 . (Track <: succs)) & Entry)) > 1) && ((# ((ref0 . (Track <: succs)) & Exit)) > 1))));1;(((# Entry) > 0) && ((# Exit) > 0));15
1200;this/inv3;(all ref0:(one Exit)|(ref0 !in (ref0 . (^ (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));7
1201;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Signal),ref2:(one Track)|((ref0 != ref2) && ((ref0 -> ref1) !in (Track <: signals)) && ((ref2 -> ref0) !in (Track <: succs))))));1;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));22
1202;this/inv3;(all ref0:(one Exit)|((# (ref0 . (^ (Track <: succs)))) = 0));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));7
1203;this/inv3;(all ref0:(one Track),ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));8
1204;this/inv1;((Entry = (Track . (^ (Track <: succs)))) || (Exit = (Track . (^ (Track <: succs)))));1;(some (Entry -> Exit));13
1205;this/inv4;(all ref0:(one Track)|((no ((^ (Track <: succs)) . ref0)) => (ref0 in Entry)));1;(all ref0:(one Track)|((no ((^ (Track <: succs)) . ref0)) <=> (ref0 in Entry)));4
1206;this/inv3;((no (Track . (^ (Track <: succs)))) <=> (Track in Exit));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));5
1207;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((some ref1:(one Entry)|(ref0 != ref1)) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
1208;this/inv3;(all ref0:(one Exit)|((ref0 . (Track <: succs)) in none));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));6
1209;this/inv1;(all ref0:(one Track)|((ref0 in ((Entry + Junction) + Exit)) => (((# ((ref0 . (Track <: succs)) & Entry)) > 0) && ((# ((ref0 . (Track <: succs)) & Exit)) > 0))));1;(((# Entry) > 0) && ((# Exit) > 0));17
1210;this/inv2;(some ref0:(one Track)|(all ref1:(one Track)|((ref0 . (Track <: signals)) != (ref1 . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));8
1211;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => ((all ref1:(one Entry)|(ref0 != ref1)) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
1212;this/inv3;(some ref0:(one Exit)|(all ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (no (ref1 . (Track <: succs))))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));14
1213;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track)|(ref0 in ((Track <: succs) . ref1))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1214;this/inv3;(all ref0:(one Track)|((! (no (ref0 . (Track <: succs)))) <=> (ref0 = Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));5
1215;this/inv3;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) => ((all ref1:(one Entry)|(ref0 != ref1)) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));9
1216;this/inv3;(all ref0:(one (Track - Exit))|(lone (ref0 . (Track <: succs))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1217;this/inv3;(all ref0:(one Exit)|(((ref0 !in Entry) && (ref0 !in Junction)) => ((no (ref0 . (^ (Track <: succs)))) && (ref0 !in (ref0 . (^ (Track <: succs)))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));19
1218;this/inv3;(all ref0:(one ((Track - Junction) - Entry))|((# (ref0 . (Track <: succs))) = 0));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
1219;this/inv10;(one (((Track - ((^ (Track <: succs)) . Junction)) . (Track <: signals)) :> Semaphore));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));8
1220;this/inv3;(all ref0:(one ((Track - Junction) - Entry))|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));4
1221;this/inv3;(all ref0:(one Exit)|(((ref0 !in Entry) && (ref0 !in Junction)) => (no (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));12
1222;this/inv1;(all ref0:(one Track)|((some ref0) => (((ref0 . (^ (Track <: succs))) = Entry) && ((ref0 . (^ (Track <: succs))) = Exit))));1;((some Entry) && (some Exit));16
1223;this/inv3;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) => ((all ref1:(one Entry),ref2:(one Junction)|((ref0 != ref1) && (ref0 != ref2))) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));14
1224;this/inv10;(one (((Track - ((~ (Track <: succs)) . Junction)) . (Track <: signals)) :> Semaphore));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));8
1225;this/inv4;(all ref0:(one Entry)|((# ((Track <: succs) . ref0)) = 0));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) <=> (ref0 in Entry)));6
1226;this/inv3;(all ref0:(one univ)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 !in Entry) && (ref0 !in Junction)) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));11
1227;this/inv1;(all ref0:(one Track)|((((ref0 . (^ (Track <: succs))) = Entry) || (ref0 = Entry)) && (((ref0 . (^ (Track <: succs))) = Exit) || (ref0 = Exit))));1;((some Entry) && (some Exit));21
1228;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));4
1229;this/inv10;(all ref0:(one Track)|(one ref1:(one Semaphore)|((Junction in (ref0 . (Track <: succs))) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));9
1230;this/inv9;(all ref0:(one Track)|(some ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (all ref2:(one Signal)|((ref0 -> ref2) !in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
1231;this/inv6;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|((ref0 in Entry) => (ref1 in Speed))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))))));8
1232;this/inv3;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) => ((ref0 !in Entry) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));8
1233;this/inv10;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (one ((Track <: signals) . Semaphore))));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));9
1234;this/inv6;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|((ref0 in Entry) <=> (ref1 in Speed))));1;(all ref0:(one Track)|(some ref1:(one Speed)|((ref0 in Entry) <=> (ref1 in (ref0 . (Track <: signals))))));8
1235;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (ref0 !in (ref0 . (Track <: succs)))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});11
1236;this/inv3;(all ref0:(one Track)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 !in (ref0 . (^ (Track <: succs))))) => ((ref0 !in Entry) && (ref0 !in Junction) && (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));18
1237;this/inv4;(all ref0:(one univ)|(((no ((Track <: succs) . ref0)) && (ref0 in Track)) => (ref0 in Entry)));1;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) <=> (ref0 in Entry)));8
1238;this/inv2;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (no ((ref0 . (Track <: signals)) & (ref1 . (Track <: signals))))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));14
1239;this/inv3;(all ref0:(one Track)|(((no (ref0 . (^ (Track <: succs)))) && (ref0 !in (ref0 . (^ (Track <: succs))))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));11
1240;this/inv9;(all ref0:(one Track)|(some ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore))))));1;(all ref0:(one Track)|((all ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Junction))) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore)))));8
1241;this/inv1;(all ref0:(one Entry),ref1:(one Exit)|(one ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
1242;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref1 !in (ref0 . (^ (Track <: succs)))) => (no (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));12
1243;this/inv8;(((Entry . (* (Track <: succs))) & Exit) = Exit);1;(all ref0:(one Entry)|(((ref0 . (* (Track <: succs))) & Exit) = Exit));3
1244;this/inv3;(all ref0:(one Track)|((ref0 in Entry) => (no (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
1245;this/inv1;(all ref0:(one Entry)|((one Entry) && (one Exit)));1;((some Entry) && (some Exit));5
1246;this/inv4;(all ref0:(one univ)|(((no ((Track <: succs) . ref0)) && (ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in Track)) => (ref0 in Entry)));1;(all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) <=> (ref0 in Entry)));14
1247;this/inv8;(all ref0:(one Entry)|(some ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
1248;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (all ref2:(one Signal)|(ref2 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
1249;this/inv1;(one ref0:(one Track)|(ref0 in (Entry & Exit)));1;(some (Entry -> Exit));6
1250;this/inv9;(all ref0:(one Track)|(some ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 in Speed))))));1;(all ref0:(one Track)|((all ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Junction))) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore)))));12
1251;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in ((ref1 . (Track <: succs)) . (integer/next[]))) && (ref0 in ((ref2 . (Track <: succs)) . (integer/next[]))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
1252;this/inv8;(all ref0:(one Entry)|(some ref1:(one (Exit - Entry))|(ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
1253;this/inv1;(all ref0:(one Entry)|((some Entry) && (some Exit)));1;((some Entry) && (some Exit));1
1254;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) => (ref1 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));11
1255;this/inv2;(all ref0:(one Signal)|(ref0 in ((Track . (^ (Track <: succs))) . (Track <: signals))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));8
1256;this/inv1;(one ref0:(one Entry)|(ref0 in Track));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));5
1257;this/inv8;(all ref0:(one (Entry - Exit))|(some ref1:(one (Exit - Entry))|(ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));4
1258;this/inv1;(some ref0:(one Track)|(ref0 in (Entry & Exit)));1;(some (Entry -> Exit));6
1259;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (^ (Track <: succs)))) => (all ref2:(one Signal)|(ref2 !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
1260;this/inv4;(all ref0:(one Entry)|(((ref0 !in Exit) || (ref0 in Exit)) && ((ref0 !in Junction) || (ref0 in Junction)) && (no (ref0 . (^ (Track <: succs))))));1;((all ref0:(one Track)|((no ((Track <: succs) . ref0)) => (ref0 in Entry))) && (no ((Track <: succs) . Entry)));21
1261;this/inv5;(all ref0:(one Track)|(((# ((^ (Track <: succs)) . ref0)) > 1) => (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));5
1262;this/inv2;(all ref0:(one Signal)|(lone ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));4
1263;this/inv4;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Entry) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));6
1264;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 !in Exit) => (some (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));5
1265;this/inv4;(all ref0:(one Entry)|(((ref0 !in Exit) || (ref0 in Exit)) && ((ref0 !in Junction) || (ref0 in Junction)) && (no ((Track <: succs) . ref0))));1;(all ref0:(one Track)|(((no ((Track <: succs) . ref0)) => (ref0 in Entry)) && ((ref0 in Entry) => (no ((Track <: succs) . ref0)))));18
1266;this/inv9;(all ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (all ref2:(one Semaphore)|((ref0 -> ref2) !in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
1267;this/inv8;(all ref0:(one Track)|((ref0 in (Entry - Exit)) => ((((ref0 . (^ (Track <: succs))) in Exit) && (ref0 in (Exit - Entry))) => ((ref0 . (^ (Track <: succs))) in Entry))));1;(all ref0:(one Track),ref1:(one (Track - ref0))|(((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs))))));20
1268;this/inv5;(all ref0:(one Track)|(((lone ((Track <: succs) . ref0)) && (lone (ref0 . (Track <: succs)))) <=> (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));10
1269;this/inv8;(all ref0:(one Track)|((ref0 in (Entry - Exit)) => ((((ref0 . (^ (Track <: succs))) in Exit) && (ref0 in (Exit - Entry))) => (((^ (Track <: succs)) . ref0) in Entry))));1;(all ref0:(one Track),ref1:(one Track)|(((ref0 in Exit) && (ref1 in Entry)) => (ref0 in (ref1 . (* (Track <: succs))))));22
1270;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref1 -> ref0) in (Track <: signals)) && (ref1 = ref2) && ((ref2 -> ref0) in (Track <: signals))));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));14
1271;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))) <=> (! ((ref1 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));16
1272;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 !in Exit) => (one (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));7
1273;this/inv2;(all ref0:(one Signal)|(some ref1:(one Track)|(ref0 in ((Track <: signals) . ref1))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));6
1274;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (all ref2:(one Semaphore)|(! ((ref1 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));10
1275;this/inv9;(all ref0:(one Track),ref1:(one (Junction - ref0))|((ref1 in (ref0 . (Track <: succs))) => (Semaphore in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));10
1276;this/inv2;(all ref0:(one Signal),ref1:(one Track)|((ref0 -> ref1) in (Track <: signals)));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));6
1277;this/inv9;(! (some ref0:(one Junction),ref1:(one Track)|((some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))) && ((ref1 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));17
1278;this/inv3;(all ref0:(one Track),ref1:(one Track)|((ref0 !in Exit) => (one (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));7
1279;this/inv3;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) => ((Track - ref0) in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1280;this/inv9;(! (some ref0:(one Track)|(all ref1:(one Junction)|((some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))) && ((ref0 -> ref1) in (Track <: succs))))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));15
1281;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => ((# (ref0 . (^ (Track <: succs)))) = 0)));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));10
1282;this/inv9;(all ref0:(one Track),ref1:(one (Junction - ref0))|((ref1 !in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));7
1283;this/inv2;(all ref0:(one Signal)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2))));1;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2))) && (all ref3:(one Signal)|(some ref4:(one Track)|(ref3 in (ref4 . (Track <: signals))))));14
1284;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (no (Entry & Exit)) && (no (Entry & Junction)) && (no (Exit & Junction)));1;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));19
1285;this/inv2;(all ref0:(one Signal)|(one ref1:(one Track),ref2:(one Track)|(ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));5
1286;this/inv9;(all ref0:(one Track),ref1:(one (Junction - ref0))|((ref1 !in (ref0 . (^ (Track <: succs)))) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));8
1287;this/inv9;(! (some ref0:(one Junction),ref1:(one Track)|((some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))) && (ref0 in (ref1 . (^ (Track <: succs)))))));1;(all ref0:(one Track)|((ref0 in ((Track <: signals) . Semaphore)) => (ref0 in ((Track <: succs) . Junction))));16
1288;this/inv6;(all ref0:(one Entry)|((ref0 in Track) => (some (Track . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));8
1289;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (no (Entry & Exit)) && (no (Entry & Junction)) && (no ((Entry & Junction) & Exit)) && (no (Exit & Junction)));1;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));25
1290;this/inv2;(all ref0:(one Track),ref1:(one Track)|(no (((ref0 . (Track <: signals)) + ((ref0 . (^ (Track <: succs))) . (Track <: signals))) & ((ref1 . (Track <: signals)) + ((ref1 . (^ (Track <: succs))) . (Track <: signals))))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));23
1291;this/inv9;(! (some ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) && (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
1292;this/inv4;(all ref0:(one Track)|((((# (ref0 . (Track <: succs))) = 0) => (ref0 in Entry)) && ((ref0 in Entry) => ((# (ref0 . (Track <: succs))) = 0))));1;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) = 0) => (ref0 in Entry)) && ((ref0 in Entry) => ((# ((Track <: succs) . ref0)) = 0))));6
1293;this/inv2;(all ref0:(one Track),ref1:(one Track)|(lone (((ref0 . (Track <: signals)) + ((ref0 . (^ (Track <: succs))) . (Track <: signals))) & ((ref1 . (Track <: signals)) + ((ref1 . (^ (Track <: succs))) . (Track <: signals))))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));23
1294;this/inv6;(all ref0:(one Entry)|((ref0 in Track) => (some (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));6
1295;this/inv2;(all ref0:(one Signal)|(one ref1:(one Track)|(ref1 in ref0)));1;(all ref0:(one Signal)|(one ref1:(one Track)|((ref1 -> ref0) in (Track <: signals))));6
1296;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (one (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));8
1297;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 != ref1) && (ref1 !in (ref0 . (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));10
1298;this/inv5;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
1299;this/inv2;(all ref0:(one Signal)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals))) && (ref1 = ref2))));1;(all ref0:(one Signal)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: signals)))));14
1300;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (all ref2:(one Semaphore)|(ref2 !in (ref1 . (^ (Track <: signals)))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
1301;this/inv2;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . ((^ (Track <: succs)) . (Track <: signals)))) && (ref0 in (ref2 . ((^ (Track <: succs)) . (Track <: signals))))) => (ref1 = ref2)));1;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2))) && (all ref3:(one Signal)|(some ref4:(one Track)|(ref3 in (ref4 . (Track <: signals))))));20
1302;this/inv9;(all ref0:(one Track)|(! (some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));12
1303;this/inv3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) => (ref0 in Exit)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
1304;this/inv5;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) > 0) => (ref0 in Junction)) && ((ref0 in Junction) => ((# ((Track <: succs) . ref0)) > 0))));1;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) > 1) => (ref0 in Junction)) && ((ref0 in Junction) => ((# ((Track <: succs) . ref0)) > 1))));2
1305;this/inv5;(all ref0:(one Track)|((some ref1:(one Track)|(ref1 in (ref0 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
1306;this/inv9;(all ref0:(one Track),ref1:(one (Junction - ref0))|((ref1 !in (ref0 . (^ (Track <: succs)))) => (Semaphore !in ((ref0 . (^ (Track <: signals))) :> Signal))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));11
1307;this/inv2;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . ((^ (Track <: succs)) . (Track <: signals)))) && (ref0 in (ref2 . ((^ (Track <: succs)) . (Track <: signals))))) => (ref1 = ref2))) && (Signal in Track));1;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2))) && (all ref3:(one Signal)|(some ref4:(one Track)|(ref3 in (ref4 . (Track <: signals))))));20
1308;this/inv5;(all ref0:(one Track)|((1 < (# ((Track <: succs) . ref0))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((2 < (# ((Track <: succs) . ref0))) <=> (ref0 in Junction)));2
1309;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (^ (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));11
1310;this/inv5;((# (Junction . (Track <: succs))) > 2);1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));7
1311;this/inv2;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . ((^ (Track <: succs)) . (Track <: signals)))) && (ref0 in (ref2 . ((^ (Track <: succs)) . (Track <: signals))))) => (ref1 = ref2))) && (all ref3:(one Signal)|(ref3 in Track)));1;((all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: signals))) && (ref0 in (ref2 . (Track <: signals)))) => (ref1 = ref2))) && (all ref3:(one Signal)|(some ref4:(one Track)|(ref3 in (ref4 . (Track <: signals))))));19
1312;this/inv6;(all ref0:(one Track)|(some ref1:(one Signal)|(((ref0 in Entry) && (ref1 in Speed)) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals))))));8
1313;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});13
1314;this/inv5;(all ref0:(one Track)|((! (lone (ref0 & (Track . (Track <: succs))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));6
1315;this/inv4;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((ref0 in Entry) => (ref0 !in (ref1 . (^ (Track <: succs)))))));1;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((ref0 !in (Track . (^ (Track <: succs)))) <=> (ref0 in Entry))));14
1316;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((! (ref0 in (ref1 . (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));10
1317;this/inv5;(all ref0:(one Track)|((! (lone (ref0 & (Track . (^ (Track <: succs)))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
1318;this/inv6;(all ref0:(one Entry)|(some ref1:(one Signal)|((ref1 in Speed) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));8
1319;this/inv5;((# ((Track <: succs) . Junction)) > 1);1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));7
1320;this/inv10;(all ref0:(one Track)|((Junction in (ref0 . (^ (Track <: succs)))) => (Semaphore in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));9
1321;this/inv4;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((ref0 !in (ref1 . (^ (Track <: succs)))) <=> (ref0 in Entry))));1;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((ref0 !in (Track . (^ (Track <: succs)))) <=> (ref0 in Entry))));6
1322;this/inv3;(all ref0:(one Track)|((no (ref0 . (* (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));5
1323;this/inv10;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|((Junction in (ref0 . (^ (Track <: succs)))) => (ref1 in Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));12
1324;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 != ref1)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
1325;this/inv3;(all ref0:(one Exit)|((no (ref0 . (Track <: succs))) || (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
1326;this/inv3;(all ref0:(one Exit),ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs))));1;(Exit = (Track - ((Track <: succs) . Track)));10
1327;this/inv5;(all ref0:(one Track)|((! (lone (((Track <: succs) . Track) & ref0))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));6
1328;this/inv10;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|((Junction in (ref0 . (Track <: succs))) => (ref1 in Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));11
1329;this/inv3;(all ref0:(one Track)|(some ref1:(one Track)|(((no (ref0 . (Track <: succs))) && (ref0 in (ref1 . (^ (Track <: succs))))) => (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1330;this/inv5;(all ref0:(one Junction)|((# (Track . (Track <: succs))) > 2));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));8
1331;this/inv5;(all ref0:(one Junction)|((# (ref0 . (Track <: succs))) > 2));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));7
1332;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction),ref2:(one Semaphore)|((ref1 in ((Track <: succs) . ref0)) => (ref2 !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
1333;this/inv2;(one ref0:(one Track)|((ref0 . (Track <: signals)) in Track));1;((Track <: signals) in (Track one-> Signal));5
1334;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref1 !in (ref2 . (^ (Track <: succs)))) => (ref1 in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));15
1335;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref1 !in (ref2 . (^ (Track <: succs)))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));13
1336;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((no (((Track <: succs) . ref1) & Junction)) <=> (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));8
1337;this/inv2;(one ref0:(one Track)|((ref0 . (Track <: signals)) in (Track . (Track <: signals))));1;((Track <: signals) in (Track one-> Signal));7
1338;this/inv3;(all ref0:(one Track)|((ref0 !in (ref0 . (Track <: succs))) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));5
1339;this/inv3;((all ref0:(one Exit)|(no (ref0 . (Track <: succs)))) && (all ref1:(one Entry)|((ref1 !in Exit) && (ref1 !in Junction))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));13
1340;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref2 . (^ (Track <: succs)))) => (ref1 !in (ref2 . (^ (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
1341;this/inv3;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) => ((ref0 !in Entry) && (ref0 !in Junction))));1;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1342;this/inv2;(all ref0:(one Signal),ref1:(one Track)|(lone (ref1 . (Track <: signals))));1;(all ref0:(one Signal)|(one ((Track <: signals) . ref0)));7
1343;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# ((Track <: succs) . ref0)) > 2)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));10
1344;this/inv3;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . ref0)) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
1345;this/inv6;(all ref0:(one Track)|(one (ref0 . (Track <: signals))));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));6
1346;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));11
1347;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((Junction in (ref0 . (^ (Track <: succs)))) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));10
1348;this/inv1;(lone ref0:(one Entry),ref1:(one Exit)|(ref0 in (Track . (Track <: succs))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 + ref1) in Track));8
1349;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs)))) && (ref2 in (ref1 . (^ (Track <: succs))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
1350;this/inv1;(lone ref0:(one Entry),ref1:(one Exit)|((ref0 in (Track . (Track <: succs))) || (ref1 in (Track . (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));8
1351;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 in ((^ (Track <: succs)) . ref1)) && (ref1 in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 = ref1) || (ref1 in (ref0 . (^ (Track <: succs))))));11
1352;this/inv9;(all ref0:(one Track)|(((ref0 . (^ (Track <: succs))) in Junction) => ((ref0 . (Track <: signals)) in Semaphore)));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => ((ref0 . (Track <: signals)) in (Signal - Semaphore))));8
1353;this/inv1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in (Track . (Track <: succs))) || (ref1 in (Track . (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) || (ref1 in Track)));8
1354;this/inv8;(all ref0:(one Entry)|(Junction !in (ref0 . (^ (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));7
1355;this/inv6;(all ref0:(one Track)|((one (ref0 . (Track <: signals))) <=> (ref0 in Entry)));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));10
1356;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs)))) && (ref2 in (ref1 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));14
1357;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (ref1 !in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));13
1358;this/inv9;(all ref0:(one Track),ref1:(one Track)|(((((ref0 . (^ (Track <: succs))) in Junction) && (ref1 in (ref0 . (^ (Track <: succs))))) => ((ref0 . (Track <: signals)) in Semaphore)) || ((ref1 . (Track <: signals)) in Semaphore)));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => ((ref0 . (Track <: signals)) in (Signal - Semaphore))));22
1359;this/inv9;(all ref0:(one Signal),ref1:(one Track)|((Junction !in (ref1 . (^ (Track <: succs)))) => ((ref0 !in (ref1 . (Track <: signals))) && (ref0 in Semaphore))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));14
1360;this/inv4;(some ref0:(one Track),ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));9
1361;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs)))) && (ref2 in (ref1 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));20
1362;this/inv6;(all ref0:(one Track)|((one ((ref0 . (Track <: signals)) & Speed)) <=> (ref0 in Entry)));1;(all ref0:(one Entry)|(some ((ref0 . (Track <: signals)) & Speed)));8
1363;this/inv5;(all ref0:(one Junction)|((# (ref0 . (~ (Track <: succs)))) > 1));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));6
1364;this/inv5;(Junction = ((Track - Exit) - Entry));1;(Junction = (Track - {ref0:(one Track)|(lone ((Track <: succs) . ref0))}));8
1365;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 !in (ref0 . (^ (Track <: succs)))) && (ref0 in (ref2 . (Track <: succs))) && (ref2 in (ref1 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
1366;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref0 != ref1) && (ref1 in (ref0 . (Track <: succs)))) => (ref0 in Entry)));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));13
1367;this/inv10;(all ref0:(one Track),ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));7
1368;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track),ref3:(one Track)|(((ref0 !in (ref2 . (^ (Track <: succs)))) && (ref3 in (ref2 . (^ (Track <: succs))))) => ((ref1 !in (ref2 . (Track <: signals))) && (ref1 !in (ref3 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));25
1369;this/inv5;(all ref0:(one Track)|(((ref0 in (Track . (Track <: succs))) && (ref0 in (Track . (^ (Track <: succs))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));12
1370;this/inv5;(all ref0:(one Junction)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));2
1371;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && (ref1 in (ref0 & (Track . (Track <: succs)))) && (ref2 in (ref0 & (Track . (Track <: succs)))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));14
1372;this/inv6;(all ref0:(one Track)|((ref0 in Entry) => (one ((ref0 . (Track <: signals)) & Speed))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));4
1373;this/inv5;(Junction = {ref0:(one Track)|(some ((Track <: succs) . ref0))});1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});5
1374;this/inv4;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . ref0)) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));4
1375;this/inv10;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one Track)|((ref2 in (ref1 . (Track <: succs))) => (ref0 in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
1376;this/inv10;(all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|(some ref3:(one Semaphore)|(((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs)))) && (ref2 in (ref1 . (^ (Track <: succs))))) => (ref3 in (ref1 . (Track <: signals))))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));23
1377;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && (ref1 in (ref0 & (Track . (Track <: succs)))) && (ref2 in (ref0 & (Track . (Track <: succs)))))) => (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));16
1378;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals))))) || (no Junction)));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));13
1379;this/inv10;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((ref2 in (ref1 . (Track <: succs))) => ((ref0 in (ref1 . (Track <: signals))) && (ref0 in Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));14
1380;this/inv6;(all ref0:(one Track)|((ref0 in Entry) <=> (some ((ref0 . (Track <: signals)) & Speed))));1;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (Track <: signals)) & Speed))));4
1381;this/inv10;(all ref0:(one Signal),ref1:(one Track),ref2:(one Track)|((ref2 in (ref1 . (Track <: succs))) => ((ref0 in (ref1 . (Track <: signals))) => (ref0 in Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));14
1382;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref1 . (Track <: succs)))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));14
1383;this/inv1;(all ref0:(one Track)|((ref0 in Entry) || (ref0 in Exit) || (some ((ref0 . (Track <: succs)) & Entry)) || (some ((ref0 . (Track <: succs)) & Exit))));1;((some (Entry & Track)) && (some (Exit & Track)));17
1384;this/inv4;(all ref0:(one Entry)|(no (ref0 . (^ (~ (Track <: succs))))));1;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) <=> (ref0 in Entry)));7
1385;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || (((ref0 !in (ref0 . (Track <: succs))) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));20
1386;this/inv3;(all ref0:(one (Track - (Track . (Track <: succs))))|(ref0 in Exit));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
1387;this/inv4;(all ref0:(one Track)|(no ((ref0 . (Track <: succs)) & Entry)));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});8
1388;this/inv10;(all ref0:(one Junction),ref1:(one ((Track <: succs) . ref0))|(some (ref1 . (Track <: signals))));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));7
1389;this/inv5;(all ref0:(one Track)|((ref0 !in Junction) => ((no ((Track <: succs) . ref0)) && (one ((Track <: succs) . ref0)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});14
1390;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));12
1391;this/inv10;(all ref0:(one Junction),ref1:(one Signal),ref2:(one ((Track <: succs) . ref0))|((ref1 in (ref2 . (Track <: signals))) && (ref1 in Semaphore)));1;(all ref0:(one Junction),ref1:(one ((Track <: succs) . ref0))|(some ref2:(one Signal)|((ref2 in (ref1 . (Track <: signals))) && (ref2 in Semaphore))));12
1392;this/inv4;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Entry) => (ref0 !in (ref1 . (Track <: succs)))));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));12
1393;this/inv4;(all ref0:(one Track)|(Entry !in (ref0 . (Track <: succs))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});7
1394;this/inv3;(all ref0:(one (Track - (Track . (Track <: succs))))|(Exit in ref0));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
1395;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || (((one (ref1 . (Track <: succs))) && (one (ref2 . (Track <: succs))) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));23
1396;this/inv3;(all ref0:(one Track)|(Exit !in ((Track <: succs) . ref0)));1;(Exit = (Track - ((Track <: succs) . Track)));7
1397;this/inv3;(all ref0:(one Track)|(some ref1:(one Track)|(all ref2:(one Track)|(((ref0 != ref2) && ((ref0 -> ref1) in (Track <: succs)) && ((ref1 -> ref2) !in (Track <: succs))) => (ref1 in Exit)))));1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));20
1398;this/inv3;(all ref0:(one Track)|(Exit !in (ref0 . (Track <: succs))));1;(Exit = (Track - ((Track <: succs) . Track)));7
1399;this/inv4;(all ref0:(one (Track - Entry))|(Entry !in (ref0 . (Track <: succs))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});7
1400;this/inv9;((all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))))) || ((no Junction) && (no Semaphore)));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));16
1401;this/inv1;(some ref0:(one Entry),ref1:(one Track)|(one ref2:(one Exit)|(((ref0 -> ref1) in (Track <: succs)) && ((ref1 -> ref2) in (Track <: succs)))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
1402;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || ((one (ref1 . (Track <: succs))) && (one (ref2 . (Track <: succs))) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) || ((ref0 in Junction) <=> (ref0 in (Track . (^ (Track <: succs)))))));1;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref1,ref2]) || (((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 in Junction)))) && (all ref3:(one Junction)|((# ((Track <: succs) . ref3)) > 1)));29
1403;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) => (no ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));10
1404;this/inv9;((all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))))) || ((no (Track <: signals)) && (no Junction)));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));16
1405;this/inv4;(all ref0:(one Entry)|(ref0 !in ((Track <: succs) . Entry)));1;((all ref0:(one (Track - Entry))|(some ((Track <: succs) . ref0))) && (no ((Track <: succs) . Entry)));8
1406;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in (Exit & Track))));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
1407;this/inv9;((some Junction) implies (all ref0:(one Junction),ref1:(one Track)|((! ((ref1 -> ref0) in (Track <: succs))) => (! (some ref2:(one Semaphore)|((ref1 -> ref2) in (Track <: signals)))))) else (no (Track <: signals)));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));13
1408;this/inv3;((no (Exit . (Track <: succs))) && (Exit = (Track - (Track . (Track <: succs)))));1;((no (Exit . (Track <: succs))) && (Exit = (Track - {ref0:(one Track)|(some (ref0 . (Track <: succs)))})));4
1409;this/inv9;((Junction . (Track <: succs)) !in (Semaphore . (Track <: signals)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));10
1410;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some (((Track <: succs) . (Track <: succs)) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1411;this/inv3;(all ref0:(one Track)|((ref0 . (Track <: succs)) !in Exit));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
1412;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));14
1413;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in ((Track <: succs) . ref1)) => (ref2 in (ref1 . (Track <: signals))))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));8
1414;this/inv9;(all ref0:(one Track)|((some (Junction <: (ref0 . (Track <: succs)))) => (no ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));8
1415;this/inv9;(all ref0:(one Junction),ref1:(one ((Track <: succs) . ref0))|(some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals)))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));9
1416;this/inv4;(all ref0:(one Entry)|(ref0 !in (Entry . (Track <: succs))));1;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) <=> (ref0 in Entry)));8
1417;this/inv1;(some ref0:(one Entry),ref1:(one Exit),ref2:(one Track)|(((ref0 -> ref2) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs))));1;(some ref0:(one Entry),ref1:(one Exit)|((ref0 in Track) && (ref1 in Track)));13
1418;this/inv4;(all ref0:(one Track)|(no (ref0 & (Track . (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 & (Track . (Track <: succs)))) <=> (ref0 in Entry)));6
1419;this/inv9;((Track - (Junction . (Track <: succs))) !in (Semaphore . (Track <: signals)));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));9
1420;this/inv4;(all ref0:(one Track)|((none in ((Track <: succs) . ref0)) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((no ((Track <: succs) . ref0)) <=> (ref0 in Entry)));5
1421;this/inv3;(none = Exit);1;(Exit = (Track - ((Track <: succs) . Track)));6
1422;this/inv9;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
1423;this/inv9;((Track - ((Track <: succs) . Junction)) !in ((Track <: signals) . Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));5
1424;this/inv9;(all ref0:(one Junction),ref1:(one ((Track <: succs) . ref0))|(no ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals)))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));9
1425;this/inv8;(all ref0:(one Track)|((ref0 in Exit) => (ref0 in (Entry . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));10
1426;this/inv4;(Exit = (Track - {ref0:(one Track)|(no ((Track <: succs) . ref0))}));1;(Entry = (Track - {ref0:(one Track)|(some ((Track <: succs) . ref0))}));6
1427;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((some ref2:(one Junction)|(ref2 in (ref1 . (Track <: succs)))) <=> (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));12
1428;this/inv4;(Entry = (Track - {ref0:(one Track)|(no ((Track <: succs) . ref0))}));1;(Entry = (Track - {ref0:(one Track)|(some ((Track <: succs) . ref0))}));4
1429;this/inv8;((Entry = Exit) || (Exit in (Entry . (^ (Track <: succs)))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));9
1430;this/inv9;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));6
1431;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(Exit in (Entry . (^ (Track <: succs)))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));7
1432;this/inv4;(all ref0:(one Entry)|(no ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))));1;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));9
1433;this/inv3;(all ref0:(one Exit),ref1:(one (Track - ref0))|((ref0 -> ref1) !in (Track <: succs)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
1434;this/inv4;(all ref0:(one Track)|(no ref1:(one Track)|((ref0 in Entry) => (ref0 in (ref1 . (Track <: succs))))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});12
1435;this/inv9;(all ref0:(one Junction)|(no (((ref0 . (~ (Track <: succs))) . (Track <: signals)) & Semaphore)));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));8
1436;this/inv1;(some ref0:(one Track)|((one ((Track <: succs) . ref0)) && (one (ref0 . (Track <: succs)))));1;((some Entry) && (some Exit));13
1437;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));9
1438;this/inv1;(some ref0:(one Track)|((lone ((Track <: succs) . ref0)) && (lone (ref0 . (Track <: succs)))));1;((some Entry) && (some Exit));13
1439;this/inv1;(all ref0:(one Track)|(lone ref1:(one Entry),ref2:(one Exit)|((ref1 in (ref0 . (Track <: succs))) && (ref2 in (ref0 . (Track <: succs))))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
1440;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) && (ref0 in Exit)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));4
1441;this/inv8;(all ref0:(one Track)|((one ((ref0 . (^ (Track <: succs))) & Exit)) <=> (ref0 in Entry)));1;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));11
1442;this/inv3;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) && (Exit in ref0)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
1443;this/inv6;(all ref0:(one Entry)|((ref0 . (Track <: signals)) in Signal));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));5
1444;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in (Track . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));11
1445;this/inv6;(all ref0:(one Entry)|((one (ref0 . (Track <: signals))) && ((ref0 . (Track <: signals)) in Signal)));1;(all ref0:(one Entry)|(some ref1:(one Speed)|(ref1 in (ref0 . (Track <: signals)))));10
1446;this/inv5;(all ref0:(one Track)|((all ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref1 != ref2))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));9
1447;this/inv3;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) && (Exit in ref0)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));8
1448;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in ((Track . (^ (Track <: succs))) - Exit))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));13
1449;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (lone ((ref0 . (^ (Track <: succs))) & Exit))));1;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));11
1450;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((some ref2:(one Junction)|(ref2 !in (ref1 . (Track <: succs)))) <=> (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));12
1451;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) && (ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in ((Track . (^ (Track <: succs))) - Exit))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));14
1452;this/inv8;(Exit in (Entry . (Track <: succs)));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));4
1453;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((all ref2:(one Junction)|(ref2 !in (ref1 . (Track <: succs)))) <=> (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));12
1454;this/inv3;(all ref0:(one Exit)|(no (ref0 . (* (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
1455;this/inv3;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (all ref1:(one Track)|(ref1 !in (ref1 . (Track <: succs)))));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))));7
1456;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in ((Track . (^ (Track <: succs))) - Exit)) && (Entry != Exit)));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));16
1457;this/inv8;(all ref0:(one Track)|((ref0 in Entry) => (some ((ref0 . (^ (Track <: succs))) & Exit))));1;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));11
1458;this/inv3;(all ref0:(one (((Exit & Track) - Junction) - Entry))|(no (ref0 . (Track <: succs))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
1459;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref2 . (Track <: succs))) => (ref1 !in ((ref2 . (Track <: succs)) . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
1460;this/inv9;(all ref0:(one Track)|((Junction !in (ref0 . (Track <: succs))) => ((ref0 . (Track <: signals)) !in Semaphore)));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));8
1461;this/inv3;(all ref0:(one (Exit & Track))|((# (ref0 . (Track <: succs))) = 0));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
1462;this/inv4;(all ref0:(one Track)|(! (some ref1:(one Track)|(((ref1 -> ref0) in (Track <: succs)) => (ref0 in Entry)))));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));9
1463;this/inv3;(all ref0:(one (Exit & Track))|((# ((Track <: succs) . ref0)) = 0));1;(Exit = (Track - ((Track <: succs) . Track)));8
1464;this/inv1;(all ref0:(one Track)|(one ref1:(one Entry),ref2:(one Exit)|(((ref0 -> ref1) in (Track <: succs)) && ((ref0 -> ref2) in (Track <: succs)))));1;(some ref0:(one Track)|((some ref1:(one Track)|(ref1 in Exit)) && (ref0 in Entry)));13
1465;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) => (ref1 in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));14
1466;this/inv4;((all ref0:(one Track)|(! (some ref1:(one Track)|(((ref1 -> ref0) in (Track <: succs)) => (ref0 in Entry))))) && (all ref2:(one Track)|(some ref3:(one Track)|(((ref3 -> ref2) in (Track <: succs)) => (! (ref2 in Entry))))));1;((all ref0:(one Entry),ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref3 -> ref2) !in (Track <: succs))) => (ref2 in Entry))));18
1467;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (ref2 . (^ (Track <: succs)))) <=> (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));13
1468;this/inv3;(all ref0:(one Exit)|((no (ref0 . (Track <: succs))) && (ref0 in Track)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));6
1469;this/inv3;(all ref0:(one Exit)|(ref0 in Track));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));9
1470;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) <=> (ref1 in (ref2 . (Track <: signals)))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));15
1471;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) <=> (ref1 !in (Track . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));13
1472;this/inv3;(((Track <: succs) . Exit) = none);1;(Exit = (Track - ((Track <: succs) . Track)));6
1473;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref2 in (ref0 . (^ (Track <: succs)))) => ((ref2 -> ref1) !in (Track <: signals))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));14
1474;this/inv3;(all ref0:(one (Track - Exit))|(some ((Track <: succs) . ref0)));1;(Exit = (Track - ((Track <: succs) . Track)));8
1475;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) => (ref1 !in (Track . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
1476;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) && (ref0 in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));10
1477;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref2 !in (ref0 . (^ (Track <: succs)))) => ((ref2 -> ref1) !in (Track <: signals))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));13
1478;this/inv3;(all ref0:(one (Track - Exit))|((# ((Track <: succs) . ref0)) > 0));1;(all ref0:(one Track)|((0 > (# (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));10
1479;this/inv8;(all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) && (ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in Exit)));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));11
1480;this/inv8;(all ref0:(one Track)|((ref0 in Entry) && (ref0 in Exit)));1;((Entry -> Exit) in (* (Track <: succs)));10
1481;this/inv3;(all ref0:(one (Track - Exit))|((# (ref0 . (Track <: succs))) > 0));1;(all ref0:(one Track)|((0 > (# (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));8
1482;this/inv10;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) <=> (ref1 in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));12
1483;this/inv10;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref0 in (ref2 . (Track <: succs))) => ((ref2 -> ref1) in (Track <: signals))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));10
1484;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|(((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));15
1485;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|(((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs)) && disj[ref1,ref2])));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(((ref0 -> ref1) in (~ (Track <: succs))) && ((ref0 -> ref2) in (~ (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));18
1486;this/inv3;((all ref0:(one Exit)|((ref0 !in Entry) && (ref0 !in Junction))) && (all ref1:(one Track)|(((# (ref1 . (Track <: succs))) = 0) => (ref1 in Exit))));1;((all ref0:(one Track)|((ref0 in Exit) => ((# (ref0 . (Track <: succs))) = 0))) && (all ref1:(one Track)|(((# (ref1 . (Track <: succs))) = 0) => (ref1 in Exit))));17
1487;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) => (ref0 != ref2))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
1488;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs)) && disj[ref1,ref2])));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));17
1489;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));16
1490;this/inv3;((all ref0:(one Exit)|(ref0 !in Entry)) && (all ref1:(one Track)|(((# (ref1 . (Track <: succs))) = 0) => (ref1 in Exit))));1;(all ref0:(one Exit),ref1:(one Track)|((no (ref0 . (Track <: succs))) && ((no (ref1 . (Track <: succs))) => (ref1 in Exit))));13
1491;this/inv8;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in Entry) && (ref1 in Exit)) => (ref1 in ((Track <: succs) . ref0)))));1;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((ref0 in Entry) && (ref1 in Exit)) => (ref1 in (ref0 . (^ (Track <: succs)))))));7
1492;this/inv1;(all ref0:(one Track)|(((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Entry)) > 0) && ((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Junction)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));23
1493;this/inv8;((Entry . (^ (Track <: succs))) = Exit);1;(all ref0:(one Entry)|(((ref0 + (ref0 . (^ (Track <: succs)))) & Exit) = Exit));7
1494;this/inv8;((Entry . (* (Track <: succs))) = Exit);1;(all ref0:(one Entry)|(((ref0 . (* (Track <: succs))) & Exit) = Exit));5
1495;this/inv1;(all ref0:(one Track)|(((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Exit)) > 0) && ((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Junction)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));25
1496;this/inv3;(all ref0:(one Track)|(no ((Track <: succs) . ref0)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1497;this/inv1;(all ref0:(one Track)|(((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Entry)) > 0) && ((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));21
1498;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && (ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref1) in (Track <: succs)) && disj[ref1,ref2])));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));21
1499;this/inv3;(all ref0:(one Exit)|(no (((Track <: succs) . Track) & ref0)));1;(Exit = (Track - ((Track <: succs) . Track)));8
1500;this/inv5;((! (some ref0:(one Junction)|((ref0 -> ref0) in (Track <: succs)))) && (all ref1:(one Junction)|(some ref2:(one Track),ref3:(one Track)|((ref1 != ref2) && (ref1 != ref3) && (ref2 != ref3) && ((ref2 -> ref1) in (Track <: succs)) && ((ref3 -> ref2) in (Track <: succs)) && disj[ref2,ref3]))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));31
1501;this/inv1;(all ref0:(one Track)|(((# (((^ (Track <: succs)) . ref0) & Exit)) > 0) && ((# ((((^ (Track <: succs)) . ref0) + (ref0 . (^ (Track <: succs)))) & Entry)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));20
1502;this/inv1;(all ref0:(one Track)|(((# ((((* (Track <: succs)) . ref0) + (ref0 . (* (Track <: succs)))) & Entry)) > 0) && ((# ((((* (Track <: succs)) . ref0) + (ref0 . (* (Track <: succs)))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));21
1503;this/inv3;(all ref0:(one Exit)|(no (ref0 & (Track . (Track <: succs)))));1;(Exit = (Track - (Track . (~ (Track <: succs)))));9
1504;this/inv4;(all ref0:(one Entry),ref1:(one Entry)|((ref0 -> ref1) !in (Track <: succs)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));10
1505;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one (Track - Exit))|((ref0 !in (ref2 . (Track <: succs))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
1506;this/inv9;(all ref0:(one Track)|(! (some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
1507;this/inv4;(all ref0:(one Entry),ref1:(one Entry)|((ref0 -> ref1) in (Track <: succs)));1;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));11
1508;this/inv1;(all ref0:(one Track)|(((# ((ref0 . (Track <: succs)) & Entry)) > 0) && ((# ((ref0 . (Track <: succs)) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));9
1509;this/inv3;(all ref0:(one Exit)|(ref0 !in ((Track <: succs) . Track)));1;(Exit = (Track - ((Track <: succs) . Track)));7
1510;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) || (one ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));6
1511;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one ((Track - Exit) - Entry))|((ref0 !in (ref2 . (Track <: succs))) => (ref1 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
1512;this/inv3;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Exit)|(no Entry)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));8
1513;this/inv1;(one ref0:(one Track)|((some (((Track <: succs) . ref0) & Entry)) && (some ((ref0 . (Track <: succs)) & Exit))));1;((some (Entry & Track)) && (some (Exit & Track)));9
1514;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) || (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));6
1515;this/inv1;(all ref0:(one Track)|(((# ((((Track <: succs) . ref0) + (ref0 . (Track <: succs))) & Entry)) > 0) && ((# ((((Track <: succs) . ref0) + (ref0 . (Track <: succs))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));17
1516;this/inv3;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Exit)|(ref1 !in Entry)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));9
1517;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (ref0 !in (Track . (Track <: succs)))));1;(Exit = (Track - (Track . (~ (Track <: succs)))));10
1518;this/inv3;(all ref0:(one Exit)|((# (ref0 . (Track <: succs))) = 1));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));6
1519;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
1520;this/inv1;(all ref0:(one Track)|(((# (((^ (Track <: succs)) . ref0) & Entry)) > 0) && ((# ((ref0 . (^ (Track <: succs))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));11
1521;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || (((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs))))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));17
1522;this/inv1;(all ref0:(one Track)|(((# (((* (Track <: succs)) . ref0) & Entry)) > 0) && ((# ((ref0 . (* (Track <: succs))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));11
1523;this/inv5;((! (some ref0:(one Junction)|((ref0 -> ref0) in (Track <: succs)))) && (! (some ref1:(one Junction)|(lone (ref1 . (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});14
1524;this/inv9;(all ref0:(one Junction),ref1:(one Junction),ref2:(one Semaphore),ref3:(one Track)|((! disj[ref0,ref1]) || (((ref0 + ref1) !in (ref3 . (Track <: succs))) => (ref2 !in (ref3 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));18
1525;this/inv1;(all ref0:(one Track)|(((# ((((* (Track <: succs)) . ref0) + ref0) & Entry)) > 0) && ((# ((ref0 + (ref0 . (^ (Track <: succs)))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));15
1526;this/inv3;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Exit)|(ref1 !in Junction)) && (all ref2:(one Exit)|(ref2 !in Entry)));1;(all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) <=> (ref0 in Exit)));13
1527;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one (ref1 . (Track <: succs)))|((ref2 !in Junction) => (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
1528;this/inv5;(! (some ref0:(one Junction)|(lone (ref0 . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});6
1529;this/inv8;(one (Entry & Exit));1;((Entry -> Exit) in (* (Track <: succs)));6
1530;this/inv3;(all ref0:(one (Track - Exit))|(some ref1:(one Track)|(ref1 in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));9
1531;this/inv9;(all ref0:(one Semaphore),ref1:(one (Signal - Junction)),ref2:(one Track)|((ref1 in (ref2 . (Track <: succs))) => (ref0 !in (ref2 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));12
1532;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one (ref1 . (Track <: succs)))|((ref2 !in Junction) => (no ((ref1 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));13
1533;this/inv3;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))) && (all ref2:(one Exit)|(ref2 !in Junction)));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))));12
1534;this/inv3;((all ref0:(one Track)|(ref0 !in (ref0 . (^ (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));1;(all ref0:(one Exit),ref1:(one Track)|((no (ref0 . (Track <: succs))) && ((no (ref1 . (Track <: succs))) => (ref1 in Exit))));8
1535;this/inv3;(all ref0:(one ((Track - Entry) - Junction))|(ref0 in Exit));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));7
1536;this/inv5;(! (some ref0:(one Junction)|(lone (ref0 . (^ (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});7
1537;this/inv1;(all ref0:(one Track)|(((# ((((^ (Track <: succs)) . ref0) + ref0) & Entry)) > 0) && ((# ((ref0 + (ref0 . (^ (Track <: succs)))) & Exit)) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));15
1538;this/inv5;(all ref0:(one Track)|((ref0 in (Track . (^ (Track <: succs)))) => ((# (Track . (^ (Track <: succs)))) > 1)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));16
1539;this/inv3;(all ref0:(one Track)|(((ref0 !in Junction) && (ref0 in Exit)) => (no (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));12
1540;this/inv9;(all ref0:(one Semaphore),ref1:(one Track),ref2:(one (Track - Junction))|((ref2 in (ref1 . (Track <: succs))) => (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));10
1541;this/inv5;(all ref0:(one Junction)|(! (one ((Track <: succs) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});6
1542;this/inv4;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 in Entry)));1;(all ref0:(one Track)|((! (some ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) <=> (ref0 in Entry)));9
1543;this/inv3;((all ref0:(one Track)|(((# (ref0 . (Track <: succs))) = 0) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))) && (all ref2:(one Exit)|(ref2 !in Junction)) && (all ref3:(one Exit)|(ref3 !in Entry)));1;((all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (ref0 in Exit))) && (all ref1:(one Exit)|(no (ref1 . (Track <: succs)))));16
1544;this/inv5;(all ref0:(one Junction)|((# (ref0 . (^ (Track <: succs)))) > 1));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));8
1545;this/inv5;(all ref0:(one Junction)|((ref0 in (Track . (^ (Track <: succs)))) => ((# (Track . (^ (Track <: succs)))) > 1)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));16
1546;this/inv3;(all ref0:(one ((Track - Entry) - Junction))|(no ((Track <: succs) . ref0)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1547;this/inv9;(all ref0:(one Track),ref1:(one (Track - Junction))|((ref1 !in (ref0 . (Track <: succs))) => (no (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));8
1548;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => ((no (ref0 . (Track <: succs))) && (ref0 in (Track . (Track <: succs))))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1549;this/inv5;(all ref0:(one Exit)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1550;this/inv3;((all ref0:(one Exit)|(no (ref0 . (Track <: succs)))) && (all ref1:(one Exit)|(ref1 !in Junction)) && (all ref2:(one Exit)|(ref2 !in Entry)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));15
1551;this/inv1;(all ref0:(one Track)|(((# Entry) > 0) && ((# Exit) > 0)));1;(((# Entry) > 0) && ((# Exit) > 0));1
1552;this/inv5;(all ref0:(one Junction)|(! (lone ((((Track <: succs) . ref0) & Track) - ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});8
1553;this/inv3;(all ref0:(one ((Track - Entry) - Junction))|((no (ref0 . (Track <: succs))) || (ref0 in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1554;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) = Junction) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));5
1555;this/inv5;((all ref0:(one Exit)|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 != ref3) && (ref2 != ref4) && (ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));1;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));16
1556;this/inv9;(all ref0:(one Junction)|((ref0 -> Semaphore) !in (Track <: signals)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));11
1557;this/inv3;(all ref0:(one ((Track - Entry) - Junction))|((no ((ref0 . (Track <: succs)) & Track)) || (ref0 in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
1558;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in ((Track <: succs) . ref1)) => (no (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
1559;this/inv9;(all ref0:(one Track)|((no (((Track <: succs) . ref0) & Junction)) => (no (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));6
1560;this/inv9;(all ref0:(one (Track - Junction))|((ref0 -> Semaphore) !in (Track <: signals)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));11
1561;this/inv5;((all ref0:(one Exit)|(lone ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 != ref3) && (ref2 != ref4) && (ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));1;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));16
1562;this/inv1;(Exit in Track);1;(some (Entry -> Exit));5
1563;this/inv9;(all ref0:(one Track),ref1:(one (Track - Junction))|(((ref0 -> ref1) in (Track <: succs)) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));12
1564;this/inv10;((((Track <: succs) . Junction) -> Semaphore) in (Track <: signals));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));4
1565;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) => (no (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));8
1566;this/inv3;(all ref0:(one Track)|((some (ref0 . (Track <: succs))) => (ref0 !in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1567;this/inv9;(all ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 !in Junction)) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));15
1568;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) != Junction) => ((ref0 . (Track <: signals)) != Semaphore)));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));8
1569;this/inv10;(((Junction . (Track <: succs)) -> Semaphore) in (Track <: signals));1;(((Track <: succs) . Junction) in ((Track <: signals) . Semaphore));6
1570;this/inv3;(all ref0:(one Track)|((no (ref0 . (~ (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));5
1571;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) != Junction) => (no ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));5
1572;this/inv9;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((((ref0 -> ref1) !in (Track <: succs)) && (ref1 !in Junction)) => (Semaphore !in (ref0 . (Track <: signals)))) || ((ref0 -> ref1) !in (Track <: succs))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));25
1573;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) || ((ref0 in Exit) => (ref0 in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
1574;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (^ (Track <: succs)))) => ((ref1 -> ref2) in (Track <: signals)))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));13
1575;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) || ((ref0 in Exit) => (ref0 in ((Track <: succs) . ref0)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
1576;this/inv3;((all ref0:(one Exit)|((# (ref0 . (Track <: succs))) = 0)) && (all ref1:(one Exit)|(ref1 !in Junction)));1;((all ref0:(one Exit)|((# (ref0 . (Track <: succs))) = 0)) && (all ref1:(one (Track - Exit))|(some ref2:(one Track)|(ref2 in (ref1 . (Track <: succs))))));11
1577;this/inv9;(all ref0:(one Track)|(no ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (no ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));9
1578;this/inv8;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Entry)) => ((ref0 . (^ (Track <: succs))) = Entry)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));10
1579;this/inv9;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((Junction !in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((all ref1:(one Junction)|(ref1 !in (ref0 . (Track <: succs)))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));14
1580;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (ref0 !in ((Track <: succs) . ref0))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});9
1581;this/inv3;(all ref0:(one Exit)|((ref0 -> Track) !in (Track <: succs)));1;(Exit = (Track - ((Track <: succs) . Track)));9
1582;this/inv8;(all ref0:(one Exit)|(ref0 in Entry));1;((Entry -> Exit) in (* (Track <: succs)));6
1583;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => ((ref0 . (^ (Track <: succs))) = Entry)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));8
1584;this/inv9;(all ref0:(one Track)|(Semaphore !in (ref0 . (Track <: signals))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));9
1585;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((ref1 -> ref0) !in (Track <: signals)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));12
1586;this/inv8;(all ref0:(one Track)|((some ((ref0 & Entry) & Exit)) || ((some (ref0 & Entry)) => (some ((ref0 . (^ (Track <: succs))) & Exit)))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));16
1587;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (ref0 !in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));9
1588;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((ref1 -> ref0) in (Track <: signals)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));10
1589;this/inv9;(all ref0:(one (Track - Exit))|((no ((ref0 . (Track <: succs)) & Junction)) => (no (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));4
1590;this/inv8;(all ref0:(one (1 . (^ (Track <: succs)))),ref1:(one Track)|((some (ref1 & Entry)) => (some (ref0 & Exit))));1;((Entry -> Exit) in (* (Track <: succs)));13
1591;this/inv9;(all ref0:(one Track)|(((no ((ref0 . (Track <: succs)) & Junction)) => (no (ref0 . (Track <: signals)))) || (ref0 in Exit)));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));8
1592;this/inv3;(all ref0:(one Exit)|((no (ref0 . (Track <: succs))) && (ref0 in (Track . (Track <: succs)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1593;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (one ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));6
1594;this/inv8;(all ref0:(one Track),ref1:(one (ref0 . (^ (Track <: succs))))|((some (ref0 & Entry)) => (some (ref1 & Exit))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));11
1595;this/inv9;(all ref0:(one Track)|((no ((ref0 . (~ (Track <: succs))) & Junction)) => (no (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));5
1596;this/inv10;(all ref0:(one Track)|(one (((Track <: succs) . ref0) & Junction)));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));8
1597;this/inv4;(all ref0:(one Track)|((ref0 in Entry) => (no (ref0 . (~ (Track <: succs))))));1;(Entry = {ref0:(one Track)|(no ((Track <: succs) . ref0))});9
1598;this/inv8;(all ref0:(one Track),ref1:(one (ref0 . (^ (Track <: succs))))|(((ref0 != ref1) && (some (ref0 & Entry))) => (some (ref1 & Exit))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));15
1599;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref0 in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));8
1600;this/inv10;(all ref0:(one Track)|(((ref0 . (~ (Track <: succs))) in Junction) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));5
1601;this/inv8;(all ref0:(one Track),ref1:(one (ref0 . (^ (Track <: succs))))|(((ref0 != ref1) && (some (ref0 & Entry))) => (ref1 = Exit)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));14
1602;this/inv5;(all ref0:(one Junction)|(lone ((Track <: succs) . ref0)));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});5
1603;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(((ref1 !in (Track . (^ (Track <: succs)))) && (ref1 in Junction)) => (ref0 !in (Track . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));14
1604;this/inv8;(all ref0:(one Track),ref1:(one (ref0 . (^ (Track <: succs))))|(((ref0 != ref1) && (some (ref0 & Entry))) => (Exit in ref1)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));12
1605;this/inv10;(all ref0:(one Track)|((some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction))) => (some ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) && (ref2 !in Semaphore)))));1;(all ref0:(one Track)|((some ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction))) => (some ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) && (ref2 in Semaphore)))));8
1606;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|(((ref1 !in (Track . (^ (Track <: succs)))) && (ref1 in Junction)) <=> (ref0 !in (Track . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));16
1607;this/inv10;(all ref0:(one Track)|((one ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));4
1608;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track)|((ref1 !in (ref2 . (Track <: signals))) <=> (ref2 !in (ref2 . (Track <: succs)))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));13
1609;this/inv9;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 !in (ref1 . (Track <: succs))) => (Semaphore !in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));10
1610;this/inv8;(all ref0:(one Track),ref1:(one (ref0 . (^ (Track <: succs))))|((some (ref0 & Entry)) => (Exit in ref1)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));8
1611;this/inv8;(all ref0:(one Entry)|((ref0 . (^ (Track <: succs))) in (ref0 + Exit)));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));7
1612;this/inv5;(all ref0:(one (Track - Junction))|(one ref1:(one Track)|(ref1 in (ref1 . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1613;this/inv3;(all ref0:(one Track)|(((no ((Track <: succs) . ref0)) || (ref0 in ((Track <: succs) . ref0))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1614;this/inv8;(all ref0:(one Entry)|((ref0 + (ref0 . (^ (Track <: succs)))) in Exit));1;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));4
1615;this/inv8;(all ref0:(one Track),ref1:(one (ref0 . (^ (Track <: succs))))|((some (ref0 & Entry)) => (ref1 = Exit)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));10
1616;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (Semaphore !in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));9
1617;this/inv9;(all ref0:(one Junction),ref1:(one Semaphore),ref2:(one Track),ref3:(one Track)|((! disj[ref2,ref3]) || (((ref3 !in (ref2 . (Track <: succs))) && (ref3 in Junction)) => (ref1 !in (ref2 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));22
1618;this/inv5;(all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1619;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => ((ref0 . (^ (Track <: succs))) = Exit)));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));8
1620;this/inv5;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 != ref3) && (ref2 != ref4) && (ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));1;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));16
1621;this/inv3;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) && (ref0 in (ref0 . (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));10
1622;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((ref0 in Exit) => (ref1 !in (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
1623;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|(ref0 in (ref1 . (^ (~ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));8
1624;this/inv8;((all ref0:(one Entry)|((ref0 . (^ (Track <: succs))) in Exit)) && (all ref1:(one Track)|((ref1 in Entry) => (ref1 !in Exit))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));14
1625;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) !in (Track <: succs)) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));4
1626;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));4
1627;this/inv3;(all ref0:(one Track)|(some ref1:(one (Track - ref0))|((ref0 in Exit) => (ref1 !in (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (Track <: succs)))));10
1628;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => ((some (ref0 & Exit)) || (Exit in (ref0 . (^ (Track <: succs)))))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));9
1629;this/inv5;(all ref0:(one Junction)|(! (lone ((^ (Track <: succs)) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});5
1630;this/inv8;((all ref0:(one Entry)|((ref0 . (^ (Track <: succs))) in Exit)) && (all ref1:(one Entry)|(ref1 !in Exit)));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));10
1631;this/inv5;(all ref0:(one Track)|(! (lone ((Track <: succs) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});4
1632;this/inv8;(all ref0:(one Track)|((some (ref0 & Entry)) => ((some (ref0 & Exit)) || (Exit in (ref0 . (* (Track <: succs)))))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));7
1633;this/inv3;(all ref0:(one Track)|(some ref1:(one (Track - ref0))|((ref0 in Exit) => (ref1 !in (ref0 . (^ (Track <: succs)))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));10
1634;this/inv4;(all ref0:(one Entry)|(ref0 !in ((Track <: succs) . Track)));1;(Entry = (Track - ((~ (Track <: succs)) . Track)));8
1635;this/inv3;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track),ref3:(one Track)|(((ref2 -> ref3) !in (Track <: succs)) => (ref2 in Exit))));1;((all ref0:(one Exit),ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));8
1636;this/inv8;(all ref0:(one Entry)|(Exit in ((ref0 . (^ (Track <: succs))) & Exit)));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));6
1637;this/inv3;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track),ref3:(one Track)|(((ref2 -> ref3) !in (Track <: succs)) => (ref2 in Exit))));1;((all ref0:(one Track)|((ref0 in Exit) => (all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))))) && (all ref2:(one Track)|((all ref3:(one Track)|((ref2 -> ref3) !in (Track <: succs))) => (ref2 in Exit))));8
1638;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no (((ref0 . (Track <: succs)) & Track) - ref0))));1;(Exit = (Track - ((Track <: succs) . Track)));12
1639;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (((ref0 in Entry) && (ref0 in Exit) && (ref0 in Junction)) || (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));15
1640;this/inv3;(all ref0:(one Track)|(((ref0 in Entry) && (ref0 in Exit) && (ref0 in Junction)) || ((no (ref0 . (Track <: succs))) => (ref0 in Exit))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));15
1641;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (no (((ref0 . (^ (Track <: succs))) & Track) - ref0))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));12
1642;this/inv3;(all ref0:(one Track)|(((ref0 in (ref0 . (Track <: succs))) && (ref0 in Entry) && (ref0 in Exit) && (ref0 in Junction)) || ((no (ref0 . (Track <: succs))) => (ref0 in Exit))));1;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));19
1643;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in (ref0 . (Track <: succs))))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));10
1644;this/inv3;(all ref0:(one Track)|(((ref0 in Exit) => (no ((ref0 . (Track <: succs)) & Track))) && (some (ref0 . (~ (Track <: succs))))));1;((all ref0:(one Track)|((ref0 in Exit) => (no (ref0 . (Track <: succs))))) && (all ref1:(one Track)|((no (ref1 . (Track <: succs))) => (ref1 in Exit))));14
1645;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (Semaphore !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));11
1646;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));8
1647;this/inv3;(all ref0:(one Exit)|(((ref0 in (ref0 . (Track <: succs))) && (ref0 in Entry) && (ref0 in Junction)) || (no (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));14
1648;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in ((Track <: succs) . ref1)) => (Semaphore !in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));11
1649;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (ref0 !in ((Track <: succs) . ref0))));1;(Exit = (Track - ((Track <: succs) . Track)));11
1650;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (ref0 !in (Exit . (Track <: succs)))));1;(Exit = (Track - ((Track <: succs) . Track)));11
1651;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in ((Track <: succs) . ref1)) <=> (Semaphore !in (ref1 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 !in ((Track <: succs) . Junction)) => (ref0 !in ((Track <: signals) . Semaphore))));13
1652;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (((ref0 in (ref0 . (Track <: succs))) && (ref0 in Entry) && (ref0 in Junction)) || (no (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));18
1653;this/inv3;(all ref0:(one Track)|((((ref0 in (ref0 . (Track <: succs))) && (ref0 in Entry) && (ref0 in Junction)) || (no (ref0 . (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));17
1654;this/inv4;(all ref0:(one (Track - Entry))|(Entry !in (ref0 . (^ (Track <: succs)))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));7
1655;this/inv3;(all ref0:(one Track)|((ref0 in (ref0 . (Track <: succs))) => (ref0 !in Exit)));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));8
1656;this/inv3;(all ref0:(one Track)|((Exit in (ref0 . (Track <: signals))) => (no (ref0 . (Track <: succs)))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));11
1657;this/inv8;(all ref0:(one Entry)|((ref0 . (^ (Track <: succs))) in (Exit - ref0)));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));7
1658;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((! disj[ref0,ref1,ref2]) || (((ref2 in (ref0 . (Track <: succs))) && (ref2 in (ref1 . (Track <: succs)))) => (ref2 = Junction))));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));26
1659;this/inv3;(all ref0:(one Track)|((((ref0 in (ref0 . (Track <: succs))) && (ref0 in Entry) && (ref0 in Exit) && (ref0 in Junction)) || (no (ref0 . (Track <: succs)))) => (ref0 in Exit)));1;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));19
1660;this/inv3;(all ref0:(one Signal),ref1:(one Track)|(((ref0 = Exit) && (ref0 in (ref1 . (Track <: signals)))) => (no (ref1 . (Track <: succs)))));1;(Exit = (Track - ((Track <: succs) . Track)));17
1661;this/inv9;(all ref0:(one Track)|((Junction in ((Track <: succs) . ref0)) => (no ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((ref0 in (Track - ((Track <: succs) . Junction))) => (no ((ref0 . (Track <: signals)) & Semaphore))));8
1662;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref0 in ref1) => (ref0 !in (ref1 . (Track <: succs)))));1;(Exit = (Track - ((Track <: succs) . Track)));14
1663;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: signals)) & Semaphore)) <=> (Junction in (ref0 . (Track <: succs)))));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));12
1664;this/inv3;(all ref0:(one Track)|(((ref0 . (Track <: signals)) = Exit) => ((ref0 . (Track <: signals)) = Exit)));1;(all ref0:(one Track)|((none = (ref0 . (Track <: succs))) <=> (ref0 in Exit)));12
1665;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref1 -> ref0) in (Track <: succs)) => (ref0 in Exit)));1;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in none) <=> (ref0 in Exit)));9
1666;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 & ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|(disj[ref1,ref2] && ((ref1 + ref2) in ((Track <: succs) . ref0)))) <=> (ref0 in Junction)));8
1667;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref1 -> ref0) !in (Track <: succs)) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));8
1668;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some (ref0 . (^ (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});12
1669;this/inv3;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) => (Exit in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((no (ref0 . (Track <: succs))) <=> (ref0 in Exit)));8
1670;this/inv3;(all ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) in (Track <: succs)) && ((ref1 -> ref0) !in (Track <: succs))) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));14
1671;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 != Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
1672;this/inv5;((all ref0:(one Junction)|((ref0 !in (Track . (Track <: succs))) => (ref0 in Entry))) && (all ref1:(one Entry)|(ref1 !in (Track . (Track <: succs)))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));19
1673;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some (Track . (^ (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});12
1674;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 in (ref0 . (^ (~ (Track <: succs))))) && (ref2 in (ref0 . (^ (~ (Track <: succs))))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 in (ref0 . (~ (Track <: succs)))) && (ref2 in (ref0 . (~ (Track <: succs)))) && disj[ref1,ref2])) <=> (ref0 in Junction)));11
1675;this/inv3;(all ref0:(one Track)|((Exit in Track) => (no (ref0 . (Track <: succs)))));1;(Exit = (Track - ((Track <: succs) . Track)));8
1676;this/inv3;(all ref0:(one Track),ref1:(one Track)|((((ref0 -> ref1) !in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs))) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
1677;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => (some ref1:(one Track),ref2:(one Track)|((ref1 in (ref0 . (^ (~ (Track <: succs))))) && (ref2 in (ref0 . (^ (~ (Track <: succs)))))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 in (ref0 . (~ (Track <: succs)))) && (ref2 in (ref0 . (~ (Track <: succs)))) && disj[ref1,ref2])) <=> (ref0 in Junction)));19
1678;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref0 !in (ref1 . (* (Track <: succs)))) <=> (ref0 in Entry)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref0 !in (ref1 . (Track <: succs)))) <=> (ref0 in Entry)));5
1679;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref0 != Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));10
1680;this/inv8;(all ref0:(one Exit)|(some ref1:(one Entry)|(ref0 in (ref1 . (* (Track <: succs))))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 -> ref1) in (* (Track <: succs))));6
1681;this/inv5;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 in (ref0 . (~ (Track <: succs)))) && (ref2 in (ref0 . (~ (Track <: succs)))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 in (ref0 . (~ (Track <: succs)))) && (ref2 in (ref0 . (~ (Track <: succs)))) && disj[ref1,ref2])) <=> (ref0 in Junction)));9
1682;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((((ref0 -> ref1) !in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs))) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
1683;this/inv3;(all ref0:(one Track),ref1:(one (Track - ref0))|((((ref0 -> ref1) in (Track <: succs)) && ((ref1 -> ref0) !in (Track <: succs))) => (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|(ref1 !in (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));14
1684;this/inv3;(all ref0:(one Track),ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));12
1685;this/inv5;(all ref0:(one Track)|((ref0 in (some (Track . (^ (Track <: succs))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));10
1686;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one (ref1 . (Track <: signals)))|(((ref0 != ref1) && (ref0 in (ref1 . (Track <: succs)))) => (ref2 in Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));14
1687;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) => (ref0 in Junction))) && (all ref3:(one Junction),ref4:(one Track),ref5:(one Track)|((ref3 in (ref4 . (Track <: succs))) => ((ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)))));1;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));31
1688;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one (ref1 . (Track <: signals)))|((ref0 in (ref1 . (Track <: succs))) => (ref2 in Semaphore))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
1689;this/inv5;(all ref0:(one Track)|(((# (Track . (^ (Track <: succs)))) > int[((# ((Track . (^ (Track <: succs))) - ref0)) + 1)]) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));14
1690;this/inv5;(all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) => ((ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));13
1691;this/inv3;(all ref0:(one Track),ref1:(one Track)|((Exit in ref0) => (ref0 !in (ref1 . (^ (Track <: succs))))));1;(Exit = (Track - ((Track <: succs) . Track)));13
1692;this/inv5;(all ref0:(one Track)|((int[((# ((Track . (^ (Track <: succs))) - ref0)) + 1)] < (# (Track . (^ (Track <: succs))))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((2 < (# ((Track <: succs) . ref0))) <=> (ref0 in Junction)));14
1693;this/inv3;(all ref0:(one Track)|((ref0 in Exit) => (0 > (# (ref0 . (Track <: succs))))));1;(all ref0:(one Track)|((0 > (# (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));10
1694;this/inv5;(all ref0:(one Track)|(((# (Track . (^ (Track <: succs)))) > int[((# ((Track . (^ (Track <: succs))) - ref0)) + 2)]) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));14
1695;this/inv3;(all ref0:(one Track)|(some ref1:(one Track)|((Exit in ref0) => (ref0 !in (ref1 . (^ (Track <: succs)))))));1;(Exit = (Track - ((Track <: succs) . Track)));13
1696;this/inv5;((all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) => ((ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track)|(((ref3 != ref4) && (ref3 !in (ref4 . (Track <: succs)))) => (ref3 !in Junction))));1;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));27
1697;this/inv5;((all ref0:(one Track)|((ref0 in Junction) <=> (ref0 in (Track . (^ (Track <: succs)))))) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|((! disj[ref1,ref2,ref3]) || (((ref1 in (ref2 . (^ (Track <: succs)))) && (ref1 in (ref3 . (^ (Track <: succs))))) => (ref1 in Junction)))));1;((all ref0:(one Junction)|((# ((Track <: succs) . ref0)) > 1)) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|((! disj[ref2,ref3]) || (((ref2 + ref3) in ((Track <: succs) . ref1)) => (ref1 in Junction)))));35
1698;this/inv5;(all ref0:(one Junction)|((# (Track . (^ (Track <: succs)))) > int[((# ((Track . (^ (Track <: succs))) - ref0)) + 2)]));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));18
1699;this/inv3;(all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) => (Exit in ref0)));1;(all ref0:(one Track)|((no (ref0 . (^ (Track <: succs)))) <=> (ref0 in Exit)));11
1700;this/inv3;(all ref0:(one Exit),ref1:(one Track)|((ref0 in (ref1 . (Track <: signals))) => (no ((Track <: succs) . ref1))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));14
1701;this/inv3;(all ref0:(one univ)|((all ref1:(one univ)|(((ref0 -> ref1) !in (Track <: succs)) && (ref1 in Track))) <=> (ref0 in Exit)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref0 -> ref1) !in (Track <: succs))) <=> (ref0 in Exit)));8
1702;this/inv10;(all ref0:(one Track)|((lone ((ref0 . (Track <: succs)) & Junction)) => (lone ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));6
1703;this/inv9;(no ((((Track <: succs) . Junction) . (Track <: signals)) & Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));4
1704;this/inv5;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) => (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));4
1705;this/inv3;(all ref0:(one Exit)|(0 > (# (ref0 . (Track <: succs)))));1;(all ref0:(one Track)|((0 > (# (ref0 . (Track <: succs)))) <=> (ref0 in Exit)));6
1706;this/inv10;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (lone ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));4
1707;this/inv3;((all ref0:(one Track)|((ref0 !in (Track . (^ (Track <: succs)))) => (Exit in ref0))) && (all ref1:(one Track)|((Exit in ref1) => (ref1 !in (Track . (^ (Track <: succs)))))));1;(all ref0:(one Track)|(((no (ref0 . (Track <: succs))) => (ref0 in Exit)) && ((ref0 in Exit) => (no (ref0 . (Track <: succs))))));19
1708;this/inv5;(all ref0:(one Junction)|(int[((# ((Track . (^ (Track <: succs))) - ref0)) + 1)] < (# (Track . (^ (Track <: succs))))));1;(all ref0:(one Track)|((2 < (# ((Track <: succs) . ref0))) <=> (ref0 in Junction)));18
1709;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) => (ref0 in Junction))) && (all ref3:(one Junction),ref4:(one Track),ref5:(one Track)|((ref3 in (ref4 . (Track <: succs))) => ((ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)))) && (all ref6:(one Track)|((ref6 !in (Track . (Track <: succs))) => (ref6 !in Junction))));1;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in (ref4 . (Track <: succs))) && (ref3 in (ref5 . (Track <: succs))) && (ref4 != ref5)) => (ref3 in Junction))));41
1710;this/inv10;(some ((((Track <: succs) . Junction) . (Track <: signals)) & Semaphore));1;(all ref0:(one ((Track <: succs) . Junction))|(some ((ref0 . (Track <: signals)) & Semaphore)));5
1711;this/inv3;(all ref0:(one Track),ref1:(one Track)|((Exit in ref0) => (ref1 !in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((ref0 !in Exit) <=> (some (ref0 . (^ (Track <: succs))))));12
1712;this/inv9;(all ref0:(one Track)|((no ((ref0 . (* (Track <: succs))) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));3
1713;this/inv5;(all ref0:(one Track),ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));9
1714;this/inv5;((all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) => ((ref0 != ref1) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))) && (all ref3:(one Track)|((ref3 !in (Track . (Track <: succs))) => (ref3 !in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));25
1715;this/inv5;(all ref0:(one Track)|(some ref1:(one (Track - ref0)),ref2:(one (Track - ref0))|(((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));9
1716;this/inv9;(all ref0:(one Track)|((! (some ((ref0 . (^ (Track <: succs))) & Junction))) => (! (some ((ref0 . (Track <: signals)) & Semaphore)))));1;(all ref0:(one Track)|((! (some ((ref0 . (Track <: succs)) & Junction))) => (! (some ((ref0 . (Track <: signals)) & Semaphore)))));3
1717;this/inv4;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 0) <=> (ref0 in Entry)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) <=> (ref0 in Entry)));4
1718;this/inv5;(all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));12
1719;this/inv4;(all ref0:(one Track),ref1:(one Track)|((Entry in ref0) => (ref1 !in (ref0 . (^ (Track <: succs))))));1;(Entry = (Track - (Track . (^ (Track <: succs)))));12
1720;this/inv3;((no (Exit . (Track <: succs))) && (some (Entry . (Track <: succs))) && (some (Junction . (Track <: succs))));1;((all ref0:(one (Track - Exit))|(some (ref0 . (Track <: succs)))) && (no (Exit . (Track <: succs))));11
1721;this/inv4;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) < 0) <=> (ref0 in Entry)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) = 0) <=> (ref0 in Entry)));4
1722;this/inv5;((all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 !in Junction))) && (all ref1:(one Track),ref2:(one Track)|(some ref3:(one Track)|(((ref1 != ref2) && (ref1 !in (ref3 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))) && (ref2 != ref3)) => (ref1 !in Junction)))));1;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));32
1723;this/inv4;(all ref0:(one Track),ref1:(one Track)|((ref1 !in (ref0 . (^ (Track <: succs)))) => (Entry in ref0)));1;(all ref0:(one Track)|((all ref1:(one Track)|((ref1 -> ref0) !in (Track <: succs))) <=> (ref0 in Entry)));11
1724;this/inv9;(all ref0:(one Track),ref1:(one Track)|(some ref2:(one Signal)|((((ref0 -> ref1) !in (Track <: succs)) && (ref1 in Junction)) => (((ref0 -> ref2) !in (Track <: signals)) && (ref2 in Semaphore)))));1;(all ref0:(one Track)|((all ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Junction))) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore)))));18
1725;this/inv9;(all ref0:(one Track),ref1:(one (ref0 . (Track <: signals)))|(((ref0 . (Track <: succs)) !in Junction) => (ref1 !in Semaphore)));1;(all ref0:(one Track),ref1:(one (ref0 . (Track <: signals)))|((no ((ref0 . (Track <: succs)) & Junction)) => (ref1 !in Semaphore)));7
1726;this/inv9;(all ref0:(one Track),ref1:(one Track)|(some ref2:(one Signal)|((((ref0 -> ref1) in (Track <: succs)) && (ref1 in Junction)) => (((ref0 -> ref2) in (Track <: signals)) && (ref2 in Semaphore)))));1;(all ref0:(one Track)|((all ref1:(one Track)|(((ref0 -> ref1) in (Track <: succs)) => (ref1 !in Junction))) => (all ref2:(one Signal)|(((ref0 -> ref2) in (Track <: signals)) => (ref2 !in Semaphore)))));14
1727;this/inv5;((all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 !in Junction))) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|(((ref1 != ref2) && (ref1 !in (ref3 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))) && (ref2 != ref3)) <=> (ref1 !in Junction))));1;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));32
1728;this/inv9;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs))))) => (all ref2:(one Semaphore)|(ref2 !in (ref0 . (Track <: signals))))));8
1729;this/inv5;((all ref0:(one Track)|((ref0 !in (Track . (Track <: succs))) => (ref0 !in Junction))) && (all ref1:(one Track),ref2:(one Track),ref3:(one Track)|(((ref1 != ref2) && (ref1 != ref3) && (ref1 !in (ref3 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs))) && (ref2 != ref3)) <=> (ref1 !in Junction))));1;((all ref0:(one ((Track - Junction) - Entry))|(one ref1:(one Track)|(ref0 in (ref1 . (Track <: succs))))) && (all ref2:(one Junction)|(some ref3:(one Track),ref4:(one Track)|((ref2 in (ref3 . (Track <: succs))) && (ref2 in (ref4 . (Track <: succs))) && (ref3 != ref4)))));35
1730;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: succs)) in Junction) => (! (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));8
1731;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (all ref1:(one Semaphore)|(ref1 !in (ref0 . (Track <: signals))))));5
1732;this/inv10;(all ref0:(one Track)|(one ref1:(one (ref0 . (Track <: signals)))|((some ((ref0 . (Track <: succs)) & Junction)) => (ref1 in Semaphore))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));10
1733;this/inv9;(all ref0:(one Track)|(((ref0 . (^ (Track <: succs))) in Junction) => (! (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (! (some ref1:(one Semaphore)|(ref1 in (ref0 . (Track <: signals)))))));9
1734;this/inv9;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) <=> (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (all ref1:(one Semaphore)|(ref1 !in (ref0 . (Track <: signals))))));7
1735;this/inv5;(all ref0:(one Track)|(some ref1:(one Track),ref2:(one Track)|((Junction in ref0) => ((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));14
1736;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((ref0 in Junction) => (((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));17
1737;this/inv10;(all ref0:(one Track)|(some ref1:(one (ref0 . (Track <: signals)))|(((# ((ref0 . (Track <: succs)) & Junction)) > 0) => (ref1 in Semaphore))));1;(all ref0:(one Track)|(((# ((ref0 . (Track <: succs)) & Junction)) > 0) => (some ((ref0 . (Track <: signals)) & Semaphore))));10
1738;this/inv5;(all ref0:(one Track)|((Junction in ref0) => (some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));14
1739;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) => (! (Semaphore in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));15
1740;this/inv5;((all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 != ref1) && (ref0 in ((ref1 . (Track <: succs)) & (ref1 . (Track <: succs)))) && (ref1 != ref2)) => (ref0 in Junction))) && (all ref3:(one Track)|((ref3 !in (Track . (Track <: succs))) => (ref3 !in Junction))) && (all ref4:(one Track),ref5:(one Track),ref6:(one Track)|(((ref4 != ref5) && (ref4 !in (ref6 . (Track <: succs))) && (ref4 in (ref5 . (Track <: succs))) && (ref5 != ref6)) => (ref4 !in Junction))));1;((all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs)))) && (ref1 != ref2)))) && (all ref3:(one Track),ref4:(one Track),ref5:(one Track)|(((ref3 in ((ref4 . (Track <: succs)) & (ref5 . (Track <: succs)))) && (ref4 != ref5)) => (ref3 in Junction))));49
1741;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((ref0 in Junction) => (((ref0 -> ref0) !in (Track <: succs)) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref1 != ref2) && ((ref1 -> ref0) in (Track <: succs)) && ((ref2 -> ref0) in (Track <: succs)))) <=> (ref0 in Junction)));22
1742;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (! (Semaphore in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((! (some ref1:(one Junction)|((ref0 -> ref1) in (Track <: succs)))) => (! (some ref2:(one Semaphore)|((ref0 -> ref2) in (Track <: signals))))));14
1743;this/inv9;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || ((no ((ref0 . (Track <: signals)) & Semaphore)) <=> (no ((ref0 . (Track <: succs)) & ref1)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));18
1744;this/inv5;(all ref0:(one Track)|((Junction in ref0) => (some ref1:(one Track),ref2:(one Track)|((ref0 != ref1) && (ref0 != ref2) && (ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2)))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));20
1745;this/inv9;(all ref0:(one Junction),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (no ((ref1 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((ref0 in (Track - ((Track <: succs) . Junction))) => (no ((ref0 . (Track <: signals)) & Semaphore))));9
1746;this/inv9;(all ref0:(one Track),ref1:(one Track)|((! disj[ref0,ref1]) || (((no ((ref0 . (Track <: succs)) & ref1)) && (ref1 in Junction)) <=> (no ((ref0 . (Track <: signals)) & Semaphore)))));1;(all ref0:(one Track)|((no ((ref0 . (Track <: succs)) & Junction)) => (no ((ref0 . (Track <: signals)) & Semaphore))));16
1747;this/inv5;(all ref0:(one Junction),ref1:(one Track),ref2:(one Track)|(ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});16
1748;this/inv10;(all ref0:(one Track)|(one ref1:(one Semaphore)|(((ref0 . (Track <: succs)) in Junction) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));9
1749;this/inv5;(all ref0:(one Track)|((ref0 in Junction) => ((# (Track . (Track <: succs))) > 1)));1;(all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) <=> (ref0 in Junction)));12
1750;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one (ref0 . (~ (Track <: succs)))),ref2:(one (ref0 . (~ (Track <: succs))))|(ref1 != ref2)) <=> (ref0 in Junction)));14
1751;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|((ref0 in Junction) => (ref0 in ((ref1 . (Track <: succs)) & (ref2 . (Track <: succs))))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});18
1752;this/inv9;(all ref0:(one Semaphore),ref1:(one Track)|((! ((ref1 . (Track <: succs)) in Junction)) => (ref0 !in (ref1 . (Track <: signals)))));1;(all ref0:(one Semaphore),ref1:(one Track)|((no ((ref1 . (Track <: succs)) & Junction)) => (ref0 !in (ref1 . (Track <: signals)))));8
1753;this/inv5;(all ref0:(one Track)|((one ((Track <: succs) . ref0)) => (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));9
1754;this/inv9;(all ref0:(one Junction)|(((ref0 . (Track <: succs)) . (Track <: signals)) !in Semaphore));1;(no (((Track - ((Track <: succs) . Junction)) . (Track <: signals)) :> Semaphore));8
1755;this/inv9;(all ref0:(one Track)|(((ref0 . (Track <: signals)) !in Semaphore) <=> ((ref0 . (^ (Track <: succs))) !in Junction)));1;(((Track <: signals) . Semaphore) in ((Track <: succs) . Junction));12
1756;this/inv5;(all ref0:(one Track)|((lone ((Track <: succs) . ref0)) => (ref0 !in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));7
1757;this/inv10;(all ref0:(one Track),ref1:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (Junction in ref1)) => (Semaphore in (ref0 . (Track <: signals)))));1;(all ref0:(one Track),ref1:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (ref1 in Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));11
1758;this/inv5;(all ref0:(one Junction)|(some ((ref0 . (Track <: succs)) . (Track <: succs))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1759;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: signals)) in Semaphore) <=> (ref0 in ((Track <: succs) . Junction))));1;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));9
1760;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs)))))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));15
1761;this/inv5;(all ref0:(one Junction)|(some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (^ (Track <: succs)))) && (ref0 in (ref2 . (^ (Track <: succs)))) && (ref1 != ref2))));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));12
1762;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: signals)) in Semaphore) && (ref0 in ((Track <: succs) . Junction))));1;(((Track <: signals) . Semaphore) = ((Track <: succs) . Junction));9
1763;this/inv5;(all ref0:(one Track)|(((ref0 !in Exit) && (ref0 in Junction)) <=> (some ((Track <: succs) . ref0))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));13
1764;this/inv10;(all ref0:(one Track)|((ref0 in (Junction . (Track <: succs))) => ((ref0 . (Track <: signals)) in Semaphore)));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));6
1765;this/inv5;(all ref0:(one Track)|(((ref0 !in Entry) && (ref0 !in Exit) && (ref0 in Junction)) <=> (some ((Track <: succs) . ref0))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));16
1766;this/inv10;(all ref0:(one Track)|((ref0 in (Junction . (~ (Track <: succs)))) => ((ref0 . (Track <: signals)) in Semaphore)));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));7
1767;this/inv5;((all ref0:(one Junction)|((# ((Track <: succs) . ref0)) > 2)) && (all ref1:(one Track)|(((# ((Track <: succs) . ref1)) > 2) => (ref1 in Junction))));1;((all ref0:(one Junction)|((# ((Track <: succs) . ref0)) > 1)) && (all ref1:(one Track)|(((# ((Track <: succs) . ref1)) > 1) => (ref1 in Junction))));4
1768;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) && (ref1 in (ref0 . (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));7
1769;this/inv10;(all ref0:(one Track)|((some (ref0 & (Junction . (~ (Track <: succs))))) => ((ref0 . (Track <: signals)) in Semaphore)));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));10
1770;this/inv5;(all ref0:(one ((Track - Entry) - Exit))|((ref0 in Junction) <=> (some ((Track <: succs) . ref0))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});9
1771;this/inv10;(all ref0:(one Track)|((some (((Track <: succs) . Junction) & ref0)) => ((ref0 . (Track <: signals)) in Semaphore)));1;(all ref0:(one Track)|((some (((Track <: succs) . Junction) & ref0)) => (some ((ref0 . (Track <: signals)) & Semaphore))));5
1772;this/inv8;(all ref0:(one Entry),ref1:(one Exit)|((ref0 = ref1) || (ref1 in (ref0 . (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 = ref1) || (ref1 in (ref0 . (^ (Track <: succs))))));5
1773;this/inv5;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) != 1) && (some (ref0 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) != 0) && ((# ((Track <: succs) . ref0)) != 1)) <=> (ref0 in Junction)));8
1774;this/inv8;((Track -> Track) in (^ (Track <: succs)));1;((Entry -> Exit) in (* (Track <: succs)));6
1775;this/inv5;(all ref0:(one Junction)|(ref0 in (Track . (Track <: succs))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});10
1776;this/inv5;(((# ((Track <: succs) . Junction)) > 1) && (all ref0:(one Track)|(((# ((Track <: succs) . ref0)) > 1) => (ref0 in Junction))));1;((all ref0:(one Junction)|((# ((Track <: succs) . ref0)) > 1)) && (all ref1:(one Track)|(((# ((Track <: succs) . ref1)) > 1) => (ref1 in Junction))));9
1777;this/inv5;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) != 0) && ((# ((Track <: succs) . ref0)) != 1) && (some (ref0 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((((# ((Track <: succs) . ref0)) != 0) && ((# ((Track <: succs) . ref0)) != 1)) <=> (ref0 in Junction)));6
1778;this/inv5;(all ref0:(one Junction)|(some (ref0 & (Track . (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});11
1779;this/inv8;(all ref0:(one Track),ref1:(one Track)|(ref1 in (ref0 . (* (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (* (Track <: succs)))));4
1780;this/inv5;(all ref0:(one Track)|((ref0 in (Track . (Track <: succs))) => (ref0 in Junction)));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));10
1781;this/inv8;(Track in (Entry . (* (Track <: succs))));1;((Entry -> Exit) in (* (Track <: succs)));4
1782;this/inv5;(all ref0:(one Junction)|(ref0 in ((Entry . (Track <: succs)) . (^ (Track <: succs)))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});13
1783;this/inv5;(((Entry . (Track <: succs)) . (^ (Track <: succs))) = Junction);1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});10
1784;this/inv5;(all ref0:(one Track)|(lone ref1:(one Track)|((ref1 in (ref0 . (Track <: succs))) => (ref0 in Junction))));1;(all ref0:(one Track)|((! (lone ((Track <: succs) . ref0))) <=> (ref0 in Junction)));11
1785;this/inv10;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (Semaphore in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));6
1786;this/inv8;(all ref0:(one Track),ref1:(one Track)|((ref0 in Entry) => ((ref1 in (ref0 . (^ (Track <: succs)))) && (ref1 in Exit))));1;(all ref0:(one Entry),ref1:(one Exit)|((ref0 != ref1) => (ref1 in (ref0 . (^ (Track <: succs))))));12
1787;this/inv5;(all ref0:(one Track),ref1:(one Track),ref2:(one Track)|(((ref0 in (ref1 . (Track <: succs))) && (ref1 in (ref2 . (Track <: succs)))) <=> (ref0 in Junction)));1;(all ref0:(one Track)|((some ref1:(one Track),ref2:(one Track)|((ref0 in (ref1 . (Track <: succs))) && (ref0 in (ref2 . (Track <: succs))) && (ref1 != ref2))) <=> (ref0 in Junction)));11
1788;this/inv8;(Entry in (Exit . (* (Track <: succs))));1;((Entry -> Exit) in (* (Track <: succs)));2
1789;this/inv5;(all ref0:(one Track)|(ref0 in (Track . (Track <: succs))));1;(Junction = {ref0:(one Track)|(! (lone ((Track <: succs) . ref0)))});10
1790;this/inv5;(all ref0:(one Track)|(((# (ref0 . (^ (Track <: succs)))) > 1) <=> (ref0 in Junction)));1;(all ref0:(one Track)|(((# (ref0 . (~ (Track <: succs)))) > 1) <=> (ref0 in Junction)));4
1791;this/inv10;(all ref0:(one Track)|((((ref0 . (Track <: succs)) !in Exit) && ((ref0 . (Track <: succs)) in Junction)) => (Semaphore in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));14
1792;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(one ref2:(one Semaphore)|((ref1 in (ref0 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));8
1793;this/inv10;(all ref0:(one Track)|(some ref1:(one Junction)|((ref1 !in (ref0 . (Track <: succs))) => (Semaphore !in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((some ref1:(one Junction)|(ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));11
1794;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((no (ref0 . (Track <: signals))) && (ref2 in (ref1 . (Track <: signals))))));1;(all ref0:(one Junction),ref1:(one ((Track <: succs) . ref0))|(some ref2:(one Semaphore)|(ref2 in (ref1 . (Track <: signals)))));11
1795;this/inv10;(all ref0:(one Junction),ref1:(one Track)|((ref0 !in (ref1 . (Track <: succs))) => (Semaphore !in (ref1 . (Track <: signals)))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));11
1796;this/inv10;(all ref0:(one Track)|(some ref1:(one Semaphore)|((ref0 in (Junction . (Track <: succs))) => (ref1 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track)|((ref0 in ((Track <: succs) . Junction)) => (ref0 in ((Track <: signals) . Semaphore))));9
1797;this/inv10;(all ref0:(one Track)|((one (((Track <: succs) . ref0) & Junction)) => (one ((ref0 . (Track <: signals)) & Semaphore))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));8
1798;this/inv10;(all ref0:(one Junction),ref1:(one (Track - Exit))|((ref0 in (ref1 . (Track <: succs))) => (Semaphore in (ref1 . (Track <: signals)))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));7
1799;this/inv8;(no Signal);1;((Entry -> Exit) in (* (Track <: succs)));8
1800;this/inv10;(all ref0:(one (Junction - Exit)),ref1:(one Track)|((ref0 in (ref1 . (Track <: succs))) => (Semaphore in (ref1 . (Track <: signals)))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));7
1801;this/inv8;((all ref0:(one Entry),ref1:(one Exit)|(ref1 in (ref0 . (^ (Track <: succs))))) && (no Signal));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));7
1802;this/inv8;(all ref0:(one Track)|(Track in (ref0 . (^ (Track <: succs)))));1;(all ref0:(one Entry),ref1:(one (Exit - ref0))|(ref1 in (ref0 . (^ (Track <: succs)))));5
1803;this/inv10;(all ref0:(one Junction),ref1:(one Track)|(((ref0 !in Exit) && (ref0 in (ref1 . (Track <: succs)))) => (Semaphore in (ref1 . (Track <: signals)))));1;(all ref0:(one Junction),ref1:(one Track)|(some ref2:(one Semaphore)|((ref0 in (ref1 . (Track <: succs))) => (ref2 in (ref1 . (Track <: signals))))));11
1804;this/inv8;((no Semaphore) && (no Signal) && (no Speed));1;((Entry -> Exit) in (* (Track <: succs)));13
1805;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => ((ref0 . (Track <: signals)) !in Semaphore)));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));8
1806;this/inv10;(all ref0:(one Track)|(((ref0 . (Track <: succs)) !in Junction) => (Semaphore !in (ref0 . (Track <: signals)))));1;(all ref0:(one Track)|((some ((ref0 . (Track <: succs)) & Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));10
1807;this/inv10;(all ref0:(one Track)|(some ref1:(one Track)|(((one (ref0 & Junction)) && (ref0 in (ref1 . (^ (Track <: succs))))) => (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));14
1808;this/inv10;(all ref0:(one Track)|(some ref1:(one Track)|(((one (ref1 & Junction)) && (ref0 in (ref1 . (^ (Track <: succs))))) => (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));12
1809;this/inv10;(all ref0:(one Track)|(some ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Signal)|((ref2 in (ref0 . (Track <: signals))) && (ref2 in Semaphore))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));10
1810;this/inv10;(all ref0:(one Track)|(some ref1:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (some (ref1 & Junction))) => (Semaphore in (ref0 . (Track <: signals))))));1;(all ref0:(one Track),ref1:(one Track)|(((ref1 in (ref0 . (Track <: succs))) && (ref1 in Junction)) => (some ((ref0 . (Track <: signals)) & Semaphore))));12
1811;this/inv10;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (lone ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
1812;this/inv10;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (one ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
1813;this/inv10;(all ref0:(one Track)|(some ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals)))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
1814;this/inv10;(all ref0:(one Track),ref1:(one Track)|(some ref2:(one Semaphore)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (ref2 in (ref0 . (Track <: signals))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref1 & Junction)) && (ref1 in (ref0 . (Track <: succs)))) => (some ref2:(one Semaphore)|(ref2 in (ref0 . (Track <: signals))))));6
1815;this/inv8;(all ref0:(one Track)|((one (ref0 & Exit)) => (Entry in (ref0 . (^ (Track <: succs))))));1;(all ref0:(one Track)|((some (ref0 & Entry)) => (Exit in (ref0 . (* (Track <: succs))))));10
1816;this/inv8;(all ref0:(one Track)|(((no (ref0 & Entry)) && (one (ref0 & Exit))) => (ref0 in (Track . (^ (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit)) && (ref0 != ref1)) => (ref1 in (ref0 . (^ (Track <: succs))))));14
1817;this/inv8;(all ref0:(one Track)|((one (ref0 & Exit)) => (one (ref0 & Entry))));1;(all ref0:(one Entry)|(Exit in (ref0 . (* (Track <: succs)))));13
1818;this/inv8;(all ref0:(one Track)|(((one (ref0 & Exit)) => (one (ref0 & Entry))) || (ref0 in (Track . (^ (Track <: succs))))));1;(all ref0:(one Entry)|(Exit in (ref0 + (ref0 . (^ (Track <: succs))))));16
1819;this/inv8;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit))) => (ref0 in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit)) && (ref0 != ref1)) => (ref1 in (ref0 . (^ (Track <: succs))))));11
1820;this/inv8;(all ref0:(one Track),ref1:(one Track)|((((one (ref0 & Entry)) && (one (ref1 & Exit))) => (ref0 in (ref1 . (^ (Track <: succs))))) || (ref0 = ref1)));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit)) && (ref0 != ref1)) => (ref1 in (ref0 . (^ (Track <: succs))))));15
1821;this/inv8;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit)) && (ref0 != ref1)) => (ref0 in (ref1 . (^ (Track <: succs))))));1;(all ref0:(one Track),ref1:(one Track)|(((one (ref0 & Entry)) && (one (ref1 & Exit)) && (ref0 != ref1)) => (ref1 in (ref0 . (^ (Track <: succs))))));8
